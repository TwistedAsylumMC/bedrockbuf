// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: packets.proto

package bedrockbuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActorEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EventType       uint32 `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventData       int32  `protobuf:"varint,3,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *ActorEventPacket) Reset() {
	*x = ActorEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorEventPacket) ProtoMessage() {}

func (x *ActorEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorEventPacket.ProtoReflect.Descriptor instead.
func (*ActorEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

func (x *ActorEventPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *ActorEventPacket) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ActorEventPacket) GetEventData() int32 {
	if x != nil {
		return x.EventData
	}
	return 0
}

type ActorPickRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId int64  `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	HotBarSlot     uint32 `protobuf:"varint,2,opt,name=hot_bar_slot,json=hotBarSlot,proto3" json:"hot_bar_slot,omitempty"`
	WithData       bool   `protobuf:"varint,3,opt,name=with_data,json=withData,proto3" json:"with_data,omitempty"`
}

func (x *ActorPickRequestPacket) Reset() {
	*x = ActorPickRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorPickRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorPickRequestPacket) ProtoMessage() {}

func (x *ActorPickRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorPickRequestPacket.ProtoReflect.Descriptor instead.
func (*ActorPickRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{1}
}

func (x *ActorPickRequestPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *ActorPickRequestPacket) GetHotBarSlot() uint32 {
	if x != nil {
		return x.HotBarSlot
	}
	return 0
}

func (x *ActorPickRequestPacket) GetWithData() bool {
	if x != nil {
		return x.WithData
	}
	return false
}

type AddActorPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId  int64                 `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	EntityRuntimeId uint64                `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EntityType      string                `protobuf:"bytes,3,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	Position        *Vector3F             `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Velocity        *Vector3F             `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Pitch           float32               `protobuf:"fixed32,6,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw             float32               `protobuf:"fixed32,7,opt,name=yaw,proto3" json:"yaw,omitempty"`
	HeadYaw         float32               `protobuf:"fixed32,8,opt,name=head_yaw,json=headYaw,proto3" json:"head_yaw,omitempty"`
	Attributes      []*Attribute          `protobuf:"bytes,9,rep,name=attributes,proto3" json:"attributes,omitempty"`
	EntityMetadata  map[uint32]*anypb.Any `protobuf:"bytes,10,rep,name=entity_metadata,json=entityMetadata,proto3" json:"entity_metadata,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EntityLinks     []*EntityLink         `protobuf:"bytes,11,rep,name=entity_links,json=entityLinks,proto3" json:"entity_links,omitempty"`
}

func (x *AddActorPacket) Reset() {
	*x = AddActorPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddActorPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActorPacket) ProtoMessage() {}

func (x *AddActorPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActorPacket.ProtoReflect.Descriptor instead.
func (*AddActorPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{2}
}

func (x *AddActorPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *AddActorPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AddActorPacket) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *AddActorPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AddActorPacket) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *AddActorPacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *AddActorPacket) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *AddActorPacket) GetHeadYaw() float32 {
	if x != nil {
		return x.HeadYaw
	}
	return 0
}

func (x *AddActorPacket) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *AddActorPacket) GetEntityMetadata() map[uint32]*anypb.Any {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *AddActorPacket) GetEntityLinks() []*EntityLink {
	if x != nil {
		return x.EntityLinks
	}
	return nil
}

type AddBehaviourTreePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BehaviourTree string `protobuf:"bytes,1,opt,name=behaviour_tree,json=behaviourTree,proto3" json:"behaviour_tree,omitempty"`
}

func (x *AddBehaviourTreePacket) Reset() {
	*x = AddBehaviourTreePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBehaviourTreePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBehaviourTreePacket) ProtoMessage() {}

func (x *AddBehaviourTreePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBehaviourTreePacket.ProtoReflect.Descriptor instead.
func (*AddBehaviourTreePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{3}
}

func (x *AddBehaviourTreePacket) GetBehaviourTree() string {
	if x != nil {
		return x.BehaviourTree
	}
	return ""
}

type AddEntityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityNetworkId uint64 `protobuf:"varint,1,opt,name=entity_network_id,json=entityNetworkId,proto3" json:"entity_network_id,omitempty"`
}

func (x *AddEntityPacket) Reset() {
	*x = AddEntityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEntityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntityPacket) ProtoMessage() {}

func (x *AddEntityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntityPacket.ProtoReflect.Descriptor instead.
func (*AddEntityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{4}
}

func (x *AddEntityPacket) GetEntityNetworkId() uint64 {
	if x != nil {
		return x.EntityNetworkId
	}
	return 0
}

type AddItemActorPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId  int64                 `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	EntityRuntimeId uint64                `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Item            *ItemInstance         `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
	Position        *Vector3F             `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	Velocity        *Vector3F             `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	EntityMetadata  map[uint32]*anypb.Any `protobuf:"bytes,6,rep,name=entity_metadata,json=entityMetadata,proto3" json:"entity_metadata,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FromFishing     bool                  `protobuf:"varint,7,opt,name=from_fishing,json=fromFishing,proto3" json:"from_fishing,omitempty"`
}

func (x *AddItemActorPacket) Reset() {
	*x = AddItemActorPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddItemActorPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemActorPacket) ProtoMessage() {}

func (x *AddItemActorPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemActorPacket.ProtoReflect.Descriptor instead.
func (*AddItemActorPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{5}
}

func (x *AddItemActorPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *AddItemActorPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AddItemActorPacket) GetItem() *ItemInstance {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *AddItemActorPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AddItemActorPacket) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *AddItemActorPacket) GetEntityMetadata() map[uint32]*anypb.Any {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *AddItemActorPacket) GetFromFishing() bool {
	if x != nil {
		return x.FromFishing
	}
	return false
}

type AddPaintingPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId  int64     `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	EntityRuntimeId uint64    `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Position        *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Direction       int32     `protobuf:"varint,4,opt,name=direction,proto3" json:"direction,omitempty"`
	Title           string    `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *AddPaintingPacket) Reset() {
	*x = AddPaintingPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPaintingPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPaintingPacket) ProtoMessage() {}

func (x *AddPaintingPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPaintingPacket.ProtoReflect.Descriptor instead.
func (*AddPaintingPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{6}
}

func (x *AddPaintingPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *AddPaintingPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AddPaintingPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AddPaintingPacket) GetDirection() int32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *AddPaintingPacket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AddPlayerPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid                    string                `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username                string                `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	EntityUniqueId          int64                 `protobuf:"varint,3,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	EntityRuntimeId         uint64                `protobuf:"varint,4,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	PlatformChatId          string                `protobuf:"bytes,5,opt,name=platform_chat_id,json=platformChatId,proto3" json:"platform_chat_id,omitempty"`
	Position                *Vector3F             `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`
	Velocity                *Vector3F             `protobuf:"bytes,7,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Pitch                   float32               `protobuf:"fixed32,8,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw                     float32               `protobuf:"fixed32,9,opt,name=yaw,proto3" json:"yaw,omitempty"`
	HeadYaw                 float32               `protobuf:"fixed32,10,opt,name=head_yaw,json=headYaw,proto3" json:"head_yaw,omitempty"`
	HeldItem                *ItemInstance         `protobuf:"bytes,11,opt,name=held_item,json=heldItem,proto3" json:"held_item,omitempty"`
	EntityMetadata          map[uint32]*anypb.Any `protobuf:"bytes,12,rep,name=entity_metadata,json=entityMetadata,proto3" json:"entity_metadata,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Flags                   uint32                `protobuf:"varint,13,opt,name=flags,proto3" json:"flags,omitempty"`
	CommandPermissionLevel  uint32                `protobuf:"varint,14,opt,name=command_permission_level,json=commandPermissionLevel,proto3" json:"command_permission_level,omitempty"`
	ActionPermissions       uint32                `protobuf:"varint,15,opt,name=action_permissions,json=actionPermissions,proto3" json:"action_permissions,omitempty"`
	PermissionLevel         uint32                `protobuf:"varint,16,opt,name=permission_level,json=permissionLevel,proto3" json:"permission_level,omitempty"`
	CustomStoredPermissions uint32                `protobuf:"varint,17,opt,name=custom_stored_permissions,json=customStoredPermissions,proto3" json:"custom_stored_permissions,omitempty"`
	PlayerUniqueId          int64                 `protobuf:"varint,18,opt,name=player_unique_id,json=playerUniqueId,proto3" json:"player_unique_id,omitempty"`
	EntityLinks             []*EntityLink         `protobuf:"bytes,19,rep,name=entity_links,json=entityLinks,proto3" json:"entity_links,omitempty"`
	DeviceId                string                `protobuf:"bytes,20,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	BuildPlatform           int32                 `protobuf:"varint,21,opt,name=build_platform,json=buildPlatform,proto3" json:"build_platform,omitempty"`
}

func (x *AddPlayerPacket) Reset() {
	*x = AddPlayerPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPlayerPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayerPacket) ProtoMessage() {}

func (x *AddPlayerPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayerPacket.ProtoReflect.Descriptor instead.
func (*AddPlayerPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{7}
}

func (x *AddPlayerPacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddPlayerPacket) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddPlayerPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *AddPlayerPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AddPlayerPacket) GetPlatformChatId() string {
	if x != nil {
		return x.PlatformChatId
	}
	return ""
}

func (x *AddPlayerPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *AddPlayerPacket) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *AddPlayerPacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *AddPlayerPacket) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *AddPlayerPacket) GetHeadYaw() float32 {
	if x != nil {
		return x.HeadYaw
	}
	return 0
}

func (x *AddPlayerPacket) GetHeldItem() *ItemInstance {
	if x != nil {
		return x.HeldItem
	}
	return nil
}

func (x *AddPlayerPacket) GetEntityMetadata() map[uint32]*anypb.Any {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *AddPlayerPacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *AddPlayerPacket) GetCommandPermissionLevel() uint32 {
	if x != nil {
		return x.CommandPermissionLevel
	}
	return 0
}

func (x *AddPlayerPacket) GetActionPermissions() uint32 {
	if x != nil {
		return x.ActionPermissions
	}
	return 0
}

func (x *AddPlayerPacket) GetPermissionLevel() uint32 {
	if x != nil {
		return x.PermissionLevel
	}
	return 0
}

func (x *AddPlayerPacket) GetCustomStoredPermissions() uint32 {
	if x != nil {
		return x.CustomStoredPermissions
	}
	return 0
}

func (x *AddPlayerPacket) GetPlayerUniqueId() int64 {
	if x != nil {
		return x.PlayerUniqueId
	}
	return 0
}

func (x *AddPlayerPacket) GetEntityLinks() []*EntityLink {
	if x != nil {
		return x.EntityLinks
	}
	return nil
}

func (x *AddPlayerPacket) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AddPlayerPacket) GetBuildPlatform() int32 {
	if x != nil {
		return x.BuildPlatform
	}
	return 0
}

type AddVolumeEntityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId    uint64                `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EntityMetadata     map[string]*anypb.Any `protobuf:"bytes,2,rep,name=entity_metadata,json=entityMetadata,proto3" json:"entity_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	EncodingIdentifier string                `protobuf:"bytes,3,opt,name=encoding_identifier,json=encodingIdentifier,proto3" json:"encoding_identifier,omitempty"`
	InstanceIdentifier string                `protobuf:"bytes,4,opt,name=instance_identifier,json=instanceIdentifier,proto3" json:"instance_identifier,omitempty"`
	EngineVersion      string                `protobuf:"bytes,5,opt,name=engine_version,json=engineVersion,proto3" json:"engine_version,omitempty"`
}

func (x *AddVolumeEntityPacket) Reset() {
	*x = AddVolumeEntityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVolumeEntityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVolumeEntityPacket) ProtoMessage() {}

func (x *AddVolumeEntityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVolumeEntityPacket.ProtoReflect.Descriptor instead.
func (*AddVolumeEntityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{8}
}

func (x *AddVolumeEntityPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AddVolumeEntityPacket) GetEntityMetadata() map[string]*anypb.Any {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *AddVolumeEntityPacket) GetEncodingIdentifier() string {
	if x != nil {
		return x.EncodingIdentifier
	}
	return ""
}

func (x *AddVolumeEntityPacket) GetInstanceIdentifier() string {
	if x != nil {
		return x.InstanceIdentifier
	}
	return ""
}

func (x *AddVolumeEntityPacket) GetEngineVersion() string {
	if x != nil {
		return x.EngineVersion
	}
	return ""
}

type AdventureSettingsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags                   uint32 `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	CommandPermissionLevel  uint32 `protobuf:"varint,2,opt,name=command_permission_level,json=commandPermissionLevel,proto3" json:"command_permission_level,omitempty"`
	ActionPermissions       uint32 `protobuf:"varint,3,opt,name=action_permissions,json=actionPermissions,proto3" json:"action_permissions,omitempty"`
	PermissionLevel         uint32 `protobuf:"varint,4,opt,name=permission_level,json=permissionLevel,proto3" json:"permission_level,omitempty"`
	CustomStoredPermissions uint32 `protobuf:"varint,5,opt,name=custom_stored_permissions,json=customStoredPermissions,proto3" json:"custom_stored_permissions,omitempty"`
	PlayerUniqueId          int64  `protobuf:"varint,6,opt,name=player_unique_id,json=playerUniqueId,proto3" json:"player_unique_id,omitempty"`
}

func (x *AdventureSettingsPacket) Reset() {
	*x = AdventureSettingsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdventureSettingsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureSettingsPacket) ProtoMessage() {}

func (x *AdventureSettingsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureSettingsPacket.ProtoReflect.Descriptor instead.
func (*AdventureSettingsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{9}
}

func (x *AdventureSettingsPacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *AdventureSettingsPacket) GetCommandPermissionLevel() uint32 {
	if x != nil {
		return x.CommandPermissionLevel
	}
	return 0
}

func (x *AdventureSettingsPacket) GetActionPermissions() uint32 {
	if x != nil {
		return x.ActionPermissions
	}
	return 0
}

func (x *AdventureSettingsPacket) GetPermissionLevel() uint32 {
	if x != nil {
		return x.PermissionLevel
	}
	return 0
}

func (x *AdventureSettingsPacket) GetCustomStoredPermissions() uint32 {
	if x != nil {
		return x.CustomStoredPermissions
	}
	return 0
}

func (x *AdventureSettingsPacket) GetPlayerUniqueId() int64 {
	if x != nil {
		return x.PlayerUniqueId
	}
	return 0
}

type AnimateEntityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Animation            string   `protobuf:"bytes,1,opt,name=animation,proto3" json:"animation,omitempty"`
	NextState            string   `protobuf:"bytes,2,opt,name=next_state,json=nextState,proto3" json:"next_state,omitempty"`
	StopCondition        string   `protobuf:"bytes,3,opt,name=stop_condition,json=stopCondition,proto3" json:"stop_condition,omitempty"`
	StopConditionVersion int32    `protobuf:"varint,4,opt,name=stop_condition_version,json=stopConditionVersion,proto3" json:"stop_condition_version,omitempty"`
	Controller           string   `protobuf:"bytes,5,opt,name=controller,proto3" json:"controller,omitempty"`
	BlendOutTime         float32  `protobuf:"fixed32,6,opt,name=blend_out_time,json=blendOutTime,proto3" json:"blend_out_time,omitempty"`
	EntityRuntimeIDs     []uint64 `protobuf:"varint,7,rep,packed,name=entity_runtime_i_ds,json=entityRuntimeIDs,proto3" json:"entity_runtime_i_ds,omitempty"`
}

func (x *AnimateEntityPacket) Reset() {
	*x = AnimateEntityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimateEntityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimateEntityPacket) ProtoMessage() {}

func (x *AnimateEntityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimateEntityPacket.ProtoReflect.Descriptor instead.
func (*AnimateEntityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{10}
}

func (x *AnimateEntityPacket) GetAnimation() string {
	if x != nil {
		return x.Animation
	}
	return ""
}

func (x *AnimateEntityPacket) GetNextState() string {
	if x != nil {
		return x.NextState
	}
	return ""
}

func (x *AnimateEntityPacket) GetStopCondition() string {
	if x != nil {
		return x.StopCondition
	}
	return ""
}

func (x *AnimateEntityPacket) GetStopConditionVersion() int32 {
	if x != nil {
		return x.StopConditionVersion
	}
	return 0
}

func (x *AnimateEntityPacket) GetController() string {
	if x != nil {
		return x.Controller
	}
	return ""
}

func (x *AnimateEntityPacket) GetBlendOutTime() float32 {
	if x != nil {
		return x.BlendOutTime
	}
	return 0
}

func (x *AnimateEntityPacket) GetEntityRuntimeIDs() []uint64 {
	if x != nil {
		return x.EntityRuntimeIDs
	}
	return nil
}

type AnimatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType      int32   `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	EntityRuntimeId uint64  `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	BoatRowingTime  float32 `protobuf:"fixed32,3,opt,name=boat_rowing_time,json=boatRowingTime,proto3" json:"boat_rowing_time,omitempty"`
}

func (x *AnimatePacket) Reset() {
	*x = AnimatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimatePacket) ProtoMessage() {}

func (x *AnimatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimatePacket.ProtoReflect.Descriptor instead.
func (*AnimatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{11}
}

func (x *AnimatePacket) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *AnimatePacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *AnimatePacket) GetBoatRowingTime() float32 {
	if x != nil {
		return x.BoatRowingTime
	}
	return 0
}

type AnvilDamagePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Damage        uint32    `protobuf:"varint,1,opt,name=damage,proto3" json:"damage,omitempty"`
	AnvilPosition *Vector3I `protobuf:"bytes,2,opt,name=anvil_position,json=anvilPosition,proto3" json:"anvil_position,omitempty"`
}

func (x *AnvilDamagePacket) Reset() {
	*x = AnvilDamagePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnvilDamagePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnvilDamagePacket) ProtoMessage() {}

func (x *AnvilDamagePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnvilDamagePacket.ProtoReflect.Descriptor instead.
func (*AnvilDamagePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{12}
}

func (x *AnvilDamagePacket) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *AnvilDamagePacket) GetAnvilPosition() *Vector3I {
	if x != nil {
		return x.AnvilPosition
	}
	return nil
}

type AutomationClientConnectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerUri string `protobuf:"bytes,1,opt,name=server_uri,json=serverUri,proto3" json:"server_uri,omitempty"`
}

func (x *AutomationClientConnectPacket) Reset() {
	*x = AutomationClientConnectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomationClientConnectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomationClientConnectPacket) ProtoMessage() {}

func (x *AutomationClientConnectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomationClientConnectPacket.ProtoReflect.Descriptor instead.
func (*AutomationClientConnectPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{13}
}

func (x *AutomationClientConnectPacket) GetServerUri() string {
	if x != nil {
		return x.ServerUri
	}
	return ""
}

type AvailableActorIdentifiersPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialisedEntityIdentifiers []uint32 `protobuf:"varint,1,rep,packed,name=serialised_entity_identifiers,json=serialisedEntityIdentifiers,proto3" json:"serialised_entity_identifiers,omitempty"`
}

func (x *AvailableActorIdentifiersPacket) Reset() {
	*x = AvailableActorIdentifiersPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableActorIdentifiersPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableActorIdentifiersPacket) ProtoMessage() {}

func (x *AvailableActorIdentifiersPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableActorIdentifiersPacket.ProtoReflect.Descriptor instead.
func (*AvailableActorIdentifiersPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{14}
}

func (x *AvailableActorIdentifiersPacket) GetSerialisedEntityIdentifiers() []uint32 {
	if x != nil {
		return x.SerialisedEntityIdentifiers
	}
	return nil
}

type AvailableCommandsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands    []*Command               `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	Constraints []*CommandEnumConstraint `protobuf:"bytes,2,rep,name=constraints,proto3" json:"constraints,omitempty"`
}

func (x *AvailableCommandsPacket) Reset() {
	*x = AvailableCommandsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableCommandsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableCommandsPacket) ProtoMessage() {}

func (x *AvailableCommandsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableCommandsPacket.ProtoReflect.Descriptor instead.
func (*AvailableCommandsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{15}
}

func (x *AvailableCommandsPacket) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *AvailableCommandsPacket) GetConstraints() []*CommandEnumConstraint {
	if x != nil {
		return x.Constraints
	}
	return nil
}

type BiomeDefinitionListPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialisedBiomeDefinitions []uint32 `protobuf:"varint,1,rep,packed,name=serialised_biome_definitions,json=serialisedBiomeDefinitions,proto3" json:"serialised_biome_definitions,omitempty"`
}

func (x *BiomeDefinitionListPacket) Reset() {
	*x = BiomeDefinitionListPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiomeDefinitionListPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiomeDefinitionListPacket) ProtoMessage() {}

func (x *BiomeDefinitionListPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiomeDefinitionListPacket.ProtoReflect.Descriptor instead.
func (*BiomeDefinitionListPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{16}
}

func (x *BiomeDefinitionListPacket) GetSerialisedBiomeDefinitions() []uint32 {
	if x != nil {
		return x.SerialisedBiomeDefinitions
	}
	return nil
}

type BlockActorDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector3I             `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	NbtData  map[string]*anypb.Any `protobuf:"bytes,2,rep,name=nbt_data,json=nbtData,proto3" json:"nbt_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BlockActorDataPacket) Reset() {
	*x = BlockActorDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockActorDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockActorDataPacket) ProtoMessage() {}

func (x *BlockActorDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockActorDataPacket.ProtoReflect.Descriptor instead.
func (*BlockActorDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{17}
}

func (x *BlockActorDataPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BlockActorDataPacket) GetNbtData() map[string]*anypb.Any {
	if x != nil {
		return x.NbtData
	}
	return nil
}

type BlockEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position  *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	EventType int32     `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventData int32     `protobuf:"varint,3,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *BlockEventPacket) Reset() {
	*x = BlockEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEventPacket) ProtoMessage() {}

func (x *BlockEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEventPacket.ProtoReflect.Descriptor instead.
func (*BlockEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{18}
}

func (x *BlockEventPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BlockEventPacket) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *BlockEventPacket) GetEventData() int32 {
	if x != nil {
		return x.EventData
	}
	return 0
}

type BlockPickRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position    *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	AddBlockNbt bool      `protobuf:"varint,2,opt,name=add_block_nbt,json=addBlockNbt,proto3" json:"add_block_nbt,omitempty"`
	HotBarSlot  uint32    `protobuf:"varint,3,opt,name=hot_bar_slot,json=hotBarSlot,proto3" json:"hot_bar_slot,omitempty"`
}

func (x *BlockPickRequestPacket) Reset() {
	*x = BlockPickRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockPickRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockPickRequestPacket) ProtoMessage() {}

func (x *BlockPickRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockPickRequestPacket.ProtoReflect.Descriptor instead.
func (*BlockPickRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{19}
}

func (x *BlockPickRequestPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BlockPickRequestPacket) GetAddBlockNbt() bool {
	if x != nil {
		return x.AddBlockNbt
	}
	return false
}

func (x *BlockPickRequestPacket) GetHotBarSlot() uint32 {
	if x != nil {
		return x.HotBarSlot
	}
	return 0
}

type BookEditPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType          uint32 `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	InventorySlot       uint32 `protobuf:"varint,2,opt,name=inventory_slot,json=inventorySlot,proto3" json:"inventory_slot,omitempty"`
	PageNumber          uint32 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	SecondaryPageNumber uint32 `protobuf:"varint,4,opt,name=secondary_page_number,json=secondaryPageNumber,proto3" json:"secondary_page_number,omitempty"`
	Text                string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	PhotoName           string `protobuf:"bytes,6,opt,name=photo_name,json=photoName,proto3" json:"photo_name,omitempty"`
	Title               string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Author              string `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Xuid                string `protobuf:"bytes,9,opt,name=xuid,proto3" json:"xuid,omitempty"`
}

func (x *BookEditPacket) Reset() {
	*x = BookEditPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookEditPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookEditPacket) ProtoMessage() {}

func (x *BookEditPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookEditPacket.ProtoReflect.Descriptor instead.
func (*BookEditPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{20}
}

func (x *BookEditPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *BookEditPacket) GetInventorySlot() uint32 {
	if x != nil {
		return x.InventorySlot
	}
	return 0
}

func (x *BookEditPacket) GetPageNumber() uint32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *BookEditPacket) GetSecondaryPageNumber() uint32 {
	if x != nil {
		return x.SecondaryPageNumber
	}
	return 0
}

func (x *BookEditPacket) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BookEditPacket) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *BookEditPacket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BookEditPacket) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *BookEditPacket) GetXuid() string {
	if x != nil {
		return x.Xuid
	}
	return ""
}

type BossEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BossEntityUniqueId int64   `protobuf:"varint,1,opt,name=boss_entity_unique_id,json=bossEntityUniqueId,proto3" json:"boss_entity_unique_id,omitempty"`
	EventType          uint32  `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	PlayerUniqueId     int64   `protobuf:"varint,3,opt,name=player_unique_id,json=playerUniqueId,proto3" json:"player_unique_id,omitempty"`
	BossBarTitle       string  `protobuf:"bytes,4,opt,name=boss_bar_title,json=bossBarTitle,proto3" json:"boss_bar_title,omitempty"`
	HealthPercentage   float32 `protobuf:"fixed32,5,opt,name=health_percentage,json=healthPercentage,proto3" json:"health_percentage,omitempty"`
	ScreenDarkening    int32   `protobuf:"varint,6,opt,name=screen_darkening,json=screenDarkening,proto3" json:"screen_darkening,omitempty"`
	Colour             uint32  `protobuf:"varint,7,opt,name=colour,proto3" json:"colour,omitempty"`
	Overlay            uint32  `protobuf:"varint,8,opt,name=overlay,proto3" json:"overlay,omitempty"`
}

func (x *BossEventPacket) Reset() {
	*x = BossEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BossEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BossEventPacket) ProtoMessage() {}

func (x *BossEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BossEventPacket.ProtoReflect.Descriptor instead.
func (*BossEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{21}
}

func (x *BossEventPacket) GetBossEntityUniqueId() int64 {
	if x != nil {
		return x.BossEntityUniqueId
	}
	return 0
}

func (x *BossEventPacket) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *BossEventPacket) GetPlayerUniqueId() int64 {
	if x != nil {
		return x.PlayerUniqueId
	}
	return 0
}

func (x *BossEventPacket) GetBossBarTitle() string {
	if x != nil {
		return x.BossBarTitle
	}
	return ""
}

func (x *BossEventPacket) GetHealthPercentage() float32 {
	if x != nil {
		return x.HealthPercentage
	}
	return 0
}

func (x *BossEventPacket) GetScreenDarkening() int32 {
	if x != nil {
		return x.ScreenDarkening
	}
	return 0
}

func (x *BossEventPacket) GetColour() uint32 {
	if x != nil {
		return x.Colour
	}
	return 0
}

func (x *BossEventPacket) GetOverlay() uint32 {
	if x != nil {
		return x.Overlay
	}
	return 0
}

type CameraPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraEntityUniqueId int64 `protobuf:"varint,1,opt,name=camera_entity_unique_id,json=cameraEntityUniqueId,proto3" json:"camera_entity_unique_id,omitempty"`
	TargetPlayerUniqueId int64 `protobuf:"varint,2,opt,name=target_player_unique_id,json=targetPlayerUniqueId,proto3" json:"target_player_unique_id,omitempty"`
}

func (x *CameraPacket) Reset() {
	*x = CameraPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraPacket) ProtoMessage() {}

func (x *CameraPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraPacket.ProtoReflect.Descriptor instead.
func (*CameraPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{22}
}

func (x *CameraPacket) GetCameraEntityUniqueId() int64 {
	if x != nil {
		return x.CameraEntityUniqueId
	}
	return 0
}

func (x *CameraPacket) GetTargetPlayerUniqueId() int64 {
	if x != nil {
		return x.TargetPlayerUniqueId
	}
	return 0
}

type CameraShakePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intensity float32 `protobuf:"fixed32,1,opt,name=intensity,proto3" json:"intensity,omitempty"`
	Duration  float32 `protobuf:"fixed32,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Type      uint32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Action    uint32  `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CameraShakePacket) Reset() {
	*x = CameraShakePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CameraShakePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CameraShakePacket) ProtoMessage() {}

func (x *CameraShakePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CameraShakePacket.ProtoReflect.Descriptor instead.
func (*CameraShakePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{23}
}

func (x *CameraShakePacket) GetIntensity() float32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *CameraShakePacket) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CameraShakePacket) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CameraShakePacket) GetAction() uint32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ChangeDimensionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimension int32     `protobuf:"varint,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Position  *Vector3F `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Respawn   bool      `protobuf:"varint,3,opt,name=respawn,proto3" json:"respawn,omitempty"`
}

func (x *ChangeDimensionPacket) Reset() {
	*x = ChangeDimensionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeDimensionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeDimensionPacket) ProtoMessage() {}

func (x *ChangeDimensionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeDimensionPacket.ProtoReflect.Descriptor instead.
func (*ChangeDimensionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeDimensionPacket) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *ChangeDimensionPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ChangeDimensionPacket) GetRespawn() bool {
	if x != nil {
		return x.Respawn
	}
	return false
}

type ChunkRadiusUpdatedPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkRadius int32 `protobuf:"varint,1,opt,name=chunk_radius,json=chunkRadius,proto3" json:"chunk_radius,omitempty"`
}

func (x *ChunkRadiusUpdatedPacket) Reset() {
	*x = ChunkRadiusUpdatedPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkRadiusUpdatedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkRadiusUpdatedPacket) ProtoMessage() {}

func (x *ChunkRadiusUpdatedPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkRadiusUpdatedPacket.ProtoReflect.Descriptor instead.
func (*ChunkRadiusUpdatedPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{25}
}

func (x *ChunkRadiusUpdatedPacket) GetChunkRadius() int32 {
	if x != nil {
		return x.ChunkRadius
	}
	return 0
}

type ClientBoundDebugRendererPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     int32     `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Text     string    `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Position *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Red      float32   `protobuf:"fixed32,4,opt,name=red,proto3" json:"red,omitempty"`
	Green    float32   `protobuf:"fixed32,5,opt,name=green,proto3" json:"green,omitempty"`
	Blue     float32   `protobuf:"fixed32,6,opt,name=blue,proto3" json:"blue,omitempty"`
	Alpha    float32   `protobuf:"fixed32,7,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Duration int64     `protobuf:"varint,8,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ClientBoundDebugRendererPacket) Reset() {
	*x = ClientBoundDebugRendererPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBoundDebugRendererPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBoundDebugRendererPacket) ProtoMessage() {}

func (x *ClientBoundDebugRendererPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBoundDebugRendererPacket.ProtoReflect.Descriptor instead.
func (*ClientBoundDebugRendererPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{26}
}

func (x *ClientBoundDebugRendererPacket) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClientBoundDebugRendererPacket) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ClientBoundDebugRendererPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ClientBoundDebugRendererPacket) GetRed() float32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *ClientBoundDebugRendererPacket) GetGreen() float32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *ClientBoundDebugRendererPacket) GetBlue() float32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *ClientBoundDebugRendererPacket) GetAlpha() float32 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *ClientBoundDebugRendererPacket) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ClientBoundMapItemDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId          int64               `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	UpdateFlags    uint32              `protobuf:"varint,2,opt,name=update_flags,json=updateFlags,proto3" json:"update_flags,omitempty"`
	Dimension      uint32              `protobuf:"varint,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	LockedMap      bool                `protobuf:"varint,4,opt,name=locked_map,json=lockedMap,proto3" json:"locked_map,omitempty"`
	Scale          uint32              `protobuf:"varint,5,opt,name=scale,proto3" json:"scale,omitempty"`
	MapsIncludedIn []int64             `protobuf:"varint,6,rep,packed,name=maps_included_in,json=mapsIncludedIn,proto3" json:"maps_included_in,omitempty"`
	TrackedObjects []*MapTrackedObject `protobuf:"bytes,7,rep,name=tracked_objects,json=trackedObjects,proto3" json:"tracked_objects,omitempty"`
	Decorations    []*MapDecoration    `protobuf:"bytes,8,rep,name=decorations,proto3" json:"decorations,omitempty"`
	Height         int32               `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	Width          int32               `protobuf:"varint,10,opt,name=width,proto3" json:"width,omitempty"`
	XOffset        int32               `protobuf:"varint,11,opt,name=x_offset,json=xOffset,proto3" json:"x_offset,omitempty"`
	YOffset        int32               `protobuf:"varint,12,opt,name=y_offset,json=yOffset,proto3" json:"y_offset,omitempty"`
	Pixels         []*RepeatedRGBA     `protobuf:"bytes,13,rep,name=pixels,proto3" json:"pixels,omitempty"`
}

func (x *ClientBoundMapItemDataPacket) Reset() {
	*x = ClientBoundMapItemDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBoundMapItemDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBoundMapItemDataPacket) ProtoMessage() {}

func (x *ClientBoundMapItemDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBoundMapItemDataPacket.ProtoReflect.Descriptor instead.
func (*ClientBoundMapItemDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{27}
}

func (x *ClientBoundMapItemDataPacket) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetUpdateFlags() uint32 {
	if x != nil {
		return x.UpdateFlags
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetLockedMap() bool {
	if x != nil {
		return x.LockedMap
	}
	return false
}

func (x *ClientBoundMapItemDataPacket) GetScale() uint32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetMapsIncludedIn() []int64 {
	if x != nil {
		return x.MapsIncludedIn
	}
	return nil
}

func (x *ClientBoundMapItemDataPacket) GetTrackedObjects() []*MapTrackedObject {
	if x != nil {
		return x.TrackedObjects
	}
	return nil
}

func (x *ClientBoundMapItemDataPacket) GetDecorations() []*MapDecoration {
	if x != nil {
		return x.Decorations
	}
	return nil
}

func (x *ClientBoundMapItemDataPacket) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetXOffset() int32 {
	if x != nil {
		return x.XOffset
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetYOffset() int32 {
	if x != nil {
		return x.YOffset
	}
	return 0
}

func (x *ClientBoundMapItemDataPacket) GetPixels() []*RepeatedRGBA {
	if x != nil {
		return x.Pixels
	}
	return nil
}

type ClientCacheBlobStatusPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MissHashes []uint64 `protobuf:"varint,1,rep,packed,name=miss_hashes,json=missHashes,proto3" json:"miss_hashes,omitempty"`
	HitHashes  []uint64 `protobuf:"varint,2,rep,packed,name=hit_hashes,json=hitHashes,proto3" json:"hit_hashes,omitempty"`
}

func (x *ClientCacheBlobStatusPacket) Reset() {
	*x = ClientCacheBlobStatusPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCacheBlobStatusPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCacheBlobStatusPacket) ProtoMessage() {}

func (x *ClientCacheBlobStatusPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCacheBlobStatusPacket.ProtoReflect.Descriptor instead.
func (*ClientCacheBlobStatusPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{28}
}

func (x *ClientCacheBlobStatusPacket) GetMissHashes() []uint64 {
	if x != nil {
		return x.MissHashes
	}
	return nil
}

func (x *ClientCacheBlobStatusPacket) GetHitHashes() []uint64 {
	if x != nil {
		return x.HitHashes
	}
	return nil
}

type ClientCacheMissResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blobs []*CacheBlob `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
}

func (x *ClientCacheMissResponsePacket) Reset() {
	*x = ClientCacheMissResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCacheMissResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCacheMissResponsePacket) ProtoMessage() {}

func (x *ClientCacheMissResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCacheMissResponsePacket.ProtoReflect.Descriptor instead.
func (*ClientCacheMissResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{29}
}

func (x *ClientCacheMissResponsePacket) GetBlobs() []*CacheBlob {
	if x != nil {
		return x.Blobs
	}
	return nil
}

type ClientCacheStatusPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ClientCacheStatusPacket) Reset() {
	*x = ClientCacheStatusPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientCacheStatusPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCacheStatusPacket) ProtoMessage() {}

func (x *ClientCacheStatusPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCacheStatusPacket.ProtoReflect.Descriptor instead.
func (*ClientCacheStatusPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{30}
}

func (x *ClientCacheStatusPacket) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ClientStartItemCooldownPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Duration int32  `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *ClientStartItemCooldownPacket) Reset() {
	*x = ClientStartItemCooldownPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientStartItemCooldownPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientStartItemCooldownPacket) ProtoMessage() {}

func (x *ClientStartItemCooldownPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientStartItemCooldownPacket.ProtoReflect.Descriptor instead.
func (*ClientStartItemCooldownPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{31}
}

func (x *ClientStartItemCooldownPacket) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ClientStartItemCooldownPacket) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type ClientToServerHandshakePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClientToServerHandshakePacket) Reset() {
	*x = ClientToServerHandshakePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientToServerHandshakePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientToServerHandshakePacket) ProtoMessage() {}

func (x *ClientToServerHandshakePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientToServerHandshakePacket.ProtoReflect.Descriptor instead.
func (*ClientToServerHandshakePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{32}
}

type CodeBuilderPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url                   string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ShouldOpenCodeBuilder bool   `protobuf:"varint,2,opt,name=should_open_code_builder,json=shouldOpenCodeBuilder,proto3" json:"should_open_code_builder,omitempty"`
}

func (x *CodeBuilderPacket) Reset() {
	*x = CodeBuilderPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeBuilderPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeBuilderPacket) ProtoMessage() {}

func (x *CodeBuilderPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeBuilderPacket.ProtoReflect.Descriptor instead.
func (*CodeBuilderPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{33}
}

func (x *CodeBuilderPacket) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CodeBuilderPacket) GetShouldOpenCodeBuilder() bool {
	if x != nil {
		return x.ShouldOpenCodeBuilder
	}
	return false
}

type CodeBuilderSourcePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation uint32   `protobuf:"varint,1,opt,name=operation,proto3" json:"operation,omitempty"`
	Category  uint32   `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	Value     []uint32 `protobuf:"varint,3,rep,packed,name=value,proto3" json:"value,omitempty"`
}

func (x *CodeBuilderSourcePacket) Reset() {
	*x = CodeBuilderSourcePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeBuilderSourcePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeBuilderSourcePacket) ProtoMessage() {}

func (x *CodeBuilderSourcePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeBuilderSourcePacket.ProtoReflect.Descriptor instead.
func (*CodeBuilderSourcePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{34}
}

func (x *CodeBuilderSourcePacket) GetOperation() uint32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *CodeBuilderSourcePacket) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *CodeBuilderSourcePacket) GetValue() []uint32 {
	if x != nil {
		return x.Value
	}
	return nil
}

type CommandBlockUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block                   bool      `protobuf:"varint,1,opt,name=block,proto3" json:"block,omitempty"`
	Position                *Vector3I `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Mode                    uint32    `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	NeedsRedstone           bool      `protobuf:"varint,4,opt,name=needs_redstone,json=needsRedstone,proto3" json:"needs_redstone,omitempty"`
	Conditional             bool      `protobuf:"varint,5,opt,name=conditional,proto3" json:"conditional,omitempty"`
	MinecartEntityRuntimeId uint64    `protobuf:"varint,6,opt,name=minecart_entity_runtime_id,json=minecartEntityRuntimeId,proto3" json:"minecart_entity_runtime_id,omitempty"`
	Command                 string    `protobuf:"bytes,7,opt,name=command,proto3" json:"command,omitempty"`
	LastOutput              string    `protobuf:"bytes,8,opt,name=last_output,json=lastOutput,proto3" json:"last_output,omitempty"`
	Name                    string    `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	ShouldTrackOutput       bool      `protobuf:"varint,10,opt,name=should_track_output,json=shouldTrackOutput,proto3" json:"should_track_output,omitempty"`
	TickDelay               int32     `protobuf:"varint,11,opt,name=tick_delay,json=tickDelay,proto3" json:"tick_delay,omitempty"`
	ExecuteOnFirstTick      bool      `protobuf:"varint,12,opt,name=execute_on_first_tick,json=executeOnFirstTick,proto3" json:"execute_on_first_tick,omitempty"`
}

func (x *CommandBlockUpdatePacket) Reset() {
	*x = CommandBlockUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandBlockUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandBlockUpdatePacket) ProtoMessage() {}

func (x *CommandBlockUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandBlockUpdatePacket.ProtoReflect.Descriptor instead.
func (*CommandBlockUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{35}
}

func (x *CommandBlockUpdatePacket) GetBlock() bool {
	if x != nil {
		return x.Block
	}
	return false
}

func (x *CommandBlockUpdatePacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CommandBlockUpdatePacket) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *CommandBlockUpdatePacket) GetNeedsRedstone() bool {
	if x != nil {
		return x.NeedsRedstone
	}
	return false
}

func (x *CommandBlockUpdatePacket) GetConditional() bool {
	if x != nil {
		return x.Conditional
	}
	return false
}

func (x *CommandBlockUpdatePacket) GetMinecartEntityRuntimeId() uint64 {
	if x != nil {
		return x.MinecartEntityRuntimeId
	}
	return 0
}

func (x *CommandBlockUpdatePacket) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CommandBlockUpdatePacket) GetLastOutput() string {
	if x != nil {
		return x.LastOutput
	}
	return ""
}

func (x *CommandBlockUpdatePacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommandBlockUpdatePacket) GetShouldTrackOutput() bool {
	if x != nil {
		return x.ShouldTrackOutput
	}
	return false
}

func (x *CommandBlockUpdatePacket) GetTickDelay() int32 {
	if x != nil {
		return x.TickDelay
	}
	return 0
}

func (x *CommandBlockUpdatePacket) GetExecuteOnFirstTick() bool {
	if x != nil {
		return x.ExecuteOnFirstTick
	}
	return false
}

type CommandOutputPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOrigin  *CommandOrigin          `protobuf:"bytes,1,opt,name=command_origin,json=commandOrigin,proto3" json:"command_origin,omitempty"`
	OutputType     uint32                  `protobuf:"varint,2,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
	SuccessCount   uint32                  `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	OutputMessages []*CommandOutputMessage `protobuf:"bytes,4,rep,name=output_messages,json=outputMessages,proto3" json:"output_messages,omitempty"`
	DataSet        string                  `protobuf:"bytes,5,opt,name=data_set,json=dataSet,proto3" json:"data_set,omitempty"`
}

func (x *CommandOutputPacket) Reset() {
	*x = CommandOutputPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandOutputPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandOutputPacket) ProtoMessage() {}

func (x *CommandOutputPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandOutputPacket.ProtoReflect.Descriptor instead.
func (*CommandOutputPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{36}
}

func (x *CommandOutputPacket) GetCommandOrigin() *CommandOrigin {
	if x != nil {
		return x.CommandOrigin
	}
	return nil
}

func (x *CommandOutputPacket) GetOutputType() uint32 {
	if x != nil {
		return x.OutputType
	}
	return 0
}

func (x *CommandOutputPacket) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *CommandOutputPacket) GetOutputMessages() []*CommandOutputMessage {
	if x != nil {
		return x.OutputMessages
	}
	return nil
}

func (x *CommandOutputPacket) GetDataSet() string {
	if x != nil {
		return x.DataSet
	}
	return ""
}

type CommandRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandLine   string         `protobuf:"bytes,1,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	CommandOrigin *CommandOrigin `protobuf:"bytes,2,opt,name=command_origin,json=commandOrigin,proto3" json:"command_origin,omitempty"`
	Internal      bool           `protobuf:"varint,3,opt,name=internal,proto3" json:"internal,omitempty"`
}

func (x *CommandRequestPacket) Reset() {
	*x = CommandRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequestPacket) ProtoMessage() {}

func (x *CommandRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequestPacket.ProtoReflect.Descriptor instead.
func (*CommandRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{37}
}

func (x *CommandRequestPacket) GetCommandLine() string {
	if x != nil {
		return x.CommandLine
	}
	return ""
}

func (x *CommandRequestPacket) GetCommandOrigin() *CommandOrigin {
	if x != nil {
		return x.CommandOrigin
	}
	return nil
}

func (x *CommandRequestPacket) GetInternal() bool {
	if x != nil {
		return x.Internal
	}
	return false
}

type CompletedUsingItemPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsedItemId int32 `protobuf:"varint,1,opt,name=used_item_id,json=usedItemId,proto3" json:"used_item_id,omitempty"`
	UseMethod  int32 `protobuf:"varint,2,opt,name=use_method,json=useMethod,proto3" json:"use_method,omitempty"`
}

func (x *CompletedUsingItemPacket) Reset() {
	*x = CompletedUsingItemPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletedUsingItemPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletedUsingItemPacket) ProtoMessage() {}

func (x *CompletedUsingItemPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletedUsingItemPacket.ProtoReflect.Descriptor instead.
func (*CompletedUsingItemPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{38}
}

func (x *CompletedUsingItemPacket) GetUsedItemId() int32 {
	if x != nil {
		return x.UsedItemId
	}
	return 0
}

func (x *CompletedUsingItemPacket) GetUseMethod() int32 {
	if x != nil {
		return x.UseMethod
	}
	return 0
}

type ContainerClosePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId   uint32 `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	ServerSide bool   `protobuf:"varint,2,opt,name=server_side,json=serverSide,proto3" json:"server_side,omitempty"`
}

func (x *ContainerClosePacket) Reset() {
	*x = ContainerClosePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerClosePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerClosePacket) ProtoMessage() {}

func (x *ContainerClosePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerClosePacket.ProtoReflect.Descriptor instead.
func (*ContainerClosePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{39}
}

func (x *ContainerClosePacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *ContainerClosePacket) GetServerSide() bool {
	if x != nil {
		return x.ServerSide
	}
	return false
}

type ContainerOpenPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId                uint32    `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	ContainerType           uint32    `protobuf:"varint,2,opt,name=container_type,json=containerType,proto3" json:"container_type,omitempty"`
	ContainerPosition       *Vector3I `protobuf:"bytes,3,opt,name=container_position,json=containerPosition,proto3" json:"container_position,omitempty"`
	ContainerEntityUniqueId int64     `protobuf:"varint,4,opt,name=container_entity_unique_id,json=containerEntityUniqueId,proto3" json:"container_entity_unique_id,omitempty"`
}

func (x *ContainerOpenPacket) Reset() {
	*x = ContainerOpenPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerOpenPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerOpenPacket) ProtoMessage() {}

func (x *ContainerOpenPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerOpenPacket.ProtoReflect.Descriptor instead.
func (*ContainerOpenPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{40}
}

func (x *ContainerOpenPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *ContainerOpenPacket) GetContainerType() uint32 {
	if x != nil {
		return x.ContainerType
	}
	return 0
}

func (x *ContainerOpenPacket) GetContainerPosition() *Vector3I {
	if x != nil {
		return x.ContainerPosition
	}
	return nil
}

func (x *ContainerOpenPacket) GetContainerEntityUniqueId() int64 {
	if x != nil {
		return x.ContainerEntityUniqueId
	}
	return 0
}

type ContainerSetDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId uint32 `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	Key      int32  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Value    int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ContainerSetDataPacket) Reset() {
	*x = ContainerSetDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerSetDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerSetDataPacket) ProtoMessage() {}

func (x *ContainerSetDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerSetDataPacket.ProtoReflect.Descriptor instead.
func (*ContainerSetDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{41}
}

func (x *ContainerSetDataPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *ContainerSetDataPacket) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ContainerSetDataPacket) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CorrectPlayerMovePredictionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector3F `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Delta    *Vector3F `protobuf:"bytes,2,opt,name=delta,proto3" json:"delta,omitempty"`
	OnGround bool      `protobuf:"varint,3,opt,name=on_ground,json=onGround,proto3" json:"on_ground,omitempty"`
	Tick     uint64    `protobuf:"varint,4,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *CorrectPlayerMovePredictionPacket) Reset() {
	*x = CorrectPlayerMovePredictionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorrectPlayerMovePredictionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrectPlayerMovePredictionPacket) ProtoMessage() {}

func (x *CorrectPlayerMovePredictionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrectPlayerMovePredictionPacket.ProtoReflect.Descriptor instead.
func (*CorrectPlayerMovePredictionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{42}
}

func (x *CorrectPlayerMovePredictionPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CorrectPlayerMovePredictionPacket) GetDelta() *Vector3F {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *CorrectPlayerMovePredictionPacket) GetOnGround() bool {
	if x != nil {
		return x.OnGround
	}
	return false
}

func (x *CorrectPlayerMovePredictionPacket) GetTick() uint64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type CraftingDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipes                      []*IRecipe                     `protobuf:"bytes,1,rep,name=recipes,proto3" json:"recipes,omitempty"`
	PotionRecipes                []*PotionRecipe                `protobuf:"bytes,2,rep,name=potion_recipes,json=potionRecipes,proto3" json:"potion_recipes,omitempty"`
	PotionContainerChangeRecipes []*PotionContainerChangeRecipe `protobuf:"bytes,3,rep,name=potion_container_change_recipes,json=potionContainerChangeRecipes,proto3" json:"potion_container_change_recipes,omitempty"`
	MaterialReducers             []*MaterialReducer             `protobuf:"bytes,4,rep,name=material_reducers,json=materialReducers,proto3" json:"material_reducers,omitempty"`
	ClearRecipes                 bool                           `protobuf:"varint,5,opt,name=clear_recipes,json=clearRecipes,proto3" json:"clear_recipes,omitempty"`
}

func (x *CraftingDataPacket) Reset() {
	*x = CraftingDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CraftingDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CraftingDataPacket) ProtoMessage() {}

func (x *CraftingDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CraftingDataPacket.ProtoReflect.Descriptor instead.
func (*CraftingDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{43}
}

func (x *CraftingDataPacket) GetRecipes() []*IRecipe {
	if x != nil {
		return x.Recipes
	}
	return nil
}

func (x *CraftingDataPacket) GetPotionRecipes() []*PotionRecipe {
	if x != nil {
		return x.PotionRecipes
	}
	return nil
}

func (x *CraftingDataPacket) GetPotionContainerChangeRecipes() []*PotionContainerChangeRecipe {
	if x != nil {
		return x.PotionContainerChangeRecipes
	}
	return nil
}

func (x *CraftingDataPacket) GetMaterialReducers() []*MaterialReducer {
	if x != nil {
		return x.MaterialReducers
	}
	return nil
}

func (x *CraftingDataPacket) GetClearRecipes() bool {
	if x != nil {
		return x.ClearRecipes
	}
	return false
}

type CraftingEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId     uint32          `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	CraftingType int32           `protobuf:"varint,2,opt,name=crafting_type,json=craftingType,proto3" json:"crafting_type,omitempty"`
	RecipeUuid   string          `protobuf:"bytes,3,opt,name=recipe_uuid,json=recipeUuid,proto3" json:"recipe_uuid,omitempty"`
	Input        []*ItemInstance `protobuf:"bytes,4,rep,name=input,proto3" json:"input,omitempty"`
	Output       []*ItemInstance `protobuf:"bytes,5,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *CraftingEventPacket) Reset() {
	*x = CraftingEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CraftingEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CraftingEventPacket) ProtoMessage() {}

func (x *CraftingEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CraftingEventPacket.ProtoReflect.Descriptor instead.
func (*CraftingEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{44}
}

func (x *CraftingEventPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *CraftingEventPacket) GetCraftingType() int32 {
	if x != nil {
		return x.CraftingType
	}
	return 0
}

func (x *CraftingEventPacket) GetRecipeUuid() string {
	if x != nil {
		return x.RecipeUuid
	}
	return ""
}

func (x *CraftingEventPacket) GetInput() []*ItemInstance {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CraftingEventPacket) GetOutput() []*ItemInstance {
	if x != nil {
		return x.Output
	}
	return nil
}

type CreatePhotoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId int64  `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	PhotoName      string `protobuf:"bytes,2,opt,name=photo_name,json=photoName,proto3" json:"photo_name,omitempty"`
	ItemName       string `protobuf:"bytes,3,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
}

func (x *CreatePhotoPacket) Reset() {
	*x = CreatePhotoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoPacket) ProtoMessage() {}

func (x *CreatePhotoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoPacket.ProtoReflect.Descriptor instead.
func (*CreatePhotoPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{45}
}

func (x *CreatePhotoPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *CreatePhotoPacket) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *CreatePhotoPacket) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

type CreativeContentPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CreativeItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CreativeContentPacket) Reset() {
	*x = CreativeContentPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreativeContentPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreativeContentPacket) ProtoMessage() {}

func (x *CreativeContentPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreativeContentPacket.ProtoReflect.Descriptor instead.
func (*CreativeContentPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{46}
}

func (x *CreativeContentPacket) GetItems() []*CreativeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type DebugInfoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUniqueId int64    `protobuf:"varint,1,opt,name=player_unique_id,json=playerUniqueId,proto3" json:"player_unique_id,omitempty"`
	Data           []uint32 `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *DebugInfoPacket) Reset() {
	*x = DebugInfoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfoPacket) ProtoMessage() {}

func (x *DebugInfoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfoPacket.ProtoReflect.Descriptor instead.
func (*DebugInfoPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{47}
}

func (x *DebugInfoPacket) GetPlayerUniqueId() int64 {
	if x != nil {
		return x.PlayerUniqueId
	}
	return 0
}

func (x *DebugInfoPacket) GetData() []uint32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type DisconnectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HideDisconnectionScreen bool   `protobuf:"varint,1,opt,name=hide_disconnection_screen,json=hideDisconnectionScreen,proto3" json:"hide_disconnection_screen,omitempty"`
	Message                 string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DisconnectPacket) Reset() {
	*x = DisconnectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectPacket) ProtoMessage() {}

func (x *DisconnectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectPacket.ProtoReflect.Descriptor instead.
func (*DisconnectPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{48}
}

func (x *DisconnectPacket) GetHideDisconnectionScreen() bool {
	if x != nil {
		return x.HideDisconnectionScreen
	}
	return false
}

func (x *DisconnectPacket) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EducationResourceURIPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource *EducationSharedResourceURI `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *EducationResourceURIPacket) Reset() {
	*x = EducationResourceURIPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EducationResourceURIPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EducationResourceURIPacket) ProtoMessage() {}

func (x *EducationResourceURIPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EducationResourceURIPacket.ProtoReflect.Descriptor instead.
func (*EducationResourceURIPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{49}
}

func (x *EducationResourceURIPacket) GetResource() *EducationSharedResourceURI {
	if x != nil {
		return x.Resource
	}
	return nil
}

type EducationSettingsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeBuilderDefaultUri string                         `protobuf:"bytes,1,opt,name=code_builder_default_uri,json=codeBuilderDefaultUri,proto3" json:"code_builder_default_uri,omitempty"`
	CodeBuilderTitle      string                         `protobuf:"bytes,2,opt,name=code_builder_title,json=codeBuilderTitle,proto3" json:"code_builder_title,omitempty"`
	CanResizeCodeBuilder  bool                           `protobuf:"varint,3,opt,name=can_resize_code_builder,json=canResizeCodeBuilder,proto3" json:"can_resize_code_builder,omitempty"`
	DisableLegacyTitleBar bool                           `protobuf:"varint,4,opt,name=disable_legacy_title_bar,json=disableLegacyTitleBar,proto3" json:"disable_legacy_title_bar,omitempty"`
	PostProcessFilter     string                         `protobuf:"bytes,5,opt,name=post_process_filter,json=postProcessFilter,proto3" json:"post_process_filter,omitempty"`
	ScreenshotBorderPath  string                         `protobuf:"bytes,6,opt,name=screenshot_border_path,json=screenshotBorderPath,proto3" json:"screenshot_border_path,omitempty"`
	AgentCapabilities     *bool                          `protobuf:"varint,7,opt,name=agent_capabilities,json=agentCapabilities,proto3,oneof" json:"agent_capabilities,omitempty"`
	OverrideUri           string                         `protobuf:"bytes,8,opt,name=override_uri,json=overrideUri,proto3" json:"override_uri,omitempty"`
	HasQuiz               bool                           `protobuf:"varint,9,opt,name=has_quiz,json=hasQuiz,proto3" json:"has_quiz,omitempty"`
	ExternalLinkSettings  *EducationExternalLinkSettings `protobuf:"bytes,10,opt,name=external_link_settings,json=externalLinkSettings,proto3,oneof" json:"external_link_settings,omitempty"`
}

func (x *EducationSettingsPacket) Reset() {
	*x = EducationSettingsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EducationSettingsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EducationSettingsPacket) ProtoMessage() {}

func (x *EducationSettingsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EducationSettingsPacket.ProtoReflect.Descriptor instead.
func (*EducationSettingsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{50}
}

func (x *EducationSettingsPacket) GetCodeBuilderDefaultUri() string {
	if x != nil {
		return x.CodeBuilderDefaultUri
	}
	return ""
}

func (x *EducationSettingsPacket) GetCodeBuilderTitle() string {
	if x != nil {
		return x.CodeBuilderTitle
	}
	return ""
}

func (x *EducationSettingsPacket) GetCanResizeCodeBuilder() bool {
	if x != nil {
		return x.CanResizeCodeBuilder
	}
	return false
}

func (x *EducationSettingsPacket) GetDisableLegacyTitleBar() bool {
	if x != nil {
		return x.DisableLegacyTitleBar
	}
	return false
}

func (x *EducationSettingsPacket) GetPostProcessFilter() string {
	if x != nil {
		return x.PostProcessFilter
	}
	return ""
}

func (x *EducationSettingsPacket) GetScreenshotBorderPath() string {
	if x != nil {
		return x.ScreenshotBorderPath
	}
	return ""
}

func (x *EducationSettingsPacket) GetAgentCapabilities() bool {
	if x != nil && x.AgentCapabilities != nil {
		return *x.AgentCapabilities
	}
	return false
}

func (x *EducationSettingsPacket) GetOverrideUri() string {
	if x != nil {
		return x.OverrideUri
	}
	return ""
}

func (x *EducationSettingsPacket) GetHasQuiz() bool {
	if x != nil {
		return x.HasQuiz
	}
	return false
}

func (x *EducationSettingsPacket) GetExternalLinkSettings() *EducationExternalLinkSettings {
	if x != nil {
		return x.ExternalLinkSettings
	}
	return nil
}

type EmoteListPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerRuntimeId uint64   `protobuf:"varint,1,opt,name=player_runtime_id,json=playerRuntimeId,proto3" json:"player_runtime_id,omitempty"`
	EmotePieces     []string `protobuf:"bytes,2,rep,name=emote_pieces,json=emotePieces,proto3" json:"emote_pieces,omitempty"`
}

func (x *EmoteListPacket) Reset() {
	*x = EmoteListPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmoteListPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmoteListPacket) ProtoMessage() {}

func (x *EmoteListPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmoteListPacket.ProtoReflect.Descriptor instead.
func (*EmoteListPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{51}
}

func (x *EmoteListPacket) GetPlayerRuntimeId() uint64 {
	if x != nil {
		return x.PlayerRuntimeId
	}
	return 0
}

func (x *EmoteListPacket) GetEmotePieces() []string {
	if x != nil {
		return x.EmotePieces
	}
	return nil
}

type EmotePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EmoteId         string `protobuf:"bytes,2,opt,name=emote_id,json=emoteId,proto3" json:"emote_id,omitempty"`
	Flags           uint32 `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
}

func (x *EmotePacket) Reset() {
	*x = EmotePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotePacket) ProtoMessage() {}

func (x *EmotePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotePacket.ProtoReflect.Descriptor instead.
func (*EmotePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{52}
}

func (x *EmotePacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *EmotePacket) GetEmoteId() string {
	if x != nil {
		return x.EmoteId
	}
	return ""
}

func (x *EmotePacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type EventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64      `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EventType       int32       `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	UsePlayerId     uint32      `protobuf:"varint,3,opt,name=use_player_id,json=usePlayerId,proto3" json:"use_player_id,omitempty"`
	EventData       *IEventData `protobuf:"bytes,4,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *EventPacket) Reset() {
	*x = EventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPacket) ProtoMessage() {}

func (x *EventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPacket.ProtoReflect.Descriptor instead.
func (*EventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{53}
}

func (x *EventPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *EventPacket) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *EventPacket) GetUsePlayerId() uint32 {
	if x != nil {
		return x.UsePlayerId
	}
	return 0
}

func (x *EventPacket) GetEventData() *IEventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

type FilterTextPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	FromServer bool   `protobuf:"varint,2,opt,name=from_server,json=fromServer,proto3" json:"from_server,omitempty"`
}

func (x *FilterTextPacket) Reset() {
	*x = FilterTextPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterTextPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterTextPacket) ProtoMessage() {}

func (x *FilterTextPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterTextPacket.ProtoReflect.Descriptor instead.
func (*FilterTextPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{54}
}

func (x *FilterTextPacket) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *FilterTextPacket) GetFromServer() bool {
	if x != nil {
		return x.FromServer
	}
	return false
}

type GUIDataPickItemPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName    string `protobuf:"bytes,1,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	ItemEffects string `protobuf:"bytes,2,opt,name=item_effects,json=itemEffects,proto3" json:"item_effects,omitempty"`
	HotBarSlot  int32  `protobuf:"varint,3,opt,name=hot_bar_slot,json=hotBarSlot,proto3" json:"hot_bar_slot,omitempty"`
}

func (x *GUIDataPickItemPacket) Reset() {
	*x = GUIDataPickItemPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GUIDataPickItemPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GUIDataPickItemPacket) ProtoMessage() {}

func (x *GUIDataPickItemPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GUIDataPickItemPacket.ProtoReflect.Descriptor instead.
func (*GUIDataPickItemPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{55}
}

func (x *GUIDataPickItemPacket) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *GUIDataPickItemPacket) GetItemEffects() string {
	if x != nil {
		return x.ItemEffects
	}
	return ""
}

func (x *GUIDataPickItemPacket) GetHotBarSlot() int32 {
	if x != nil {
		return x.HotBarSlot
	}
	return 0
}

type GameRulesChangedPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameRules []*GameRule `protobuf:"bytes,1,rep,name=game_rules,json=gameRules,proto3" json:"game_rules,omitempty"`
}

func (x *GameRulesChangedPacket) Reset() {
	*x = GameRulesChangedPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRulesChangedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRulesChangedPacket) ProtoMessage() {}

func (x *GameRulesChangedPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRulesChangedPacket.ProtoReflect.Descriptor instead.
func (*GameRulesChangedPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{56}
}

func (x *GameRulesChangedPacket) GetGameRules() []*GameRule {
	if x != nil {
		return x.GameRules
	}
	return nil
}

type HurtArmourPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cause       int32 `protobuf:"varint,1,opt,name=cause,proto3" json:"cause,omitempty"`
	Damage      int32 `protobuf:"varint,2,opt,name=damage,proto3" json:"damage,omitempty"`
	ArmourSlots int64 `protobuf:"varint,3,opt,name=armour_slots,json=armourSlots,proto3" json:"armour_slots,omitempty"`
}

func (x *HurtArmourPacket) Reset() {
	*x = HurtArmourPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HurtArmourPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HurtArmourPacket) ProtoMessage() {}

func (x *HurtArmourPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HurtArmourPacket.ProtoReflect.Descriptor instead.
func (*HurtArmourPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{57}
}

func (x *HurtArmourPacket) GetCause() int32 {
	if x != nil {
		return x.Cause
	}
	return 0
}

func (x *HurtArmourPacket) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *HurtArmourPacket) GetArmourSlots() int64 {
	if x != nil {
		return x.ArmourSlots
	}
	return 0
}

type InteractPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType            uint32    `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	TargetEntityRuntimeId uint64    `protobuf:"varint,2,opt,name=target_entity_runtime_id,json=targetEntityRuntimeId,proto3" json:"target_entity_runtime_id,omitempty"`
	Position              *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *InteractPacket) Reset() {
	*x = InteractPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractPacket) ProtoMessage() {}

func (x *InteractPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractPacket.ProtoReflect.Descriptor instead.
func (*InteractPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{58}
}

func (x *InteractPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *InteractPacket) GetTargetEntityRuntimeId() uint64 {
	if x != nil {
		return x.TargetEntityRuntimeId
	}
	return 0
}

func (x *InteractPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

type InventoryContentPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId uint32          `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	Content  []*ItemInstance `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *InventoryContentPacket) Reset() {
	*x = InventoryContentPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryContentPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryContentPacket) ProtoMessage() {}

func (x *InventoryContentPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryContentPacket.ProtoReflect.Descriptor instead.
func (*InventoryContentPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{59}
}

func (x *InventoryContentPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *InventoryContentPacket) GetContent() []*ItemInstance {
	if x != nil {
		return x.Content
	}
	return nil
}

type InventorySlotPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId uint32        `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	Slot     uint32        `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	NewItem  *ItemInstance `protobuf:"bytes,3,opt,name=new_item,json=newItem,proto3" json:"new_item,omitempty"`
}

func (x *InventorySlotPacket) Reset() {
	*x = InventorySlotPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventorySlotPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySlotPacket) ProtoMessage() {}

func (x *InventorySlotPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySlotPacket.ProtoReflect.Descriptor instead.
func (*InventorySlotPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{60}
}

func (x *InventorySlotPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *InventorySlotPacket) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *InventorySlotPacket) GetNewItem() *ItemInstance {
	if x != nil {
		return x.NewItem
	}
	return nil
}

type InventoryTransactionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LegacyRequestId    int32                      `protobuf:"varint,1,opt,name=legacy_request_id,json=legacyRequestId,proto3" json:"legacy_request_id,omitempty"`
	LegacySetItemSlots []*LegacySetItemSlot       `protobuf:"bytes,2,rep,name=legacy_set_item_slots,json=legacySetItemSlots,proto3" json:"legacy_set_item_slots,omitempty"`
	Actions            []*InventoryAction         `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	TransactionData    *IInventoryTransactionData `protobuf:"bytes,4,opt,name=transaction_data,json=transactionData,proto3" json:"transaction_data,omitempty"`
}

func (x *InventoryTransactionPacket) Reset() {
	*x = InventoryTransactionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryTransactionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryTransactionPacket) ProtoMessage() {}

func (x *InventoryTransactionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryTransactionPacket.ProtoReflect.Descriptor instead.
func (*InventoryTransactionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{61}
}

func (x *InventoryTransactionPacket) GetLegacyRequestId() int32 {
	if x != nil {
		return x.LegacyRequestId
	}
	return 0
}

func (x *InventoryTransactionPacket) GetLegacySetItemSlots() []*LegacySetItemSlot {
	if x != nil {
		return x.LegacySetItemSlots
	}
	return nil
}

func (x *InventoryTransactionPacket) GetActions() []*InventoryAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *InventoryTransactionPacket) GetTransactionData() *IInventoryTransactionData {
	if x != nil {
		return x.TransactionData
	}
	return nil
}

type ItemComponentPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemComponentEntry `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ItemComponentPacket) Reset() {
	*x = ItemComponentPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemComponentPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemComponentPacket) ProtoMessage() {}

func (x *ItemComponentPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemComponentPacket.ProtoReflect.Descriptor instead.
func (*ItemComponentPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{62}
}

func (x *ItemComponentPacket) GetItems() []*ItemComponentEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemFrameDropItemPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ItemFrameDropItemPacket) Reset() {
	*x = ItemFrameDropItemPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemFrameDropItemPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemFrameDropItemPacket) ProtoMessage() {}

func (x *ItemFrameDropItemPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemFrameDropItemPacket.ProtoReflect.Descriptor instead.
func (*ItemFrameDropItemPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{63}
}

func (x *ItemFrameDropItemPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

type ItemStackRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*ItemStackRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *ItemStackRequestPacket) Reset() {
	*x = ItemStackRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemStackRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemStackRequestPacket) ProtoMessage() {}

func (x *ItemStackRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemStackRequestPacket.ProtoReflect.Descriptor instead.
func (*ItemStackRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{64}
}

func (x *ItemStackRequestPacket) GetRequests() []*ItemStackRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type ItemStackResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*ItemStackResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *ItemStackResponsePacket) Reset() {
	*x = ItemStackResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemStackResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemStackResponsePacket) ProtoMessage() {}

func (x *ItemStackResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemStackResponsePacket.ProtoReflect.Descriptor instead.
func (*ItemStackResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{65}
}

func (x *ItemStackResponsePacket) GetResponses() []*ItemStackResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type LabTablePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType   uint32    `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Position     *Vector3I `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	ReactionType uint32    `protobuf:"varint,3,opt,name=reaction_type,json=reactionType,proto3" json:"reaction_type,omitempty"`
}

func (x *LabTablePacket) Reset() {
	*x = LabTablePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabTablePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabTablePacket) ProtoMessage() {}

func (x *LabTablePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabTablePacket.ProtoReflect.Descriptor instead.
func (*LabTablePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{66}
}

func (x *LabTablePacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *LabTablePacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LabTablePacket) GetReactionType() uint32 {
	if x != nil {
		return x.ReactionType
	}
	return 0
}

type LecternUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      uint32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageCount uint32    `protobuf:"varint,2,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	Position  *Vector3I `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	DropBook  bool      `protobuf:"varint,4,opt,name=drop_book,json=dropBook,proto3" json:"drop_book,omitempty"`
}

func (x *LecternUpdatePacket) Reset() {
	*x = LecternUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LecternUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LecternUpdatePacket) ProtoMessage() {}

func (x *LecternUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LecternUpdatePacket.ProtoReflect.Descriptor instead.
func (*LecternUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{67}
}

func (x *LecternUpdatePacket) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LecternUpdatePacket) GetPageCount() uint32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *LecternUpdatePacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LecternUpdatePacket) GetDropBook() bool {
	if x != nil {
		return x.DropBook
	}
	return false
}

type LevelChunkPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position            *Vector2I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	SubChunkRequestMode uint32    `protobuf:"varint,2,opt,name=sub_chunk_request_mode,json=subChunkRequestMode,proto3" json:"sub_chunk_request_mode,omitempty"`
	HighestSubChunk     uint32    `protobuf:"varint,3,opt,name=highest_sub_chunk,json=highestSubChunk,proto3" json:"highest_sub_chunk,omitempty"`
	SubChunkCount       uint32    `protobuf:"varint,4,opt,name=sub_chunk_count,json=subChunkCount,proto3" json:"sub_chunk_count,omitempty"`
	CacheEnabled        bool      `protobuf:"varint,5,opt,name=cache_enabled,json=cacheEnabled,proto3" json:"cache_enabled,omitempty"`
	BlobHashes          []uint64  `protobuf:"varint,6,rep,packed,name=blob_hashes,json=blobHashes,proto3" json:"blob_hashes,omitempty"`
	RawPayload          []uint32  `protobuf:"varint,7,rep,packed,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
}

func (x *LevelChunkPacket) Reset() {
	*x = LevelChunkPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelChunkPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelChunkPacket) ProtoMessage() {}

func (x *LevelChunkPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelChunkPacket.ProtoReflect.Descriptor instead.
func (*LevelChunkPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{68}
}

func (x *LevelChunkPacket) GetPosition() *Vector2I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LevelChunkPacket) GetSubChunkRequestMode() uint32 {
	if x != nil {
		return x.SubChunkRequestMode
	}
	return 0
}

func (x *LevelChunkPacket) GetHighestSubChunk() uint32 {
	if x != nil {
		return x.HighestSubChunk
	}
	return 0
}

func (x *LevelChunkPacket) GetSubChunkCount() uint32 {
	if x != nil {
		return x.SubChunkCount
	}
	return 0
}

func (x *LevelChunkPacket) GetCacheEnabled() bool {
	if x != nil {
		return x.CacheEnabled
	}
	return false
}

func (x *LevelChunkPacket) GetBlobHashes() []uint64 {
	if x != nil {
		return x.BlobHashes
	}
	return nil
}

func (x *LevelChunkPacket) GetRawPayload() []uint32 {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

type LevelEventGenericPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId             int32    `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SerialisedEventData []uint32 `protobuf:"varint,2,rep,packed,name=serialised_event_data,json=serialisedEventData,proto3" json:"serialised_event_data,omitempty"`
}

func (x *LevelEventGenericPacket) Reset() {
	*x = LevelEventGenericPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelEventGenericPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelEventGenericPacket) ProtoMessage() {}

func (x *LevelEventGenericPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelEventGenericPacket.ProtoReflect.Descriptor instead.
func (*LevelEventGenericPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{69}
}

func (x *LevelEventGenericPacket) GetEventId() int32 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *LevelEventGenericPacket) GetSerialisedEventData() []uint32 {
	if x != nil {
		return x.SerialisedEventData
	}
	return nil
}

type LevelEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType int32     `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Position  *Vector3F `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	EventData int32     `protobuf:"varint,3,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *LevelEventPacket) Reset() {
	*x = LevelEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelEventPacket) ProtoMessage() {}

func (x *LevelEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelEventPacket.ProtoReflect.Descriptor instead.
func (*LevelEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{70}
}

func (x *LevelEventPacket) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *LevelEventPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LevelEventPacket) GetEventData() int32 {
	if x != nil {
		return x.EventData
	}
	return 0
}

type LevelSoundEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoundType             uint32    `protobuf:"varint,1,opt,name=sound_type,json=soundType,proto3" json:"sound_type,omitempty"`
	Position              *Vector3F `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	ExtraData             int32     `protobuf:"varint,3,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	EntityType            string    `protobuf:"bytes,4,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
	BabyMob               bool      `protobuf:"varint,5,opt,name=baby_mob,json=babyMob,proto3" json:"baby_mob,omitempty"`
	DisableRelativeVolume bool      `protobuf:"varint,6,opt,name=disable_relative_volume,json=disableRelativeVolume,proto3" json:"disable_relative_volume,omitempty"`
}

func (x *LevelSoundEventPacket) Reset() {
	*x = LevelSoundEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelSoundEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelSoundEventPacket) ProtoMessage() {}

func (x *LevelSoundEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelSoundEventPacket.ProtoReflect.Descriptor instead.
func (*LevelSoundEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{71}
}

func (x *LevelSoundEventPacket) GetSoundType() uint32 {
	if x != nil {
		return x.SoundType
	}
	return 0
}

func (x *LevelSoundEventPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *LevelSoundEventPacket) GetExtraData() int32 {
	if x != nil {
		return x.ExtraData
	}
	return 0
}

func (x *LevelSoundEventPacket) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

func (x *LevelSoundEventPacket) GetBabyMob() bool {
	if x != nil {
		return x.BabyMob
	}
	return false
}

func (x *LevelSoundEventPacket) GetDisableRelativeVolume() bool {
	if x != nil {
		return x.DisableRelativeVolume
	}
	return false
}

type LoginPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientProtocol    int32    `protobuf:"varint,1,opt,name=client_protocol,json=clientProtocol,proto3" json:"client_protocol,omitempty"`
	ConnectionRequest []uint32 `protobuf:"varint,2,rep,packed,name=connection_request,json=connectionRequest,proto3" json:"connection_request,omitempty"`
}

func (x *LoginPacket) Reset() {
	*x = LoginPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginPacket) ProtoMessage() {}

func (x *LoginPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginPacket.ProtoReflect.Descriptor instead.
func (*LoginPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{72}
}

func (x *LoginPacket) GetClientProtocol() int32 {
	if x != nil {
		return x.ClientProtocol
	}
	return 0
}

func (x *LoginPacket) GetConnectionRequest() []uint32 {
	if x != nil {
		return x.ConnectionRequest
	}
	return nil
}

type MapCreateLockedCopyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalMapId int64 `protobuf:"varint,1,opt,name=original_map_id,json=originalMapId,proto3" json:"original_map_id,omitempty"`
	NewMapId      int64 `protobuf:"varint,2,opt,name=new_map_id,json=newMapId,proto3" json:"new_map_id,omitempty"`
}

func (x *MapCreateLockedCopyPacket) Reset() {
	*x = MapCreateLockedCopyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapCreateLockedCopyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapCreateLockedCopyPacket) ProtoMessage() {}

func (x *MapCreateLockedCopyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapCreateLockedCopyPacket.ProtoReflect.Descriptor instead.
func (*MapCreateLockedCopyPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{73}
}

func (x *MapCreateLockedCopyPacket) GetOriginalMapId() int64 {
	if x != nil {
		return x.OriginalMapId
	}
	return 0
}

func (x *MapCreateLockedCopyPacket) GetNewMapId() int64 {
	if x != nil {
		return x.NewMapId
	}
	return 0
}

type MapInfoRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int64 `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
}

func (x *MapInfoRequestPacket) Reset() {
	*x = MapInfoRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapInfoRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapInfoRequestPacket) ProtoMessage() {}

func (x *MapInfoRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapInfoRequestPacket.ProtoReflect.Descriptor instead.
func (*MapInfoRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{74}
}

func (x *MapInfoRequestPacket) GetMapId() int64 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type MobArmourEquipmentPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64        `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Helmet          *ItemInstance `protobuf:"bytes,2,opt,name=helmet,proto3" json:"helmet,omitempty"`
	Chestplate      *ItemInstance `protobuf:"bytes,3,opt,name=chestplate,proto3" json:"chestplate,omitempty"`
	Leggings        *ItemInstance `protobuf:"bytes,4,opt,name=leggings,proto3" json:"leggings,omitempty"`
	Boots           *ItemInstance `protobuf:"bytes,5,opt,name=boots,proto3" json:"boots,omitempty"`
}

func (x *MobArmourEquipmentPacket) Reset() {
	*x = MobArmourEquipmentPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobArmourEquipmentPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobArmourEquipmentPacket) ProtoMessage() {}

func (x *MobArmourEquipmentPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobArmourEquipmentPacket.ProtoReflect.Descriptor instead.
func (*MobArmourEquipmentPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{75}
}

func (x *MobArmourEquipmentPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MobArmourEquipmentPacket) GetHelmet() *ItemInstance {
	if x != nil {
		return x.Helmet
	}
	return nil
}

func (x *MobArmourEquipmentPacket) GetChestplate() *ItemInstance {
	if x != nil {
		return x.Chestplate
	}
	return nil
}

func (x *MobArmourEquipmentPacket) GetLeggings() *ItemInstance {
	if x != nil {
		return x.Leggings
	}
	return nil
}

func (x *MobArmourEquipmentPacket) GetBoots() *ItemInstance {
	if x != nil {
		return x.Boots
	}
	return nil
}

type MobEffectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Operation       uint32 `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	EffectType      int32  `protobuf:"varint,3,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"`
	Amplifier       int32  `protobuf:"varint,4,opt,name=amplifier,proto3" json:"amplifier,omitempty"`
	Particles       bool   `protobuf:"varint,5,opt,name=particles,proto3" json:"particles,omitempty"`
	Duration        int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *MobEffectPacket) Reset() {
	*x = MobEffectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobEffectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobEffectPacket) ProtoMessage() {}

func (x *MobEffectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobEffectPacket.ProtoReflect.Descriptor instead.
func (*MobEffectPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{76}
}

func (x *MobEffectPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MobEffectPacket) GetOperation() uint32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *MobEffectPacket) GetEffectType() int32 {
	if x != nil {
		return x.EffectType
	}
	return 0
}

func (x *MobEffectPacket) GetAmplifier() int32 {
	if x != nil {
		return x.Amplifier
	}
	return 0
}

func (x *MobEffectPacket) GetParticles() bool {
	if x != nil {
		return x.Particles
	}
	return false
}

func (x *MobEffectPacket) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type MobEquipmentPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64        `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	NewItem         *ItemInstance `protobuf:"bytes,2,opt,name=new_item,json=newItem,proto3" json:"new_item,omitempty"`
	InventorySlot   uint32        `protobuf:"varint,3,opt,name=inventory_slot,json=inventorySlot,proto3" json:"inventory_slot,omitempty"`
	HotBarSlot      uint32        `protobuf:"varint,4,opt,name=hot_bar_slot,json=hotBarSlot,proto3" json:"hot_bar_slot,omitempty"`
	WindowId        uint32        `protobuf:"varint,5,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
}

func (x *MobEquipmentPacket) Reset() {
	*x = MobEquipmentPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobEquipmentPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobEquipmentPacket) ProtoMessage() {}

func (x *MobEquipmentPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobEquipmentPacket.ProtoReflect.Descriptor instead.
func (*MobEquipmentPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{77}
}

func (x *MobEquipmentPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MobEquipmentPacket) GetNewItem() *ItemInstance {
	if x != nil {
		return x.NewItem
	}
	return nil
}

func (x *MobEquipmentPacket) GetInventorySlot() uint32 {
	if x != nil {
		return x.InventorySlot
	}
	return 0
}

func (x *MobEquipmentPacket) GetHotBarSlot() uint32 {
	if x != nil {
		return x.HotBarSlot
	}
	return 0
}

func (x *MobEquipmentPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

type ModalFormRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId   uint32   `protobuf:"varint,1,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	FormData []uint32 `protobuf:"varint,2,rep,packed,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
}

func (x *ModalFormRequestPacket) Reset() {
	*x = ModalFormRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModalFormRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModalFormRequestPacket) ProtoMessage() {}

func (x *ModalFormRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModalFormRequestPacket.ProtoReflect.Descriptor instead.
func (*ModalFormRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{78}
}

func (x *ModalFormRequestPacket) GetFormId() uint32 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *ModalFormRequestPacket) GetFormData() []uint32 {
	if x != nil {
		return x.FormData
	}
	return nil
}

type ModalFormResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId       uint32   `protobuf:"varint,1,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	ResponseData []uint32 `protobuf:"varint,2,rep,packed,name=response_data,json=responseData,proto3" json:"response_data,omitempty"`
}

func (x *ModalFormResponsePacket) Reset() {
	*x = ModalFormResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModalFormResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModalFormResponsePacket) ProtoMessage() {}

func (x *ModalFormResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModalFormResponsePacket.ProtoReflect.Descriptor instead.
func (*ModalFormResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{79}
}

func (x *ModalFormResponsePacket) GetFormId() uint32 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *ModalFormResponsePacket) GetResponseData() []uint32 {
	if x != nil {
		return x.ResponseData
	}
	return nil
}

type MotionPredictionHintsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64    `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Velocity        *Vector3F `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
	OnGround        bool      `protobuf:"varint,3,opt,name=on_ground,json=onGround,proto3" json:"on_ground,omitempty"`
}

func (x *MotionPredictionHintsPacket) Reset() {
	*x = MotionPredictionHintsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotionPredictionHintsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionPredictionHintsPacket) ProtoMessage() {}

func (x *MotionPredictionHintsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionPredictionHintsPacket.ProtoReflect.Descriptor instead.
func (*MotionPredictionHintsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{80}
}

func (x *MotionPredictionHintsPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MotionPredictionHintsPacket) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *MotionPredictionHintsPacket) GetOnGround() bool {
	if x != nil {
		return x.OnGround
	}
	return false
}

type MoveActorAbsolutePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64    `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Flags           uint32    `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	Position        *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Rotation        *Vector3F `protobuf:"bytes,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
}

func (x *MoveActorAbsolutePacket) Reset() {
	*x = MoveActorAbsolutePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveActorAbsolutePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveActorAbsolutePacket) ProtoMessage() {}

func (x *MoveActorAbsolutePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveActorAbsolutePacket.ProtoReflect.Descriptor instead.
func (*MoveActorAbsolutePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{81}
}

func (x *MoveActorAbsolutePacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MoveActorAbsolutePacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *MoveActorAbsolutePacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MoveActorAbsolutePacket) GetRotation() *Vector3F {
	if x != nil {
		return x.Rotation
	}
	return nil
}

type MoveActorDeltaPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags           uint32    `protobuf:"varint,1,opt,name=flags,proto3" json:"flags,omitempty"`
	EntityRuntimeId uint64    `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Position        *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Rotation        *Vector3F `protobuf:"bytes,4,opt,name=rotation,proto3" json:"rotation,omitempty"`
}

func (x *MoveActorDeltaPacket) Reset() {
	*x = MoveActorDeltaPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveActorDeltaPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveActorDeltaPacket) ProtoMessage() {}

func (x *MoveActorDeltaPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveActorDeltaPacket.ProtoReflect.Descriptor instead.
func (*MoveActorDeltaPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{82}
}

func (x *MoveActorDeltaPacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *MoveActorDeltaPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MoveActorDeltaPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MoveActorDeltaPacket) GetRotation() *Vector3F {
	if x != nil {
		return x.Rotation
	}
	return nil
}

type MovePlayerPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId          uint64    `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Position                 *Vector3F `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Pitch                    float32   `protobuf:"fixed32,3,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw                      float32   `protobuf:"fixed32,4,opt,name=yaw,proto3" json:"yaw,omitempty"`
	HeadYaw                  float32   `protobuf:"fixed32,5,opt,name=head_yaw,json=headYaw,proto3" json:"head_yaw,omitempty"`
	Mode                     uint32    `protobuf:"varint,6,opt,name=mode,proto3" json:"mode,omitempty"`
	OnGround                 bool      `protobuf:"varint,7,opt,name=on_ground,json=onGround,proto3" json:"on_ground,omitempty"`
	RiddenEntityRuntimeId    uint64    `protobuf:"varint,8,opt,name=ridden_entity_runtime_id,json=riddenEntityRuntimeId,proto3" json:"ridden_entity_runtime_id,omitempty"`
	TeleportCause            int32     `protobuf:"varint,9,opt,name=teleport_cause,json=teleportCause,proto3" json:"teleport_cause,omitempty"`
	TeleportSourceEntityType int32     `protobuf:"varint,10,opt,name=teleport_source_entity_type,json=teleportSourceEntityType,proto3" json:"teleport_source_entity_type,omitempty"`
	Tick                     uint64    `protobuf:"varint,11,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *MovePlayerPacket) Reset() {
	*x = MovePlayerPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovePlayerPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePlayerPacket) ProtoMessage() {}

func (x *MovePlayerPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePlayerPacket.ProtoReflect.Descriptor instead.
func (*MovePlayerPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{83}
}

func (x *MovePlayerPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *MovePlayerPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *MovePlayerPacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *MovePlayerPacket) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *MovePlayerPacket) GetHeadYaw() float32 {
	if x != nil {
		return x.HeadYaw
	}
	return 0
}

func (x *MovePlayerPacket) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *MovePlayerPacket) GetOnGround() bool {
	if x != nil {
		return x.OnGround
	}
	return false
}

func (x *MovePlayerPacket) GetRiddenEntityRuntimeId() uint64 {
	if x != nil {
		return x.RiddenEntityRuntimeId
	}
	return 0
}

func (x *MovePlayerPacket) GetTeleportCause() int32 {
	if x != nil {
		return x.TeleportCause
	}
	return 0
}

func (x *MovePlayerPacket) GetTeleportSourceEntityType() int32 {
	if x != nil {
		return x.TeleportSourceEntityType
	}
	return 0
}

func (x *MovePlayerPacket) GetTick() uint64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type MultiPlayerSettingsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType int32 `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
}

func (x *MultiPlayerSettingsPacket) Reset() {
	*x = MultiPlayerSettingsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiPlayerSettingsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiPlayerSettingsPacket) ProtoMessage() {}

func (x *MultiPlayerSettingsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiPlayerSettingsPacket.ProtoReflect.Descriptor instead.
func (*MultiPlayerSettingsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{84}
}

func (x *MultiPlayerSettingsPacket) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

type NPCDialoguePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorUniqueId uint64 `protobuf:"varint,1,opt,name=actor_unique_id,json=actorUniqueId,proto3" json:"actor_unique_id,omitempty"`
	ActionType    int32  `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Dialogue      string `protobuf:"bytes,3,opt,name=dialogue,proto3" json:"dialogue,omitempty"`
	SceneName     string `protobuf:"bytes,4,opt,name=scene_name,json=sceneName,proto3" json:"scene_name,omitempty"`
	NpcName       string `protobuf:"bytes,5,opt,name=npc_name,json=npcName,proto3" json:"npc_name,omitempty"`
	ActionJson    string `protobuf:"bytes,6,opt,name=action_json,json=actionJson,proto3" json:"action_json,omitempty"`
}

func (x *NPCDialoguePacket) Reset() {
	*x = NPCDialoguePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NPCDialoguePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NPCDialoguePacket) ProtoMessage() {}

func (x *NPCDialoguePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NPCDialoguePacket.ProtoReflect.Descriptor instead.
func (*NPCDialoguePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{85}
}

func (x *NPCDialoguePacket) GetActorUniqueId() uint64 {
	if x != nil {
		return x.ActorUniqueId
	}
	return 0
}

func (x *NPCDialoguePacket) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *NPCDialoguePacket) GetDialogue() string {
	if x != nil {
		return x.Dialogue
	}
	return ""
}

func (x *NPCDialoguePacket) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

func (x *NPCDialoguePacket) GetNpcName() string {
	if x != nil {
		return x.NpcName
	}
	return ""
}

func (x *NPCDialoguePacket) GetActionJson() string {
	if x != nil {
		return x.ActionJson
	}
	return ""
}

type NPCRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	RequestType     uint32 `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
	CommandString   string `protobuf:"bytes,3,opt,name=command_string,json=commandString,proto3" json:"command_string,omitempty"`
	ActionType      uint32 `protobuf:"varint,4,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	SceneName       string `protobuf:"bytes,5,opt,name=scene_name,json=sceneName,proto3" json:"scene_name,omitempty"`
}

func (x *NPCRequestPacket) Reset() {
	*x = NPCRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NPCRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NPCRequestPacket) ProtoMessage() {}

func (x *NPCRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NPCRequestPacket.ProtoReflect.Descriptor instead.
func (*NPCRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{86}
}

func (x *NPCRequestPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *NPCRequestPacket) GetRequestType() uint32 {
	if x != nil {
		return x.RequestType
	}
	return 0
}

func (x *NPCRequestPacket) GetCommandString() string {
	if x != nil {
		return x.CommandString
	}
	return ""
}

func (x *NPCRequestPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *NPCRequestPacket) GetSceneName() string {
	if x != nil {
		return x.SceneName
	}
	return ""
}

type NetworkChunkPublisherUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Radius   uint32    `protobuf:"varint,2,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *NetworkChunkPublisherUpdatePacket) Reset() {
	*x = NetworkChunkPublisherUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkChunkPublisherUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkChunkPublisherUpdatePacket) ProtoMessage() {}

func (x *NetworkChunkPublisherUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkChunkPublisherUpdatePacket.ProtoReflect.Descriptor instead.
func (*NetworkChunkPublisherUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{87}
}

func (x *NetworkChunkPublisherUpdatePacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *NetworkChunkPublisherUpdatePacket) GetRadius() uint32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type NetworkSettingsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompressionThreshold uint32 `protobuf:"varint,1,opt,name=compression_threshold,json=compressionThreshold,proto3" json:"compression_threshold,omitempty"`
}

func (x *NetworkSettingsPacket) Reset() {
	*x = NetworkSettingsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkSettingsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkSettingsPacket) ProtoMessage() {}

func (x *NetworkSettingsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkSettingsPacket.ProtoReflect.Descriptor instead.
func (*NetworkSettingsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{88}
}

func (x *NetworkSettingsPacket) GetCompressionThreshold() uint32 {
	if x != nil {
		return x.CompressionThreshold
	}
	return 0
}

type NetworkStackLatencyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NeedsResponse bool  `protobuf:"varint,2,opt,name=needs_response,json=needsResponse,proto3" json:"needs_response,omitempty"`
}

func (x *NetworkStackLatencyPacket) Reset() {
	*x = NetworkStackLatencyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkStackLatencyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStackLatencyPacket) ProtoMessage() {}

func (x *NetworkStackLatencyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStackLatencyPacket.ProtoReflect.Descriptor instead.
func (*NetworkStackLatencyPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{89}
}

func (x *NetworkStackLatencyPacket) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NetworkStackLatencyPacket) GetNeedsResponse() bool {
	if x != nil {
		return x.NeedsResponse
	}
	return false
}

type OnScreenTextureAnimationPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnimationType int32 `protobuf:"varint,1,opt,name=animation_type,json=animationType,proto3" json:"animation_type,omitempty"`
}

func (x *OnScreenTextureAnimationPacket) Reset() {
	*x = OnScreenTextureAnimationPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnScreenTextureAnimationPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnScreenTextureAnimationPacket) ProtoMessage() {}

func (x *OnScreenTextureAnimationPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnScreenTextureAnimationPacket.ProtoReflect.Descriptor instead.
func (*OnScreenTextureAnimationPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{90}
}

func (x *OnScreenTextureAnimationPacket) GetAnimationType() int32 {
	if x != nil {
		return x.AnimationType
	}
	return 0
}

type PacketViolationWarningPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             int32  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Severity         int32  `protobuf:"varint,2,opt,name=severity,proto3" json:"severity,omitempty"`
	PacketId         int32  `protobuf:"varint,3,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	ViolationContext string `protobuf:"bytes,4,opt,name=violation_context,json=violationContext,proto3" json:"violation_context,omitempty"`
}

func (x *PacketViolationWarningPacket) Reset() {
	*x = PacketViolationWarningPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketViolationWarningPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketViolationWarningPacket) ProtoMessage() {}

func (x *PacketViolationWarningPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketViolationWarningPacket.ProtoReflect.Descriptor instead.
func (*PacketViolationWarningPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{91}
}

func (x *PacketViolationWarningPacket) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PacketViolationWarningPacket) GetSeverity() int32 {
	if x != nil {
		return x.Severity
	}
	return 0
}

func (x *PacketViolationWarningPacket) GetPacketId() int32 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *PacketViolationWarningPacket) GetViolationContext() string {
	if x != nil {
		return x.ViolationContext
	}
	return ""
}

type PassengerJumpPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JumpStrength int32 `protobuf:"varint,1,opt,name=jump_strength,json=jumpStrength,proto3" json:"jump_strength,omitempty"`
}

func (x *PassengerJumpPacket) Reset() {
	*x = PassengerJumpPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PassengerJumpPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassengerJumpPacket) ProtoMessage() {}

func (x *PassengerJumpPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassengerJumpPacket.ProtoReflect.Descriptor instead.
func (*PassengerJumpPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{92}
}

func (x *PassengerJumpPacket) GetJumpStrength() int32 {
	if x != nil {
		return x.JumpStrength
	}
	return 0
}

type PhotoInfoRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoId int64 `protobuf:"varint,1,opt,name=photo_id,json=photoId,proto3" json:"photo_id,omitempty"`
}

func (x *PhotoInfoRequestPacket) Reset() {
	*x = PhotoInfoRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoInfoRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoInfoRequestPacket) ProtoMessage() {}

func (x *PhotoInfoRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoInfoRequestPacket.ProtoReflect.Descriptor instead.
func (*PhotoInfoRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{93}
}

func (x *PhotoInfoRequestPacket) GetPhotoId() int64 {
	if x != nil {
		return x.PhotoId
	}
	return 0
}

type PhotoTransferPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhotoName           string   `protobuf:"bytes,1,opt,name=photo_name,json=photoName,proto3" json:"photo_name,omitempty"`
	PhotoData           []uint32 `protobuf:"varint,2,rep,packed,name=photo_data,json=photoData,proto3" json:"photo_data,omitempty"`
	BookId              string   `protobuf:"bytes,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	PhotoType           uint32   `protobuf:"varint,4,opt,name=photo_type,json=photoType,proto3" json:"photo_type,omitempty"`
	SourceType          uint32   `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	OwnerEntityUniqueId int64    `protobuf:"varint,6,opt,name=owner_entity_unique_id,json=ownerEntityUniqueId,proto3" json:"owner_entity_unique_id,omitempty"`
	NewPhotoName        string   `protobuf:"bytes,7,opt,name=new_photo_name,json=newPhotoName,proto3" json:"new_photo_name,omitempty"`
}

func (x *PhotoTransferPacket) Reset() {
	*x = PhotoTransferPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoTransferPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoTransferPacket) ProtoMessage() {}

func (x *PhotoTransferPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoTransferPacket.ProtoReflect.Descriptor instead.
func (*PhotoTransferPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{94}
}

func (x *PhotoTransferPacket) GetPhotoName() string {
	if x != nil {
		return x.PhotoName
	}
	return ""
}

func (x *PhotoTransferPacket) GetPhotoData() []uint32 {
	if x != nil {
		return x.PhotoData
	}
	return nil
}

func (x *PhotoTransferPacket) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *PhotoTransferPacket) GetPhotoType() uint32 {
	if x != nil {
		return x.PhotoType
	}
	return 0
}

func (x *PhotoTransferPacket) GetSourceType() uint32 {
	if x != nil {
		return x.SourceType
	}
	return 0
}

func (x *PhotoTransferPacket) GetOwnerEntityUniqueId() int64 {
	if x != nil {
		return x.OwnerEntityUniqueId
	}
	return 0
}

func (x *PhotoTransferPacket) GetNewPhotoName() string {
	if x != nil {
		return x.NewPhotoName
	}
	return ""
}

type PlaySoundPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoundName string    `protobuf:"bytes,1,opt,name=sound_name,json=soundName,proto3" json:"sound_name,omitempty"`
	Position  *Vector3F `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Volume    float32   `protobuf:"fixed32,3,opt,name=volume,proto3" json:"volume,omitempty"`
	Pitch     float32   `protobuf:"fixed32,4,opt,name=pitch,proto3" json:"pitch,omitempty"`
}

func (x *PlaySoundPacket) Reset() {
	*x = PlaySoundPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaySoundPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaySoundPacket) ProtoMessage() {}

func (x *PlaySoundPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaySoundPacket.ProtoReflect.Descriptor instead.
func (*PlaySoundPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{95}
}

func (x *PlaySoundPacket) GetSoundName() string {
	if x != nil {
		return x.SoundName
	}
	return ""
}

func (x *PlaySoundPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlaySoundPacket) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PlaySoundPacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

type PlayStatusPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PlayStatusPacket) Reset() {
	*x = PlayStatusPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayStatusPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayStatusPacket) ProtoMessage() {}

func (x *PlayStatusPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayStatusPacket.ProtoReflect.Descriptor instead.
func (*PlayStatusPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{96}
}

func (x *PlayStatusPacket) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PlayerActionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64    `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	ActionType      int32     `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	BlockPosition   *Vector3I `protobuf:"bytes,3,opt,name=block_position,json=blockPosition,proto3" json:"block_position,omitempty"`
	BlockFace       int32     `protobuf:"varint,4,opt,name=block_face,json=blockFace,proto3" json:"block_face,omitempty"`
}

func (x *PlayerActionPacket) Reset() {
	*x = PlayerActionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionPacket) ProtoMessage() {}

func (x *PlayerActionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionPacket.ProtoReflect.Descriptor instead.
func (*PlayerActionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{97}
}

func (x *PlayerActionPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *PlayerActionPacket) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *PlayerActionPacket) GetBlockPosition() *Vector3I {
	if x != nil {
		return x.BlockPosition
	}
	return nil
}

func (x *PlayerActionPacket) GetBlockFace() int32 {
	if x != nil {
		return x.BlockFace
	}
	return 0
}

type PlayerArmourDamagePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bitset           uint32 `protobuf:"varint,1,opt,name=bitset,proto3" json:"bitset,omitempty"`
	HelmetDamage     int32  `protobuf:"varint,2,opt,name=helmet_damage,json=helmetDamage,proto3" json:"helmet_damage,omitempty"`
	ChestplateDamage int32  `protobuf:"varint,3,opt,name=chestplate_damage,json=chestplateDamage,proto3" json:"chestplate_damage,omitempty"`
	LeggingsDamage   int32  `protobuf:"varint,4,opt,name=leggings_damage,json=leggingsDamage,proto3" json:"leggings_damage,omitempty"`
	BootsDamage      int32  `protobuf:"varint,5,opt,name=boots_damage,json=bootsDamage,proto3" json:"boots_damage,omitempty"`
}

func (x *PlayerArmourDamagePacket) Reset() {
	*x = PlayerArmourDamagePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerArmourDamagePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerArmourDamagePacket) ProtoMessage() {}

func (x *PlayerArmourDamagePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerArmourDamagePacket.ProtoReflect.Descriptor instead.
func (*PlayerArmourDamagePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{98}
}

func (x *PlayerArmourDamagePacket) GetBitset() uint32 {
	if x != nil {
		return x.Bitset
	}
	return 0
}

func (x *PlayerArmourDamagePacket) GetHelmetDamage() int32 {
	if x != nil {
		return x.HelmetDamage
	}
	return 0
}

func (x *PlayerArmourDamagePacket) GetChestplateDamage() int32 {
	if x != nil {
		return x.ChestplateDamage
	}
	return 0
}

func (x *PlayerArmourDamagePacket) GetLeggingsDamage() int32 {
	if x != nil {
		return x.LeggingsDamage
	}
	return 0
}

func (x *PlayerArmourDamagePacket) GetBootsDamage() int32 {
	if x != nil {
		return x.BootsDamage
	}
	return 0
}

type PlayerAuthInputPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pitch               float32                 `protobuf:"fixed32,1,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw                 float32                 `protobuf:"fixed32,2,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Position            *Vector3F               `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	MoveVector          *Vector2F               `protobuf:"bytes,4,opt,name=move_vector,json=moveVector,proto3" json:"move_vector,omitempty"`
	HeadYaw             float32                 `protobuf:"fixed32,5,opt,name=head_yaw,json=headYaw,proto3" json:"head_yaw,omitempty"`
	InputData           uint64                  `protobuf:"varint,6,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	InputMode           uint32                  `protobuf:"varint,7,opt,name=input_mode,json=inputMode,proto3" json:"input_mode,omitempty"`
	PlayMode            uint32                  `protobuf:"varint,8,opt,name=play_mode,json=playMode,proto3" json:"play_mode,omitempty"`
	GazeDirection       *Vector3F               `protobuf:"bytes,9,opt,name=gaze_direction,json=gazeDirection,proto3" json:"gaze_direction,omitempty"`
	Tick                uint64                  `protobuf:"varint,10,opt,name=tick,proto3" json:"tick,omitempty"`
	Delta               *Vector3F               `protobuf:"bytes,11,opt,name=delta,proto3" json:"delta,omitempty"`
	ItemInteractionData *UseItemTransactionData `protobuf:"bytes,12,opt,name=item_interaction_data,json=itemInteractionData,proto3" json:"item_interaction_data,omitempty"`
	ItemStackRequest    *ItemStackRequest       `protobuf:"bytes,13,opt,name=item_stack_request,json=itemStackRequest,proto3" json:"item_stack_request,omitempty"`
	BlockActions        []*PlayerBlockAction    `protobuf:"bytes,14,rep,name=block_actions,json=blockActions,proto3" json:"block_actions,omitempty"`
}

func (x *PlayerAuthInputPacket) Reset() {
	*x = PlayerAuthInputPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAuthInputPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAuthInputPacket) ProtoMessage() {}

func (x *PlayerAuthInputPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAuthInputPacket.ProtoReflect.Descriptor instead.
func (*PlayerAuthInputPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{99}
}

func (x *PlayerAuthInputPacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetMoveVector() *Vector2F {
	if x != nil {
		return x.MoveVector
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetHeadYaw() float32 {
	if x != nil {
		return x.HeadYaw
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetInputData() uint64 {
	if x != nil {
		return x.InputData
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetInputMode() uint32 {
	if x != nil {
		return x.InputMode
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetPlayMode() uint32 {
	if x != nil {
		return x.PlayMode
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetGazeDirection() *Vector3F {
	if x != nil {
		return x.GazeDirection
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetTick() uint64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *PlayerAuthInputPacket) GetDelta() *Vector3F {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetItemInteractionData() *UseItemTransactionData {
	if x != nil {
		return x.ItemInteractionData
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetItemStackRequest() *ItemStackRequest {
	if x != nil {
		return x.ItemStackRequest
	}
	return nil
}

func (x *PlayerAuthInputPacket) GetBlockActions() []*PlayerBlockAction {
	if x != nil {
		return x.BlockActions
	}
	return nil
}

type PlayerEnchantOptionsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options []*EnchantmentOption `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *PlayerEnchantOptionsPacket) Reset() {
	*x = PlayerEnchantOptionsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerEnchantOptionsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerEnchantOptionsPacket) ProtoMessage() {}

func (x *PlayerEnchantOptionsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerEnchantOptionsPacket.ProtoReflect.Descriptor instead.
func (*PlayerEnchantOptionsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{100}
}

func (x *PlayerEnchantOptionsPacket) GetOptions() []*EnchantmentOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type PlayerFogPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stack []string `protobuf:"bytes,1,rep,name=stack,proto3" json:"stack,omitempty"`
}

func (x *PlayerFogPacket) Reset() {
	*x = PlayerFogPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerFogPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerFogPacket) ProtoMessage() {}

func (x *PlayerFogPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerFogPacket.ProtoReflect.Descriptor instead.
func (*PlayerFogPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{101}
}

func (x *PlayerFogPacket) GetStack() []string {
	if x != nil {
		return x.Stack
	}
	return nil
}

type PlayerHotBarPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedHotBarSlot uint32 `protobuf:"varint,1,opt,name=selected_hot_bar_slot,json=selectedHotBarSlot,proto3" json:"selected_hot_bar_slot,omitempty"`
	WindowId           uint32 `protobuf:"varint,2,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	SelectHotBarSlot   bool   `protobuf:"varint,3,opt,name=select_hot_bar_slot,json=selectHotBarSlot,proto3" json:"select_hot_bar_slot,omitempty"`
}

func (x *PlayerHotBarPacket) Reset() {
	*x = PlayerHotBarPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerHotBarPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerHotBarPacket) ProtoMessage() {}

func (x *PlayerHotBarPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerHotBarPacket.ProtoReflect.Descriptor instead.
func (*PlayerHotBarPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{102}
}

func (x *PlayerHotBarPacket) GetSelectedHotBarSlot() uint32 {
	if x != nil {
		return x.SelectedHotBarSlot
	}
	return 0
}

func (x *PlayerHotBarPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *PlayerHotBarPacket) GetSelectHotBarSlot() bool {
	if x != nil {
		return x.SelectHotBarSlot
	}
	return false
}

type PlayerInputPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movement *Vector2F `protobuf:"bytes,1,opt,name=movement,proto3" json:"movement,omitempty"`
	Jumping  bool      `protobuf:"varint,2,opt,name=jumping,proto3" json:"jumping,omitempty"`
	Sneaking bool      `protobuf:"varint,3,opt,name=sneaking,proto3" json:"sneaking,omitempty"`
}

func (x *PlayerInputPacket) Reset() {
	*x = PlayerInputPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInputPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInputPacket) ProtoMessage() {}

func (x *PlayerInputPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInputPacket.ProtoReflect.Descriptor instead.
func (*PlayerInputPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{103}
}

func (x *PlayerInputPacket) GetMovement() *Vector2F {
	if x != nil {
		return x.Movement
	}
	return nil
}

func (x *PlayerInputPacket) GetJumping() bool {
	if x != nil {
		return x.Jumping
	}
	return false
}

func (x *PlayerInputPacket) GetSneaking() bool {
	if x != nil {
		return x.Sneaking
	}
	return false
}

type PlayerListPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType uint32             `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Entries    []*PlayerListEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *PlayerListPacket) Reset() {
	*x = PlayerListPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerListPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerListPacket) ProtoMessage() {}

func (x *PlayerListPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerListPacket.ProtoReflect.Descriptor instead.
func (*PlayerListPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{104}
}

func (x *PlayerListPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *PlayerListPacket) GetEntries() []*PlayerListEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type PlayerSkinPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Skin        *Skin  `protobuf:"bytes,2,opt,name=skin,proto3" json:"skin,omitempty"`
	NewSkinName string `protobuf:"bytes,3,opt,name=new_skin_name,json=newSkinName,proto3" json:"new_skin_name,omitempty"`
	OldSkinName string `protobuf:"bytes,4,opt,name=old_skin_name,json=oldSkinName,proto3" json:"old_skin_name,omitempty"`
}

func (x *PlayerSkinPacket) Reset() {
	*x = PlayerSkinPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSkinPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSkinPacket) ProtoMessage() {}

func (x *PlayerSkinPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSkinPacket.ProtoReflect.Descriptor instead.
func (*PlayerSkinPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{105}
}

func (x *PlayerSkinPacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PlayerSkinPacket) GetSkin() *Skin {
	if x != nil {
		return x.Skin
	}
	return nil
}

func (x *PlayerSkinPacket) GetNewSkinName() string {
	if x != nil {
		return x.NewSkinName
	}
	return ""
}

func (x *PlayerSkinPacket) GetOldSkinName() string {
	if x != nil {
		return x.OldSkinName
	}
	return ""
}

type PositionTrackingDBClientRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestAction uint32 `protobuf:"varint,1,opt,name=request_action,json=requestAction,proto3" json:"request_action,omitempty"`
	TrackingId    int32  `protobuf:"varint,2,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
}

func (x *PositionTrackingDBClientRequestPacket) Reset() {
	*x = PositionTrackingDBClientRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionTrackingDBClientRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionTrackingDBClientRequestPacket) ProtoMessage() {}

func (x *PositionTrackingDBClientRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionTrackingDBClientRequestPacket.ProtoReflect.Descriptor instead.
func (*PositionTrackingDBClientRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{106}
}

func (x *PositionTrackingDBClientRequestPacket) GetRequestAction() uint32 {
	if x != nil {
		return x.RequestAction
	}
	return 0
}

func (x *PositionTrackingDBClientRequestPacket) GetTrackingId() int32 {
	if x != nil {
		return x.TrackingId
	}
	return 0
}

type PositionTrackingDBServerBroadcastPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastAction uint32   `protobuf:"varint,1,opt,name=broadcast_action,json=broadcastAction,proto3" json:"broadcast_action,omitempty"`
	TrackingId      int32    `protobuf:"varint,2,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	SerialisedData  []uint32 `protobuf:"varint,3,rep,packed,name=serialised_data,json=serialisedData,proto3" json:"serialised_data,omitempty"`
}

func (x *PositionTrackingDBServerBroadcastPacket) Reset() {
	*x = PositionTrackingDBServerBroadcastPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionTrackingDBServerBroadcastPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionTrackingDBServerBroadcastPacket) ProtoMessage() {}

func (x *PositionTrackingDBServerBroadcastPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionTrackingDBServerBroadcastPacket.ProtoReflect.Descriptor instead.
func (*PositionTrackingDBServerBroadcastPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{107}
}

func (x *PositionTrackingDBServerBroadcastPacket) GetBroadcastAction() uint32 {
	if x != nil {
		return x.BroadcastAction
	}
	return 0
}

func (x *PositionTrackingDBServerBroadcastPacket) GetTrackingId() int32 {
	if x != nil {
		return x.TrackingId
	}
	return 0
}

func (x *PositionTrackingDBServerBroadcastPacket) GetSerialisedData() []uint32 {
	if x != nil {
		return x.SerialisedData
	}
	return nil
}

type PurchaseReceiptPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipts []string `protobuf:"bytes,1,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *PurchaseReceiptPacket) Reset() {
	*x = PurchaseReceiptPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseReceiptPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseReceiptPacket) ProtoMessage() {}

func (x *PurchaseReceiptPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseReceiptPacket.ProtoReflect.Descriptor instead.
func (*PurchaseReceiptPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{108}
}

func (x *PurchaseReceiptPacket) GetReceipts() []string {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type RemoveActorPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId int64 `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
}

func (x *RemoveActorPacket) Reset() {
	*x = RemoveActorPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveActorPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveActorPacket) ProtoMessage() {}

func (x *RemoveActorPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveActorPacket.ProtoReflect.Descriptor instead.
func (*RemoveActorPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{109}
}

func (x *RemoveActorPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

type RemoveEntityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityNetworkId uint64 `protobuf:"varint,1,opt,name=entity_network_id,json=entityNetworkId,proto3" json:"entity_network_id,omitempty"`
}

func (x *RemoveEntityPacket) Reset() {
	*x = RemoveEntityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEntityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEntityPacket) ProtoMessage() {}

func (x *RemoveEntityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEntityPacket.ProtoReflect.Descriptor instead.
func (*RemoveEntityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{110}
}

func (x *RemoveEntityPacket) GetEntityNetworkId() uint64 {
	if x != nil {
		return x.EntityNetworkId
	}
	return 0
}

type RemoveObjectivePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectiveName string `protobuf:"bytes,1,opt,name=objective_name,json=objectiveName,proto3" json:"objective_name,omitempty"`
}

func (x *RemoveObjectivePacket) Reset() {
	*x = RemoveObjectivePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveObjectivePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveObjectivePacket) ProtoMessage() {}

func (x *RemoveObjectivePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveObjectivePacket.ProtoReflect.Descriptor instead.
func (*RemoveObjectivePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{111}
}

func (x *RemoveObjectivePacket) GetObjectiveName() string {
	if x != nil {
		return x.ObjectiveName
	}
	return ""
}

type RemoveVolumeEntityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
}

func (x *RemoveVolumeEntityPacket) Reset() {
	*x = RemoveVolumeEntityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVolumeEntityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVolumeEntityPacket) ProtoMessage() {}

func (x *RemoveVolumeEntityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVolumeEntityPacket.ProtoReflect.Descriptor instead.
func (*RemoveVolumeEntityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{112}
}

func (x *RemoveVolumeEntityPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

type RequestChunkRadiusPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkRadius int32 `protobuf:"varint,1,opt,name=chunk_radius,json=chunkRadius,proto3" json:"chunk_radius,omitempty"`
}

func (x *RequestChunkRadiusPacket) Reset() {
	*x = RequestChunkRadiusPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestChunkRadiusPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestChunkRadiusPacket) ProtoMessage() {}

func (x *RequestChunkRadiusPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestChunkRadiusPacket.ProtoReflect.Descriptor instead.
func (*RequestChunkRadiusPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{113}
}

func (x *RequestChunkRadiusPacket) GetChunkRadius() int32 {
	if x != nil {
		return x.ChunkRadius
	}
	return 0
}

type ResourcePackChunkDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ChunkIndex uint32   `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	DataOffset uint64   `protobuf:"varint,3,opt,name=data_offset,json=dataOffset,proto3" json:"data_offset,omitempty"`
	Data       []uint32 `protobuf:"varint,4,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ResourcePackChunkDataPacket) Reset() {
	*x = ResourcePackChunkDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePackChunkDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePackChunkDataPacket) ProtoMessage() {}

func (x *ResourcePackChunkDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePackChunkDataPacket.ProtoReflect.Descriptor instead.
func (*ResourcePackChunkDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{114}
}

func (x *ResourcePackChunkDataPacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResourcePackChunkDataPacket) GetChunkIndex() uint32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *ResourcePackChunkDataPacket) GetDataOffset() uint64 {
	if x != nil {
		return x.DataOffset
	}
	return 0
}

func (x *ResourcePackChunkDataPacket) GetData() []uint32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type ResourcePackChunkRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid       string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ChunkIndex uint32 `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
}

func (x *ResourcePackChunkRequestPacket) Reset() {
	*x = ResourcePackChunkRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePackChunkRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePackChunkRequestPacket) ProtoMessage() {}

func (x *ResourcePackChunkRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePackChunkRequestPacket.ProtoReflect.Descriptor instead.
func (*ResourcePackChunkRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{115}
}

func (x *ResourcePackChunkRequestPacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResourcePackChunkRequestPacket) GetChunkIndex() uint32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

type ResourcePackClientResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response        uint32   `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	PacksToDownload []string `protobuf:"bytes,2,rep,name=packs_to_download,json=packsToDownload,proto3" json:"packs_to_download,omitempty"`
}

func (x *ResourcePackClientResponsePacket) Reset() {
	*x = ResourcePackClientResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePackClientResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePackClientResponsePacket) ProtoMessage() {}

func (x *ResourcePackClientResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePackClientResponsePacket.ProtoReflect.Descriptor instead.
func (*ResourcePackClientResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{116}
}

func (x *ResourcePackClientResponsePacket) GetResponse() uint32 {
	if x != nil {
		return x.Response
	}
	return 0
}

func (x *ResourcePackClientResponsePacket) GetPacksToDownload() []string {
	if x != nil {
		return x.PacksToDownload
	}
	return nil
}

type ResourcePackDataInfoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid          string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	DataChunkSize uint32   `protobuf:"varint,2,opt,name=data_chunk_size,json=dataChunkSize,proto3" json:"data_chunk_size,omitempty"`
	ChunkCount    uint32   `protobuf:"varint,3,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	Size          uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Hash          []uint32 `protobuf:"varint,5,rep,packed,name=hash,proto3" json:"hash,omitempty"`
	Premium       bool     `protobuf:"varint,6,opt,name=premium,proto3" json:"premium,omitempty"`
	PackType      uint32   `protobuf:"varint,7,opt,name=pack_type,json=packType,proto3" json:"pack_type,omitempty"`
}

func (x *ResourcePackDataInfoPacket) Reset() {
	*x = ResourcePackDataInfoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePackDataInfoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePackDataInfoPacket) ProtoMessage() {}

func (x *ResourcePackDataInfoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePackDataInfoPacket.ProtoReflect.Descriptor instead.
func (*ResourcePackDataInfoPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{117}
}

func (x *ResourcePackDataInfoPacket) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ResourcePackDataInfoPacket) GetDataChunkSize() uint32 {
	if x != nil {
		return x.DataChunkSize
	}
	return 0
}

func (x *ResourcePackDataInfoPacket) GetChunkCount() uint32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *ResourcePackDataInfoPacket) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResourcePackDataInfoPacket) GetHash() []uint32 {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *ResourcePackDataInfoPacket) GetPremium() bool {
	if x != nil {
		return x.Premium
	}
	return false
}

func (x *ResourcePackDataInfoPacket) GetPackType() uint32 {
	if x != nil {
		return x.PackType
	}
	return 0
}

type ResourcePackStackPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TexturePackRequired          bool                 `protobuf:"varint,1,opt,name=texture_pack_required,json=texturePackRequired,proto3" json:"texture_pack_required,omitempty"`
	BehaviourPacks               []*StackResourcePack `protobuf:"bytes,2,rep,name=behaviour_packs,json=behaviourPacks,proto3" json:"behaviour_packs,omitempty"`
	TexturePacks                 []*StackResourcePack `protobuf:"bytes,3,rep,name=texture_packs,json=texturePacks,proto3" json:"texture_packs,omitempty"`
	BaseGameVersion              string               `protobuf:"bytes,4,opt,name=base_game_version,json=baseGameVersion,proto3" json:"base_game_version,omitempty"`
	Experiments                  []*ExperimentData    `protobuf:"bytes,5,rep,name=experiments,proto3" json:"experiments,omitempty"`
	ExperimentsPreviouslyToggled bool                 `protobuf:"varint,6,opt,name=experiments_previously_toggled,json=experimentsPreviouslyToggled,proto3" json:"experiments_previously_toggled,omitempty"`
}

func (x *ResourcePackStackPacket) Reset() {
	*x = ResourcePackStackPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePackStackPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePackStackPacket) ProtoMessage() {}

func (x *ResourcePackStackPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePackStackPacket.ProtoReflect.Descriptor instead.
func (*ResourcePackStackPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{118}
}

func (x *ResourcePackStackPacket) GetTexturePackRequired() bool {
	if x != nil {
		return x.TexturePackRequired
	}
	return false
}

func (x *ResourcePackStackPacket) GetBehaviourPacks() []*StackResourcePack {
	if x != nil {
		return x.BehaviourPacks
	}
	return nil
}

func (x *ResourcePackStackPacket) GetTexturePacks() []*StackResourcePack {
	if x != nil {
		return x.TexturePacks
	}
	return nil
}

func (x *ResourcePackStackPacket) GetBaseGameVersion() string {
	if x != nil {
		return x.BaseGameVersion
	}
	return ""
}

func (x *ResourcePackStackPacket) GetExperiments() []*ExperimentData {
	if x != nil {
		return x.Experiments
	}
	return nil
}

func (x *ResourcePackStackPacket) GetExperimentsPreviouslyToggled() bool {
	if x != nil {
		return x.ExperimentsPreviouslyToggled
	}
	return false
}

type ResourcePacksInfoPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TexturePackRequired bool                 `protobuf:"varint,1,opt,name=texture_pack_required,json=texturePackRequired,proto3" json:"texture_pack_required,omitempty"`
	HasScripts          bool                 `protobuf:"varint,2,opt,name=has_scripts,json=hasScripts,proto3" json:"has_scripts,omitempty"`
	BehaviourPacks      []*BehaviourPackInfo `protobuf:"bytes,3,rep,name=behaviour_packs,json=behaviourPacks,proto3" json:"behaviour_packs,omitempty"`
	TexturePacks        []*TexturePackInfo   `protobuf:"bytes,4,rep,name=texture_packs,json=texturePacks,proto3" json:"texture_packs,omitempty"`
	ForcingServerPacks  bool                 `protobuf:"varint,5,opt,name=forcing_server_packs,json=forcingServerPacks,proto3" json:"forcing_server_packs,omitempty"`
}

func (x *ResourcePacksInfoPacket) Reset() {
	*x = ResourcePacksInfoPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePacksInfoPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePacksInfoPacket) ProtoMessage() {}

func (x *ResourcePacksInfoPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePacksInfoPacket.ProtoReflect.Descriptor instead.
func (*ResourcePacksInfoPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{119}
}

func (x *ResourcePacksInfoPacket) GetTexturePackRequired() bool {
	if x != nil {
		return x.TexturePackRequired
	}
	return false
}

func (x *ResourcePacksInfoPacket) GetHasScripts() bool {
	if x != nil {
		return x.HasScripts
	}
	return false
}

func (x *ResourcePacksInfoPacket) GetBehaviourPacks() []*BehaviourPackInfo {
	if x != nil {
		return x.BehaviourPacks
	}
	return nil
}

func (x *ResourcePacksInfoPacket) GetTexturePacks() []*TexturePackInfo {
	if x != nil {
		return x.TexturePacks
	}
	return nil
}

func (x *ResourcePacksInfoPacket) GetForcingServerPacks() bool {
	if x != nil {
		return x.ForcingServerPacks
	}
	return false
}

type RespawnPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position        *Vector3F `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	State           uint32    `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	EntityRuntimeId uint64    `protobuf:"varint,3,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
}

func (x *RespawnPacket) Reset() {
	*x = RespawnPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespawnPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespawnPacket) ProtoMessage() {}

func (x *RespawnPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespawnPacket.ProtoReflect.Descriptor instead.
func (*RespawnPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{120}
}

func (x *RespawnPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *RespawnPacket) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RespawnPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

type ScriptCustomEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventName string   `protobuf:"bytes,1,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	EventData []uint32 `protobuf:"varint,2,rep,packed,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
}

func (x *ScriptCustomEventPacket) Reset() {
	*x = ScriptCustomEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptCustomEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptCustomEventPacket) ProtoMessage() {}

func (x *ScriptCustomEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptCustomEventPacket.ProtoReflect.Descriptor instead.
func (*ScriptCustomEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{121}
}

func (x *ScriptCustomEventPacket) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *ScriptCustomEventPacket) GetEventData() []uint32 {
	if x != nil {
		return x.EventData
	}
	return nil
}

type ScriptMessagePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Data       []uint32 `protobuf:"varint,2,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *ScriptMessagePacket) Reset() {
	*x = ScriptMessagePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScriptMessagePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScriptMessagePacket) ProtoMessage() {}

func (x *ScriptMessagePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScriptMessagePacket.ProtoReflect.Descriptor instead.
func (*ScriptMessagePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{122}
}

func (x *ScriptMessagePacket) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ScriptMessagePacket) GetData() []uint32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServerSettingsRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerSettingsRequestPacket) Reset() {
	*x = ServerSettingsRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSettingsRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSettingsRequestPacket) ProtoMessage() {}

func (x *ServerSettingsRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSettingsRequestPacket.ProtoReflect.Descriptor instead.
func (*ServerSettingsRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{123}
}

type ServerSettingsResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormId   uint32   `protobuf:"varint,1,opt,name=form_id,json=formId,proto3" json:"form_id,omitempty"`
	FormData []uint32 `protobuf:"varint,2,rep,packed,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
}

func (x *ServerSettingsResponsePacket) Reset() {
	*x = ServerSettingsResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSettingsResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSettingsResponsePacket) ProtoMessage() {}

func (x *ServerSettingsResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSettingsResponsePacket.ProtoReflect.Descriptor instead.
func (*ServerSettingsResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{124}
}

func (x *ServerSettingsResponsePacket) GetFormId() uint32 {
	if x != nil {
		return x.FormId
	}
	return 0
}

func (x *ServerSettingsResponsePacket) GetFormData() []uint32 {
	if x != nil {
		return x.FormData
	}
	return nil
}

type ServerToClientHandshakePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jwt []uint32 `protobuf:"varint,1,rep,packed,name=jwt,proto3" json:"jwt,omitempty"`
}

func (x *ServerToClientHandshakePacket) Reset() {
	*x = ServerToClientHandshakePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerToClientHandshakePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerToClientHandshakePacket) ProtoMessage() {}

func (x *ServerToClientHandshakePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerToClientHandshakePacket.ProtoReflect.Descriptor instead.
func (*ServerToClientHandshakePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{125}
}

func (x *ServerToClientHandshakePacket) GetJwt() []uint32 {
	if x != nil {
		return x.Jwt
	}
	return nil
}

type SetActorDataPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64                `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	EntityMetadata  map[uint32]*anypb.Any `protobuf:"bytes,2,rep,name=entity_metadata,json=entityMetadata,proto3" json:"entity_metadata,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tick            uint64                `protobuf:"varint,3,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *SetActorDataPacket) Reset() {
	*x = SetActorDataPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActorDataPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActorDataPacket) ProtoMessage() {}

func (x *SetActorDataPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActorDataPacket.ProtoReflect.Descriptor instead.
func (*SetActorDataPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{126}
}

func (x *SetActorDataPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *SetActorDataPacket) GetEntityMetadata() map[uint32]*anypb.Any {
	if x != nil {
		return x.EntityMetadata
	}
	return nil
}

func (x *SetActorDataPacket) GetTick() uint64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type SetActorLinkPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityLink *EntityLink `protobuf:"bytes,1,opt,name=entity_link,json=entityLink,proto3" json:"entity_link,omitempty"`
}

func (x *SetActorLinkPacket) Reset() {
	*x = SetActorLinkPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActorLinkPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActorLinkPacket) ProtoMessage() {}

func (x *SetActorLinkPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActorLinkPacket.ProtoReflect.Descriptor instead.
func (*SetActorLinkPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{127}
}

func (x *SetActorLinkPacket) GetEntityLink() *EntityLink {
	if x != nil {
		return x.EntityLink
	}
	return nil
}

type SetActorMotionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64    `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Velocity        *Vector3F `protobuf:"bytes,2,opt,name=velocity,proto3" json:"velocity,omitempty"`
}

func (x *SetActorMotionPacket) Reset() {
	*x = SetActorMotionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActorMotionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActorMotionPacket) ProtoMessage() {}

func (x *SetActorMotionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActorMotionPacket.ProtoReflect.Descriptor instead.
func (*SetActorMotionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{128}
}

func (x *SetActorMotionPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *SetActorMotionPacket) GetVelocity() *Vector3F {
	if x != nil {
		return x.Velocity
	}
	return nil
}

type SetCommandsEnabledPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *SetCommandsEnabledPacket) Reset() {
	*x = SetCommandsEnabledPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCommandsEnabledPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommandsEnabledPacket) ProtoMessage() {}

func (x *SetCommandsEnabledPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommandsEnabledPacket.ProtoReflect.Descriptor instead.
func (*SetCommandsEnabledPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{129}
}

func (x *SetCommandsEnabledPacket) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetDefaultGameTypePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType int32 `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
}

func (x *SetDefaultGameTypePacket) Reset() {
	*x = SetDefaultGameTypePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultGameTypePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultGameTypePacket) ProtoMessage() {}

func (x *SetDefaultGameTypePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultGameTypePacket.ProtoReflect.Descriptor instead.
func (*SetDefaultGameTypePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{130}
}

func (x *SetDefaultGameTypePacket) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type SetDifficultyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Difficulty uint32 `protobuf:"varint,1,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
}

func (x *SetDifficultyPacket) Reset() {
	*x = SetDifficultyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDifficultyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDifficultyPacket) ProtoMessage() {}

func (x *SetDifficultyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDifficultyPacket.ProtoReflect.Descriptor instead.
func (*SetDifficultyPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{131}
}

func (x *SetDifficultyPacket) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type SetDisplayObjectivePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplaySlot   string `protobuf:"bytes,1,opt,name=display_slot,json=displaySlot,proto3" json:"display_slot,omitempty"`
	ObjectiveName string `protobuf:"bytes,2,opt,name=objective_name,json=objectiveName,proto3" json:"objective_name,omitempty"`
	DisplayName   string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CriteriaName  string `protobuf:"bytes,4,opt,name=criteria_name,json=criteriaName,proto3" json:"criteria_name,omitempty"`
	SortOrder     int32  `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *SetDisplayObjectivePacket) Reset() {
	*x = SetDisplayObjectivePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDisplayObjectivePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDisplayObjectivePacket) ProtoMessage() {}

func (x *SetDisplayObjectivePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDisplayObjectivePacket.ProtoReflect.Descriptor instead.
func (*SetDisplayObjectivePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{132}
}

func (x *SetDisplayObjectivePacket) GetDisplaySlot() string {
	if x != nil {
		return x.DisplaySlot
	}
	return ""
}

func (x *SetDisplayObjectivePacket) GetObjectiveName() string {
	if x != nil {
		return x.ObjectiveName
	}
	return ""
}

func (x *SetDisplayObjectivePacket) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *SetDisplayObjectivePacket) GetCriteriaName() string {
	if x != nil {
		return x.CriteriaName
	}
	return ""
}

func (x *SetDisplayObjectivePacket) GetSortOrder() int32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

type SetHealthPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Health int32 `protobuf:"varint,1,opt,name=health,proto3" json:"health,omitempty"`
}

func (x *SetHealthPacket) Reset() {
	*x = SetHealthPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHealthPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHealthPacket) ProtoMessage() {}

func (x *SetHealthPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHealthPacket.ProtoReflect.Descriptor instead.
func (*SetHealthPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{133}
}

func (x *SetHealthPacket) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

type SetLastHurtByPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType int32 `protobuf:"varint,1,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"`
}

func (x *SetLastHurtByPacket) Reset() {
	*x = SetLastHurtByPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLastHurtByPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLastHurtByPacket) ProtoMessage() {}

func (x *SetLastHurtByPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLastHurtByPacket.ProtoReflect.Descriptor instead.
func (*SetLastHurtByPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{134}
}

func (x *SetLastHurtByPacket) GetEntityType() int32 {
	if x != nil {
		return x.EntityType
	}
	return 0
}

type SetLocalPlayerAsInitialisedPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64 `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
}

func (x *SetLocalPlayerAsInitialisedPacket) Reset() {
	*x = SetLocalPlayerAsInitialisedPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocalPlayerAsInitialisedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocalPlayerAsInitialisedPacket) ProtoMessage() {}

func (x *SetLocalPlayerAsInitialisedPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocalPlayerAsInitialisedPacket.ProtoReflect.Descriptor instead.
func (*SetLocalPlayerAsInitialisedPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{135}
}

func (x *SetLocalPlayerAsInitialisedPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

type SetPlayerGameTypePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType int32 `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
}

func (x *SetPlayerGameTypePacket) Reset() {
	*x = SetPlayerGameTypePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPlayerGameTypePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPlayerGameTypePacket) ProtoMessage() {}

func (x *SetPlayerGameTypePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPlayerGameTypePacket.ProtoReflect.Descriptor instead.
func (*SetPlayerGameTypePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{136}
}

func (x *SetPlayerGameTypePacket) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

type SetScorePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType uint32             `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Entries    []*ScoreboardEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *SetScorePacket) Reset() {
	*x = SetScorePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScorePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScorePacket) ProtoMessage() {}

func (x *SetScorePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScorePacket.ProtoReflect.Descriptor instead.
func (*SetScorePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{137}
}

func (x *SetScorePacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *SetScorePacket) GetEntries() []*ScoreboardEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SetScoreboardIdentityPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType uint32                     `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Entries    []*ScoreboardIdentityEntry `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *SetScoreboardIdentityPacket) Reset() {
	*x = SetScoreboardIdentityPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetScoreboardIdentityPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetScoreboardIdentityPacket) ProtoMessage() {}

func (x *SetScoreboardIdentityPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetScoreboardIdentityPacket.ProtoReflect.Descriptor instead.
func (*SetScoreboardIdentityPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{138}
}

func (x *SetScoreboardIdentityPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *SetScoreboardIdentityPacket) GetEntries() []*ScoreboardIdentityEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type SetSpawnPositionPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpawnType     int32     `protobuf:"varint,1,opt,name=spawn_type,json=spawnType,proto3" json:"spawn_type,omitempty"`
	Position      *Vector3I `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Dimension     int32     `protobuf:"varint,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	SpawnPosition *Vector3I `protobuf:"bytes,4,opt,name=spawn_position,json=spawnPosition,proto3" json:"spawn_position,omitempty"`
}

func (x *SetSpawnPositionPacket) Reset() {
	*x = SetSpawnPositionPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpawnPositionPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpawnPositionPacket) ProtoMessage() {}

func (x *SetSpawnPositionPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpawnPositionPacket.ProtoReflect.Descriptor instead.
func (*SetSpawnPositionPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{139}
}

func (x *SetSpawnPositionPacket) GetSpawnType() int32 {
	if x != nil {
		return x.SpawnType
	}
	return 0
}

func (x *SetSpawnPositionPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SetSpawnPositionPacket) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *SetSpawnPositionPacket) GetSpawnPosition() *Vector3I {
	if x != nil {
		return x.SpawnPosition
	}
	return nil
}

type SetTimePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int32 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *SetTimePacket) Reset() {
	*x = SetTimePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTimePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTimePacket) ProtoMessage() {}

func (x *SetTimePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTimePacket.ProtoReflect.Descriptor instead.
func (*SetTimePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{140}
}

func (x *SetTimePacket) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

type SetTitlePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType       int32  `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Text             string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	FadeInDuration   int32  `protobuf:"varint,3,opt,name=fade_in_duration,json=fadeInDuration,proto3" json:"fade_in_duration,omitempty"`
	RemainDuration   int32  `protobuf:"varint,4,opt,name=remain_duration,json=remainDuration,proto3" json:"remain_duration,omitempty"`
	FadeOutDuration  int32  `protobuf:"varint,5,opt,name=fade_out_duration,json=fadeOutDuration,proto3" json:"fade_out_duration,omitempty"`
	Xuid             string `protobuf:"bytes,6,opt,name=xuid,proto3" json:"xuid,omitempty"`
	PlatformOnlineId string `protobuf:"bytes,7,opt,name=platform_online_id,json=platformOnlineId,proto3" json:"platform_online_id,omitempty"`
}

func (x *SetTitlePacket) Reset() {
	*x = SetTitlePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTitlePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitlePacket) ProtoMessage() {}

func (x *SetTitlePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitlePacket.ProtoReflect.Descriptor instead.
func (*SetTitlePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{141}
}

func (x *SetTitlePacket) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *SetTitlePacket) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SetTitlePacket) GetFadeInDuration() int32 {
	if x != nil {
		return x.FadeInDuration
	}
	return 0
}

func (x *SetTitlePacket) GetRemainDuration() int32 {
	if x != nil {
		return x.RemainDuration
	}
	return 0
}

func (x *SetTitlePacket) GetFadeOutDuration() int32 {
	if x != nil {
		return x.FadeOutDuration
	}
	return 0
}

func (x *SetTitlePacket) GetXuid() string {
	if x != nil {
		return x.Xuid
	}
	return ""
}

func (x *SetTitlePacket) GetPlatformOnlineId() string {
	if x != nil {
		return x.PlatformOnlineId
	}
	return ""
}

type SettingsCommandPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandLine    string `protobuf:"bytes,1,opt,name=command_line,json=commandLine,proto3" json:"command_line,omitempty"`
	SuppressOutput bool   `protobuf:"varint,2,opt,name=suppress_output,json=suppressOutput,proto3" json:"suppress_output,omitempty"`
}

func (x *SettingsCommandPacket) Reset() {
	*x = SettingsCommandPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettingsCommandPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsCommandPacket) ProtoMessage() {}

func (x *SettingsCommandPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsCommandPacket.ProtoReflect.Descriptor instead.
func (*SettingsCommandPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{142}
}

func (x *SettingsCommandPacket) GetCommandLine() string {
	if x != nil {
		return x.CommandLine
	}
	return ""
}

func (x *SettingsCommandPacket) GetSuppressOutput() bool {
	if x != nil {
		return x.SuppressOutput
	}
	return false
}

type ShowCreditsPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerRuntimeId uint64 `protobuf:"varint,1,opt,name=player_runtime_id,json=playerRuntimeId,proto3" json:"player_runtime_id,omitempty"`
	StatusType      int32  `protobuf:"varint,2,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`
}

func (x *ShowCreditsPacket) Reset() {
	*x = ShowCreditsPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowCreditsPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowCreditsPacket) ProtoMessage() {}

func (x *ShowCreditsPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowCreditsPacket.ProtoReflect.Descriptor instead.
func (*ShowCreditsPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{143}
}

func (x *ShowCreditsPacket) GetPlayerRuntimeId() uint64 {
	if x != nil {
		return x.PlayerRuntimeId
	}
	return 0
}

func (x *ShowCreditsPacket) GetStatusType() int32 {
	if x != nil {
		return x.StatusType
	}
	return 0
}

type ShowProfilePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Xuid string `protobuf:"bytes,1,opt,name=xuid,proto3" json:"xuid,omitempty"`
}

func (x *ShowProfilePacket) Reset() {
	*x = ShowProfilePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowProfilePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowProfilePacket) ProtoMessage() {}

func (x *ShowProfilePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowProfilePacket.ProtoReflect.Descriptor instead.
func (*ShowProfilePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{144}
}

func (x *ShowProfilePacket) GetXuid() string {
	if x != nil {
		return x.Xuid
	}
	return ""
}

type ShowStoreOfferPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId string `protobuf:"bytes,1,opt,name=offer_id,json=offerId,proto3" json:"offer_id,omitempty"`
	ShowAll bool   `protobuf:"varint,2,opt,name=show_all,json=showAll,proto3" json:"show_all,omitempty"`
}

func (x *ShowStoreOfferPacket) Reset() {
	*x = ShowStoreOfferPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowStoreOfferPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowStoreOfferPacket) ProtoMessage() {}

func (x *ShowStoreOfferPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowStoreOfferPacket.ProtoReflect.Descriptor instead.
func (*ShowStoreOfferPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{145}
}

func (x *ShowStoreOfferPacket) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *ShowStoreOfferPacket) GetShowAll() bool {
	if x != nil {
		return x.ShowAll
	}
	return false
}

type SimpleEventPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType int32 `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *SimpleEventPacket) Reset() {
	*x = SimpleEventPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleEventPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleEventPacket) ProtoMessage() {}

func (x *SimpleEventPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleEventPacket.ProtoReflect.Descriptor instead.
func (*SimpleEventPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{146}
}

func (x *SimpleEventPacket) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

type SimulationTypePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SimulationType uint32 `protobuf:"varint,1,opt,name=simulation_type,json=simulationType,proto3" json:"simulation_type,omitempty"`
}

func (x *SimulationTypePacket) Reset() {
	*x = SimulationTypePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimulationTypePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimulationTypePacket) ProtoMessage() {}

func (x *SimulationTypePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimulationTypePacket.ProtoReflect.Descriptor instead.
func (*SimulationTypePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{147}
}

func (x *SimulationTypePacket) GetSimulationType() uint32 {
	if x != nil {
		return x.SimulationType
	}
	return 0
}

type SpawnExperienceOrbPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position         *Vector3F `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	ExperienceAmount int32     `protobuf:"varint,2,opt,name=experience_amount,json=experienceAmount,proto3" json:"experience_amount,omitempty"`
}

func (x *SpawnExperienceOrbPacket) Reset() {
	*x = SpawnExperienceOrbPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnExperienceOrbPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnExperienceOrbPacket) ProtoMessage() {}

func (x *SpawnExperienceOrbPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnExperienceOrbPacket.ProtoReflect.Descriptor instead.
func (*SpawnExperienceOrbPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{148}
}

func (x *SpawnExperienceOrbPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SpawnExperienceOrbPacket) GetExperienceAmount() int32 {
	if x != nil {
		return x.ExperienceAmount
	}
	return 0
}

type SpawnParticleEffectPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimension      uint32    `protobuf:"varint,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	EntityUniqueId int64     `protobuf:"varint,2,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	Position       *Vector3F `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	ParticleName   string    `protobuf:"bytes,4,opt,name=particle_name,json=particleName,proto3" json:"particle_name,omitempty"`
}

func (x *SpawnParticleEffectPacket) Reset() {
	*x = SpawnParticleEffectPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnParticleEffectPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnParticleEffectPacket) ProtoMessage() {}

func (x *SpawnParticleEffectPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnParticleEffectPacket.ProtoReflect.Descriptor instead.
func (*SpawnParticleEffectPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{149}
}

func (x *SpawnParticleEffectPacket) GetDimension() uint32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *SpawnParticleEffectPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *SpawnParticleEffectPacket) GetPosition() *Vector3F {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SpawnParticleEffectPacket) GetParticleName() string {
	if x != nil {
		return x.ParticleName
	}
	return ""
}

type StartGamePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityUniqueId                 int64                       `protobuf:"varint,1,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	EntityRuntimeId                uint64                      `protobuf:"varint,2,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	PlayerGameMode                 int32                       `protobuf:"varint,3,opt,name=player_game_mode,json=playerGameMode,proto3" json:"player_game_mode,omitempty"`
	PlayerPosition                 *Vector3F                   `protobuf:"bytes,4,opt,name=player_position,json=playerPosition,proto3" json:"player_position,omitempty"`
	Pitch                          float32                     `protobuf:"fixed32,5,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Yaw                            float32                     `protobuf:"fixed32,6,opt,name=yaw,proto3" json:"yaw,omitempty"`
	WorldSeed                      int32                       `protobuf:"varint,7,opt,name=world_seed,json=worldSeed,proto3" json:"world_seed,omitempty"`
	SpawnBiomeType                 int32                       `protobuf:"varint,8,opt,name=spawn_biome_type,json=spawnBiomeType,proto3" json:"spawn_biome_type,omitempty"`
	UserDefinedBiomeName           string                      `protobuf:"bytes,9,opt,name=user_defined_biome_name,json=userDefinedBiomeName,proto3" json:"user_defined_biome_name,omitempty"`
	Dimension                      int32                       `protobuf:"varint,10,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Generator                      int32                       `protobuf:"varint,11,opt,name=generator,proto3" json:"generator,omitempty"`
	WorldGameMode                  int32                       `protobuf:"varint,12,opt,name=world_game_mode,json=worldGameMode,proto3" json:"world_game_mode,omitempty"`
	Difficulty                     int32                       `protobuf:"varint,13,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	WorldSpawn                     *Vector3I                   `protobuf:"bytes,14,opt,name=world_spawn,json=worldSpawn,proto3" json:"world_spawn,omitempty"`
	AchievementsDisabled           bool                        `protobuf:"varint,15,opt,name=achievements_disabled,json=achievementsDisabled,proto3" json:"achievements_disabled,omitempty"`
	DayCycleLockTime               int32                       `protobuf:"varint,16,opt,name=day_cycle_lock_time,json=dayCycleLockTime,proto3" json:"day_cycle_lock_time,omitempty"`
	EducationEditionOffer          int32                       `protobuf:"varint,17,opt,name=education_edition_offer,json=educationEditionOffer,proto3" json:"education_edition_offer,omitempty"`
	EducationFeaturesEnabled       bool                        `protobuf:"varint,18,opt,name=education_features_enabled,json=educationFeaturesEnabled,proto3" json:"education_features_enabled,omitempty"`
	EducationProductId             string                      `protobuf:"bytes,19,opt,name=education_product_id,json=educationProductId,proto3" json:"education_product_id,omitempty"`
	RainLevel                      float32                     `protobuf:"fixed32,20,opt,name=rain_level,json=rainLevel,proto3" json:"rain_level,omitempty"`
	LightningLevel                 float32                     `protobuf:"fixed32,21,opt,name=lightning_level,json=lightningLevel,proto3" json:"lightning_level,omitempty"`
	ConfirmedPlatformLockedContent bool                        `protobuf:"varint,22,opt,name=confirmed_platform_locked_content,json=confirmedPlatformLockedContent,proto3" json:"confirmed_platform_locked_content,omitempty"`
	MultiPlayerGame                bool                        `protobuf:"varint,23,opt,name=multi_player_game,json=multiPlayerGame,proto3" json:"multi_player_game,omitempty"`
	LanBroadcastEnabled            bool                        `protobuf:"varint,24,opt,name=lan_broadcast_enabled,json=lanBroadcastEnabled,proto3" json:"lan_broadcast_enabled,omitempty"`
	XblBroadcastMode               int32                       `protobuf:"varint,25,opt,name=xbl_broadcast_mode,json=xblBroadcastMode,proto3" json:"xbl_broadcast_mode,omitempty"`
	PlatformBroadcastMode          int32                       `protobuf:"varint,26,opt,name=platform_broadcast_mode,json=platformBroadcastMode,proto3" json:"platform_broadcast_mode,omitempty"`
	CommandsEnabled                bool                        `protobuf:"varint,27,opt,name=commands_enabled,json=commandsEnabled,proto3" json:"commands_enabled,omitempty"`
	TexturePackRequired            bool                        `protobuf:"varint,28,opt,name=texture_pack_required,json=texturePackRequired,proto3" json:"texture_pack_required,omitempty"`
	GameRules                      []*GameRule                 `protobuf:"bytes,29,rep,name=game_rules,json=gameRules,proto3" json:"game_rules,omitempty"`
	Experiments                    []*ExperimentData           `protobuf:"bytes,30,rep,name=experiments,proto3" json:"experiments,omitempty"`
	ExperimentsPreviouslyToggled   bool                        `protobuf:"varint,31,opt,name=experiments_previously_toggled,json=experimentsPreviouslyToggled,proto3" json:"experiments_previously_toggled,omitempty"`
	BonusChestEnabled              bool                        `protobuf:"varint,32,opt,name=bonus_chest_enabled,json=bonusChestEnabled,proto3" json:"bonus_chest_enabled,omitempty"`
	StartWithMapEnabled            bool                        `protobuf:"varint,33,opt,name=start_with_map_enabled,json=startWithMapEnabled,proto3" json:"start_with_map_enabled,omitempty"`
	PlayerPermissions              int32                       `protobuf:"varint,34,opt,name=player_permissions,json=playerPermissions,proto3" json:"player_permissions,omitempty"`
	ServerChunkTickRadius          int32                       `protobuf:"varint,35,opt,name=server_chunk_tick_radius,json=serverChunkTickRadius,proto3" json:"server_chunk_tick_radius,omitempty"`
	HasLockedBehaviourPack         bool                        `protobuf:"varint,36,opt,name=has_locked_behaviour_pack,json=hasLockedBehaviourPack,proto3" json:"has_locked_behaviour_pack,omitempty"`
	HasLockedTexturePack           bool                        `protobuf:"varint,37,opt,name=has_locked_texture_pack,json=hasLockedTexturePack,proto3" json:"has_locked_texture_pack,omitempty"`
	FromLockedWorldTemplate        bool                        `protobuf:"varint,38,opt,name=from_locked_world_template,json=fromLockedWorldTemplate,proto3" json:"from_locked_world_template,omitempty"`
	MsaGamerTagsOnly               bool                        `protobuf:"varint,39,opt,name=msa_gamer_tags_only,json=msaGamerTagsOnly,proto3" json:"msa_gamer_tags_only,omitempty"`
	FromWorldTemplate              bool                        `protobuf:"varint,40,opt,name=from_world_template,json=fromWorldTemplate,proto3" json:"from_world_template,omitempty"`
	WorldTemplateSettingsLocked    bool                        `protobuf:"varint,41,opt,name=world_template_settings_locked,json=worldTemplateSettingsLocked,proto3" json:"world_template_settings_locked,omitempty"`
	OnlySpawnV_1Villagers          bool                        `protobuf:"varint,42,opt,name=only_spawn_v_1_villagers,json=onlySpawnV1Villagers,proto3" json:"only_spawn_v_1_villagers,omitempty"`
	BaseGameVersion                string                      `protobuf:"bytes,43,opt,name=base_game_version,json=baseGameVersion,proto3" json:"base_game_version,omitempty"`
	LimitedWorldWidth              int32                       `protobuf:"varint,44,opt,name=limited_world_width,json=limitedWorldWidth,proto3" json:"limited_world_width,omitempty"`
	LimitedWorldDepth              int32                       `protobuf:"varint,45,opt,name=limited_world_depth,json=limitedWorldDepth,proto3" json:"limited_world_depth,omitempty"`
	NewNether                      bool                        `protobuf:"varint,46,opt,name=new_nether,json=newNether,proto3" json:"new_nether,omitempty"`
	EducationSharedResourceUri     *EducationSharedResourceURI `protobuf:"bytes,47,opt,name=education_shared_resource_uri,json=educationSharedResourceUri,proto3" json:"education_shared_resource_uri,omitempty"`
	ForceExperimentalGameplay      bool                        `protobuf:"varint,48,opt,name=force_experimental_gameplay,json=forceExperimentalGameplay,proto3" json:"force_experimental_gameplay,omitempty"`
	LevelId                        string                      `protobuf:"bytes,49,opt,name=level_id,json=levelId,proto3" json:"level_id,omitempty"`
	WorldName                      string                      `protobuf:"bytes,50,opt,name=world_name,json=worldName,proto3" json:"world_name,omitempty"`
	TemplateContentIdentity        string                      `protobuf:"bytes,51,opt,name=template_content_identity,json=templateContentIdentity,proto3" json:"template_content_identity,omitempty"`
	Trial                          bool                        `protobuf:"varint,52,opt,name=trial,proto3" json:"trial,omitempty"`
	PlayerMovementSettings         *PlayerMovementSettings     `protobuf:"bytes,53,opt,name=player_movement_settings,json=playerMovementSettings,proto3" json:"player_movement_settings,omitempty"`
	Time                           int64                       `protobuf:"varint,54,opt,name=time,proto3" json:"time,omitempty"`
	EnchantmentSeed                int32                       `protobuf:"varint,55,opt,name=enchantment_seed,json=enchantmentSeed,proto3" json:"enchantment_seed,omitempty"`
	Blocks                         []*BlockEntry               `protobuf:"bytes,56,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Items                          []*ItemEntry                `protobuf:"bytes,57,rep,name=items,proto3" json:"items,omitempty"`
	MultiPlayerCorrelationId       string                      `protobuf:"bytes,58,opt,name=multi_player_correlation_id,json=multiPlayerCorrelationId,proto3" json:"multi_player_correlation_id,omitempty"`
	ServerAuthoritativeInventory   bool                        `protobuf:"varint,59,opt,name=server_authoritative_inventory,json=serverAuthoritativeInventory,proto3" json:"server_authoritative_inventory,omitempty"`
	GameVersion                    string                      `protobuf:"bytes,60,opt,name=game_version,json=gameVersion,proto3" json:"game_version,omitempty"`
	ServerBlockStateChecksum       uint64                      `protobuf:"varint,61,opt,name=server_block_state_checksum,json=serverBlockStateChecksum,proto3" json:"server_block_state_checksum,omitempty"`
}

func (x *StartGamePacket) Reset() {
	*x = StartGamePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartGamePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGamePacket) ProtoMessage() {}

func (x *StartGamePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGamePacket.ProtoReflect.Descriptor instead.
func (*StartGamePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{150}
}

func (x *StartGamePacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *StartGamePacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *StartGamePacket) GetPlayerGameMode() int32 {
	if x != nil {
		return x.PlayerGameMode
	}
	return 0
}

func (x *StartGamePacket) GetPlayerPosition() *Vector3F {
	if x != nil {
		return x.PlayerPosition
	}
	return nil
}

func (x *StartGamePacket) GetPitch() float32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *StartGamePacket) GetYaw() float32 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

func (x *StartGamePacket) GetWorldSeed() int32 {
	if x != nil {
		return x.WorldSeed
	}
	return 0
}

func (x *StartGamePacket) GetSpawnBiomeType() int32 {
	if x != nil {
		return x.SpawnBiomeType
	}
	return 0
}

func (x *StartGamePacket) GetUserDefinedBiomeName() string {
	if x != nil {
		return x.UserDefinedBiomeName
	}
	return ""
}

func (x *StartGamePacket) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *StartGamePacket) GetGenerator() int32 {
	if x != nil {
		return x.Generator
	}
	return 0
}

func (x *StartGamePacket) GetWorldGameMode() int32 {
	if x != nil {
		return x.WorldGameMode
	}
	return 0
}

func (x *StartGamePacket) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *StartGamePacket) GetWorldSpawn() *Vector3I {
	if x != nil {
		return x.WorldSpawn
	}
	return nil
}

func (x *StartGamePacket) GetAchievementsDisabled() bool {
	if x != nil {
		return x.AchievementsDisabled
	}
	return false
}

func (x *StartGamePacket) GetDayCycleLockTime() int32 {
	if x != nil {
		return x.DayCycleLockTime
	}
	return 0
}

func (x *StartGamePacket) GetEducationEditionOffer() int32 {
	if x != nil {
		return x.EducationEditionOffer
	}
	return 0
}

func (x *StartGamePacket) GetEducationFeaturesEnabled() bool {
	if x != nil {
		return x.EducationFeaturesEnabled
	}
	return false
}

func (x *StartGamePacket) GetEducationProductId() string {
	if x != nil {
		return x.EducationProductId
	}
	return ""
}

func (x *StartGamePacket) GetRainLevel() float32 {
	if x != nil {
		return x.RainLevel
	}
	return 0
}

func (x *StartGamePacket) GetLightningLevel() float32 {
	if x != nil {
		return x.LightningLevel
	}
	return 0
}

func (x *StartGamePacket) GetConfirmedPlatformLockedContent() bool {
	if x != nil {
		return x.ConfirmedPlatformLockedContent
	}
	return false
}

func (x *StartGamePacket) GetMultiPlayerGame() bool {
	if x != nil {
		return x.MultiPlayerGame
	}
	return false
}

func (x *StartGamePacket) GetLanBroadcastEnabled() bool {
	if x != nil {
		return x.LanBroadcastEnabled
	}
	return false
}

func (x *StartGamePacket) GetXblBroadcastMode() int32 {
	if x != nil {
		return x.XblBroadcastMode
	}
	return 0
}

func (x *StartGamePacket) GetPlatformBroadcastMode() int32 {
	if x != nil {
		return x.PlatformBroadcastMode
	}
	return 0
}

func (x *StartGamePacket) GetCommandsEnabled() bool {
	if x != nil {
		return x.CommandsEnabled
	}
	return false
}

func (x *StartGamePacket) GetTexturePackRequired() bool {
	if x != nil {
		return x.TexturePackRequired
	}
	return false
}

func (x *StartGamePacket) GetGameRules() []*GameRule {
	if x != nil {
		return x.GameRules
	}
	return nil
}

func (x *StartGamePacket) GetExperiments() []*ExperimentData {
	if x != nil {
		return x.Experiments
	}
	return nil
}

func (x *StartGamePacket) GetExperimentsPreviouslyToggled() bool {
	if x != nil {
		return x.ExperimentsPreviouslyToggled
	}
	return false
}

func (x *StartGamePacket) GetBonusChestEnabled() bool {
	if x != nil {
		return x.BonusChestEnabled
	}
	return false
}

func (x *StartGamePacket) GetStartWithMapEnabled() bool {
	if x != nil {
		return x.StartWithMapEnabled
	}
	return false
}

func (x *StartGamePacket) GetPlayerPermissions() int32 {
	if x != nil {
		return x.PlayerPermissions
	}
	return 0
}

func (x *StartGamePacket) GetServerChunkTickRadius() int32 {
	if x != nil {
		return x.ServerChunkTickRadius
	}
	return 0
}

func (x *StartGamePacket) GetHasLockedBehaviourPack() bool {
	if x != nil {
		return x.HasLockedBehaviourPack
	}
	return false
}

func (x *StartGamePacket) GetHasLockedTexturePack() bool {
	if x != nil {
		return x.HasLockedTexturePack
	}
	return false
}

func (x *StartGamePacket) GetFromLockedWorldTemplate() bool {
	if x != nil {
		return x.FromLockedWorldTemplate
	}
	return false
}

func (x *StartGamePacket) GetMsaGamerTagsOnly() bool {
	if x != nil {
		return x.MsaGamerTagsOnly
	}
	return false
}

func (x *StartGamePacket) GetFromWorldTemplate() bool {
	if x != nil {
		return x.FromWorldTemplate
	}
	return false
}

func (x *StartGamePacket) GetWorldTemplateSettingsLocked() bool {
	if x != nil {
		return x.WorldTemplateSettingsLocked
	}
	return false
}

func (x *StartGamePacket) GetOnlySpawnV_1Villagers() bool {
	if x != nil {
		return x.OnlySpawnV_1Villagers
	}
	return false
}

func (x *StartGamePacket) GetBaseGameVersion() string {
	if x != nil {
		return x.BaseGameVersion
	}
	return ""
}

func (x *StartGamePacket) GetLimitedWorldWidth() int32 {
	if x != nil {
		return x.LimitedWorldWidth
	}
	return 0
}

func (x *StartGamePacket) GetLimitedWorldDepth() int32 {
	if x != nil {
		return x.LimitedWorldDepth
	}
	return 0
}

func (x *StartGamePacket) GetNewNether() bool {
	if x != nil {
		return x.NewNether
	}
	return false
}

func (x *StartGamePacket) GetEducationSharedResourceUri() *EducationSharedResourceURI {
	if x != nil {
		return x.EducationSharedResourceUri
	}
	return nil
}

func (x *StartGamePacket) GetForceExperimentalGameplay() bool {
	if x != nil {
		return x.ForceExperimentalGameplay
	}
	return false
}

func (x *StartGamePacket) GetLevelId() string {
	if x != nil {
		return x.LevelId
	}
	return ""
}

func (x *StartGamePacket) GetWorldName() string {
	if x != nil {
		return x.WorldName
	}
	return ""
}

func (x *StartGamePacket) GetTemplateContentIdentity() string {
	if x != nil {
		return x.TemplateContentIdentity
	}
	return ""
}

func (x *StartGamePacket) GetTrial() bool {
	if x != nil {
		return x.Trial
	}
	return false
}

func (x *StartGamePacket) GetPlayerMovementSettings() *PlayerMovementSettings {
	if x != nil {
		return x.PlayerMovementSettings
	}
	return nil
}

func (x *StartGamePacket) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *StartGamePacket) GetEnchantmentSeed() int32 {
	if x != nil {
		return x.EnchantmentSeed
	}
	return 0
}

func (x *StartGamePacket) GetBlocks() []*BlockEntry {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *StartGamePacket) GetItems() []*ItemEntry {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StartGamePacket) GetMultiPlayerCorrelationId() string {
	if x != nil {
		return x.MultiPlayerCorrelationId
	}
	return ""
}

func (x *StartGamePacket) GetServerAuthoritativeInventory() bool {
	if x != nil {
		return x.ServerAuthoritativeInventory
	}
	return false
}

func (x *StartGamePacket) GetGameVersion() string {
	if x != nil {
		return x.GameVersion
	}
	return ""
}

func (x *StartGamePacket) GetServerBlockStateChecksum() uint64 {
	if x != nil {
		return x.ServerBlockStateChecksum
	}
	return 0
}

type StopSoundPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoundName string `protobuf:"bytes,1,opt,name=sound_name,json=soundName,proto3" json:"sound_name,omitempty"`
	StopAll   bool   `protobuf:"varint,2,opt,name=stop_all,json=stopAll,proto3" json:"stop_all,omitempty"`
}

func (x *StopSoundPacket) Reset() {
	*x = StopSoundPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopSoundPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSoundPacket) ProtoMessage() {}

func (x *StopSoundPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSoundPacket.ProtoReflect.Descriptor instead.
func (*StopSoundPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{151}
}

func (x *StopSoundPacket) GetSoundName() string {
	if x != nil {
		return x.SoundName
	}
	return ""
}

func (x *StopSoundPacket) GetStopAll() bool {
	if x != nil {
		return x.StopAll
	}
	return false
}

type StructureBlockUpdatePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position           *Vector3I          `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	StructureName      string             `protobuf:"bytes,2,opt,name=structure_name,json=structureName,proto3" json:"structure_name,omitempty"`
	DataField          string             `protobuf:"bytes,3,opt,name=data_field,json=dataField,proto3" json:"data_field,omitempty"`
	IncludePlayers     bool               `protobuf:"varint,4,opt,name=include_players,json=includePlayers,proto3" json:"include_players,omitempty"`
	ShowBoundingBox    bool               `protobuf:"varint,5,opt,name=show_bounding_box,json=showBoundingBox,proto3" json:"show_bounding_box,omitempty"`
	StructureBlockType int32              `protobuf:"varint,6,opt,name=structure_block_type,json=structureBlockType,proto3" json:"structure_block_type,omitempty"`
	Settings           *StructureSettings `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
	RedstoneSaveMode   int32              `protobuf:"varint,8,opt,name=redstone_save_mode,json=redstoneSaveMode,proto3" json:"redstone_save_mode,omitempty"`
	ShouldTrigger      bool               `protobuf:"varint,9,opt,name=should_trigger,json=shouldTrigger,proto3" json:"should_trigger,omitempty"`
}

func (x *StructureBlockUpdatePacket) Reset() {
	*x = StructureBlockUpdatePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructureBlockUpdatePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructureBlockUpdatePacket) ProtoMessage() {}

func (x *StructureBlockUpdatePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructureBlockUpdatePacket.ProtoReflect.Descriptor instead.
func (*StructureBlockUpdatePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{152}
}

func (x *StructureBlockUpdatePacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *StructureBlockUpdatePacket) GetStructureName() string {
	if x != nil {
		return x.StructureName
	}
	return ""
}

func (x *StructureBlockUpdatePacket) GetDataField() string {
	if x != nil {
		return x.DataField
	}
	return ""
}

func (x *StructureBlockUpdatePacket) GetIncludePlayers() bool {
	if x != nil {
		return x.IncludePlayers
	}
	return false
}

func (x *StructureBlockUpdatePacket) GetShowBoundingBox() bool {
	if x != nil {
		return x.ShowBoundingBox
	}
	return false
}

func (x *StructureBlockUpdatePacket) GetStructureBlockType() int32 {
	if x != nil {
		return x.StructureBlockType
	}
	return 0
}

func (x *StructureBlockUpdatePacket) GetSettings() *StructureSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *StructureBlockUpdatePacket) GetRedstoneSaveMode() int32 {
	if x != nil {
		return x.RedstoneSaveMode
	}
	return 0
}

func (x *StructureBlockUpdatePacket) GetShouldTrigger() bool {
	if x != nil {
		return x.ShouldTrigger
	}
	return false
}

type StructureTemplateDataRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StructureName string             `protobuf:"bytes,1,opt,name=structure_name,json=structureName,proto3" json:"structure_name,omitempty"`
	Position      *Vector3I          `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Settings      *StructureSettings `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	RequestType   uint32             `protobuf:"varint,4,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
}

func (x *StructureTemplateDataRequestPacket) Reset() {
	*x = StructureTemplateDataRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructureTemplateDataRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructureTemplateDataRequestPacket) ProtoMessage() {}

func (x *StructureTemplateDataRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructureTemplateDataRequestPacket.ProtoReflect.Descriptor instead.
func (*StructureTemplateDataRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{153}
}

func (x *StructureTemplateDataRequestPacket) GetStructureName() string {
	if x != nil {
		return x.StructureName
	}
	return ""
}

func (x *StructureTemplateDataRequestPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *StructureTemplateDataRequestPacket) GetSettings() *StructureSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *StructureTemplateDataRequestPacket) GetRequestType() uint32 {
	if x != nil {
		return x.RequestType
	}
	return 0
}

type StructureTemplateDataResponsePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StructureName     string                `protobuf:"bytes,1,opt,name=structure_name,json=structureName,proto3" json:"structure_name,omitempty"`
	Success           bool                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ResponseType      uint32                `protobuf:"varint,3,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	StructureTemplate map[string]*anypb.Any `protobuf:"bytes,4,rep,name=structure_template,json=structureTemplate,proto3" json:"structure_template,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *StructureTemplateDataResponsePacket) Reset() {
	*x = StructureTemplateDataResponsePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructureTemplateDataResponsePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructureTemplateDataResponsePacket) ProtoMessage() {}

func (x *StructureTemplateDataResponsePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructureTemplateDataResponsePacket.ProtoReflect.Descriptor instead.
func (*StructureTemplateDataResponsePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{154}
}

func (x *StructureTemplateDataResponsePacket) GetStructureName() string {
	if x != nil {
		return x.StructureName
	}
	return ""
}

func (x *StructureTemplateDataResponsePacket) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StructureTemplateDataResponsePacket) GetResponseType() uint32 {
	if x != nil {
		return x.ResponseType
	}
	return 0
}

func (x *StructureTemplateDataResponsePacket) GetStructureTemplate() map[string]*anypb.Any {
	if x != nil {
		return x.StructureTemplate
	}
	return nil
}

type SubChunkPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheEnabled    bool             `protobuf:"varint,1,opt,name=cache_enabled,json=cacheEnabled,proto3" json:"cache_enabled,omitempty"`
	Dimension       int32            `protobuf:"varint,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Position        *Vector3I        `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	SubChunkEntries []*SubChunkEntry `protobuf:"bytes,4,rep,name=sub_chunk_entries,json=subChunkEntries,proto3" json:"sub_chunk_entries,omitempty"`
}

func (x *SubChunkPacket) Reset() {
	*x = SubChunkPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubChunkPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubChunkPacket) ProtoMessage() {}

func (x *SubChunkPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubChunkPacket.ProtoReflect.Descriptor instead.
func (*SubChunkPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{155}
}

func (x *SubChunkPacket) GetCacheEnabled() bool {
	if x != nil {
		return x.CacheEnabled
	}
	return false
}

func (x *SubChunkPacket) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *SubChunkPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SubChunkPacket) GetSubChunkEntries() []*SubChunkEntry {
	if x != nil {
		return x.SubChunkEntries
	}
	return nil
}

type SubChunkRequestPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dimension int32       `protobuf:"varint,1,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Position  *Vector3I   `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Offsets   []*Vector3I `protobuf:"bytes,3,rep,name=offsets,proto3" json:"offsets,omitempty"`
}

func (x *SubChunkRequestPacket) Reset() {
	*x = SubChunkRequestPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubChunkRequestPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubChunkRequestPacket) ProtoMessage() {}

func (x *SubChunkRequestPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubChunkRequestPacket.ProtoReflect.Descriptor instead.
func (*SubChunkRequestPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{156}
}

func (x *SubChunkRequestPacket) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *SubChunkRequestPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SubChunkRequestPacket) GetOffsets() []*Vector3I {
	if x != nil {
		return x.Offsets
	}
	return nil
}

type SubClientLoginPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionRequest []uint32 `protobuf:"varint,1,rep,packed,name=connection_request,json=connectionRequest,proto3" json:"connection_request,omitempty"`
}

func (x *SubClientLoginPacket) Reset() {
	*x = SubClientLoginPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubClientLoginPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubClientLoginPacket) ProtoMessage() {}

func (x *SubClientLoginPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubClientLoginPacket.ProtoReflect.Descriptor instead.
func (*SubClientLoginPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{157}
}

func (x *SubClientLoginPacket) GetConnectionRequest() []uint32 {
	if x != nil {
		return x.ConnectionRequest
	}
	return nil
}

type SyncActorPropertyPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyData map[string]*anypb.Any `protobuf:"bytes,1,rep,name=property_data,json=propertyData,proto3" json:"property_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SyncActorPropertyPacket) Reset() {
	*x = SyncActorPropertyPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncActorPropertyPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncActorPropertyPacket) ProtoMessage() {}

func (x *SyncActorPropertyPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncActorPropertyPacket.ProtoReflect.Descriptor instead.
func (*SyncActorPropertyPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{158}
}

func (x *SyncActorPropertyPacket) GetPropertyData() map[string]*anypb.Any {
	if x != nil {
		return x.PropertyData
	}
	return nil
}

type TakeItemActorPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemEntityRuntimeId  uint64 `protobuf:"varint,1,opt,name=item_entity_runtime_id,json=itemEntityRuntimeId,proto3" json:"item_entity_runtime_id,omitempty"`
	TakerEntityRuntimeId uint64 `protobuf:"varint,2,opt,name=taker_entity_runtime_id,json=takerEntityRuntimeId,proto3" json:"taker_entity_runtime_id,omitempty"`
}

func (x *TakeItemActorPacket) Reset() {
	*x = TakeItemActorPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeItemActorPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeItemActorPacket) ProtoMessage() {}

func (x *TakeItemActorPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeItemActorPacket.ProtoReflect.Descriptor instead.
func (*TakeItemActorPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{159}
}

func (x *TakeItemActorPacket) GetItemEntityRuntimeId() uint64 {
	if x != nil {
		return x.ItemEntityRuntimeId
	}
	return 0
}

func (x *TakeItemActorPacket) GetTakerEntityRuntimeId() uint64 {
	if x != nil {
		return x.TakerEntityRuntimeId
	}
	return 0
}

type TextPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextType         uint32   `protobuf:"varint,1,opt,name=text_type,json=textType,proto3" json:"text_type,omitempty"`
	NeedsTranslation bool     `protobuf:"varint,2,opt,name=needs_translation,json=needsTranslation,proto3" json:"needs_translation,omitempty"`
	SourceName       string   `protobuf:"bytes,3,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	Message          string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Parameters       []string `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Xuid             string   `protobuf:"bytes,6,opt,name=xuid,proto3" json:"xuid,omitempty"`
	PlatformChatId   string   `protobuf:"bytes,7,opt,name=platform_chat_id,json=platformChatId,proto3" json:"platform_chat_id,omitempty"`
}

func (x *TextPacket) Reset() {
	*x = TextPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextPacket) ProtoMessage() {}

func (x *TextPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextPacket.ProtoReflect.Descriptor instead.
func (*TextPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{160}
}

func (x *TextPacket) GetTextType() uint32 {
	if x != nil {
		return x.TextType
	}
	return 0
}

func (x *TextPacket) GetNeedsTranslation() bool {
	if x != nil {
		return x.NeedsTranslation
	}
	return false
}

func (x *TextPacket) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *TextPacket) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TextPacket) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TextPacket) GetXuid() string {
	if x != nil {
		return x.Xuid
	}
	return ""
}

func (x *TextPacket) GetPlatformChatId() string {
	if x != nil {
		return x.PlatformChatId
	}
	return ""
}

type TickSyncPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientRequestTimestamp   int64 `protobuf:"varint,1,opt,name=client_request_timestamp,json=clientRequestTimestamp,proto3" json:"client_request_timestamp,omitempty"`
	ServerReceptionTimestamp int64 `protobuf:"varint,2,opt,name=server_reception_timestamp,json=serverReceptionTimestamp,proto3" json:"server_reception_timestamp,omitempty"`
}

func (x *TickSyncPacket) Reset() {
	*x = TickSyncPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickSyncPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickSyncPacket) ProtoMessage() {}

func (x *TickSyncPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickSyncPacket.ProtoReflect.Descriptor instead.
func (*TickSyncPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{161}
}

func (x *TickSyncPacket) GetClientRequestTimestamp() int64 {
	if x != nil {
		return x.ClientRequestTimestamp
	}
	return 0
}

func (x *TickSyncPacket) GetServerReceptionTimestamp() int64 {
	if x != nil {
		return x.ServerReceptionTimestamp
	}
	return 0
}

type TransferPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port    uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *TransferPacket) Reset() {
	*x = TransferPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferPacket) ProtoMessage() {}

func (x *TransferPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferPacket.ProtoReflect.Descriptor instead.
func (*TransferPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{162}
}

func (x *TransferPacket) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TransferPacket) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type UpdateAttributesPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityRuntimeId uint64       `protobuf:"varint,1,opt,name=entity_runtime_id,json=entityRuntimeId,proto3" json:"entity_runtime_id,omitempty"`
	Attributes      []*Attribute `protobuf:"bytes,2,rep,name=attributes,proto3" json:"attributes,omitempty"`
	Tick            uint64       `protobuf:"varint,3,opt,name=tick,proto3" json:"tick,omitempty"`
}

func (x *UpdateAttributesPacket) Reset() {
	*x = UpdateAttributesPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAttributesPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttributesPacket) ProtoMessage() {}

func (x *UpdateAttributesPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttributesPacket.ProtoReflect.Descriptor instead.
func (*UpdateAttributesPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{163}
}

func (x *UpdateAttributesPacket) GetEntityRuntimeId() uint64 {
	if x != nil {
		return x.EntityRuntimeId
	}
	return 0
}

func (x *UpdateAttributesPacket) GetAttributes() []*Attribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *UpdateAttributesPacket) GetTick() uint64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

type UpdateBlockPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position          *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	NewBlockRuntimeId uint32    `protobuf:"varint,2,opt,name=new_block_runtime_id,json=newBlockRuntimeId,proto3" json:"new_block_runtime_id,omitempty"`
	Flags             uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Layer             uint32    `protobuf:"varint,4,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *UpdateBlockPacket) Reset() {
	*x = UpdateBlockPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockPacket) ProtoMessage() {}

func (x *UpdateBlockPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockPacket.ProtoReflect.Descriptor instead.
func (*UpdateBlockPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{164}
}

func (x *UpdateBlockPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UpdateBlockPacket) GetNewBlockRuntimeId() uint32 {
	if x != nil {
		return x.NewBlockRuntimeId
	}
	return 0
}

func (x *UpdateBlockPacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *UpdateBlockPacket) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

type UpdateBlockSyncedPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position          *Vector3I `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	NewBlockRuntimeId uint32    `protobuf:"varint,2,opt,name=new_block_runtime_id,json=newBlockRuntimeId,proto3" json:"new_block_runtime_id,omitempty"`
	Flags             uint32    `protobuf:"varint,3,opt,name=flags,proto3" json:"flags,omitempty"`
	Layer             uint32    `protobuf:"varint,4,opt,name=layer,proto3" json:"layer,omitempty"`
	EntityUniqueId    int64     `protobuf:"varint,5,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	TransitionType    uint64    `protobuf:"varint,6,opt,name=transition_type,json=transitionType,proto3" json:"transition_type,omitempty"`
}

func (x *UpdateBlockSyncedPacket) Reset() {
	*x = UpdateBlockSyncedPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBlockSyncedPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBlockSyncedPacket) ProtoMessage() {}

func (x *UpdateBlockSyncedPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBlockSyncedPacket.ProtoReflect.Descriptor instead.
func (*UpdateBlockSyncedPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{165}
}

func (x *UpdateBlockSyncedPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UpdateBlockSyncedPacket) GetNewBlockRuntimeId() uint32 {
	if x != nil {
		return x.NewBlockRuntimeId
	}
	return 0
}

func (x *UpdateBlockSyncedPacket) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *UpdateBlockSyncedPacket) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *UpdateBlockSyncedPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *UpdateBlockSyncedPacket) GetTransitionType() uint64 {
	if x != nil {
		return x.TransitionType
	}
	return 0
}

type UpdateEquipPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId                uint32   `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	WindowType              uint32   `protobuf:"varint,2,opt,name=window_type,json=windowType,proto3" json:"window_type,omitempty"`
	Size                    int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	EntityUniqueId          int64    `protobuf:"varint,4,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	SerialisedInventoryData []uint32 `protobuf:"varint,5,rep,packed,name=serialised_inventory_data,json=serialisedInventoryData,proto3" json:"serialised_inventory_data,omitempty"`
}

func (x *UpdateEquipPacket) Reset() {
	*x = UpdateEquipPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEquipPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEquipPacket) ProtoMessage() {}

func (x *UpdateEquipPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEquipPacket.ProtoReflect.Descriptor instead.
func (*UpdateEquipPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{166}
}

func (x *UpdateEquipPacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *UpdateEquipPacket) GetWindowType() uint32 {
	if x != nil {
		return x.WindowType
	}
	return 0
}

func (x *UpdateEquipPacket) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateEquipPacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *UpdateEquipPacket) GetSerialisedInventoryData() []uint32 {
	if x != nil {
		return x.SerialisedInventoryData
	}
	return nil
}

type UpdatePlayerGameTypePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameType       int32 `protobuf:"varint,1,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
	PlayerUniqueId int64 `protobuf:"varint,2,opt,name=player_unique_id,json=playerUniqueId,proto3" json:"player_unique_id,omitempty"`
}

func (x *UpdatePlayerGameTypePacket) Reset() {
	*x = UpdatePlayerGameTypePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlayerGameTypePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlayerGameTypePacket) ProtoMessage() {}

func (x *UpdatePlayerGameTypePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlayerGameTypePacket.ProtoReflect.Descriptor instead.
func (*UpdatePlayerGameTypePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{167}
}

func (x *UpdatePlayerGameTypePacket) GetGameType() int32 {
	if x != nil {
		return x.GameType
	}
	return 0
}

func (x *UpdatePlayerGameTypePacket) GetPlayerUniqueId() int64 {
	if x != nil {
		return x.PlayerUniqueId
	}
	return 0
}

type UpdateSoftEnumPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnumType   string   `protobuf:"bytes,1,opt,name=enum_type,json=enumType,proto3" json:"enum_type,omitempty"`
	Options    []string `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	ActionType uint32   `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
}

func (x *UpdateSoftEnumPacket) Reset() {
	*x = UpdateSoftEnumPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSoftEnumPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSoftEnumPacket) ProtoMessage() {}

func (x *UpdateSoftEnumPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSoftEnumPacket.ProtoReflect.Descriptor instead.
func (*UpdateSoftEnumPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{168}
}

func (x *UpdateSoftEnumPacket) GetEnumType() string {
	if x != nil {
		return x.EnumType
	}
	return ""
}

func (x *UpdateSoftEnumPacket) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *UpdateSoftEnumPacket) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

type UpdateSubChunkBlocksPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *Vector3I           `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Blocks   []*BlockChangeEntry `protobuf:"bytes,2,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Extra    []*BlockChangeEntry `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *UpdateSubChunkBlocksPacket) Reset() {
	*x = UpdateSubChunkBlocksPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubChunkBlocksPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubChunkBlocksPacket) ProtoMessage() {}

func (x *UpdateSubChunkBlocksPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubChunkBlocksPacket.ProtoReflect.Descriptor instead.
func (*UpdateSubChunkBlocksPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{169}
}

func (x *UpdateSubChunkBlocksPacket) GetPosition() *Vector3I {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *UpdateSubChunkBlocksPacket) GetBlocks() []*BlockChangeEntry {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *UpdateSubChunkBlocksPacket) GetExtra() []*BlockChangeEntry {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateTradePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId          uint32   `protobuf:"varint,1,opt,name=window_id,json=windowId,proto3" json:"window_id,omitempty"`
	WindowType        uint32   `protobuf:"varint,2,opt,name=window_type,json=windowType,proto3" json:"window_type,omitempty"`
	Size              int32    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	TradeTier         int32    `protobuf:"varint,4,opt,name=trade_tier,json=tradeTier,proto3" json:"trade_tier,omitempty"`
	VillagerUniqueId  int64    `protobuf:"varint,5,opt,name=villager_unique_id,json=villagerUniqueId,proto3" json:"villager_unique_id,omitempty"`
	EntityUniqueId    int64    `protobuf:"varint,6,opt,name=entity_unique_id,json=entityUniqueId,proto3" json:"entity_unique_id,omitempty"`
	DisplayName       string   `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	NewTradeUi        bool     `protobuf:"varint,8,opt,name=new_trade_ui,json=newTradeUi,proto3" json:"new_trade_ui,omitempty"`
	DemandBasedPrices bool     `protobuf:"varint,9,opt,name=demand_based_prices,json=demandBasedPrices,proto3" json:"demand_based_prices,omitempty"`
	SerialisedOffers  []uint32 `protobuf:"varint,10,rep,packed,name=serialised_offers,json=serialisedOffers,proto3" json:"serialised_offers,omitempty"`
}

func (x *UpdateTradePacket) Reset() {
	*x = UpdateTradePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTradePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTradePacket) ProtoMessage() {}

func (x *UpdateTradePacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTradePacket.ProtoReflect.Descriptor instead.
func (*UpdateTradePacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{170}
}

func (x *UpdateTradePacket) GetWindowId() uint32 {
	if x != nil {
		return x.WindowId
	}
	return 0
}

func (x *UpdateTradePacket) GetWindowType() uint32 {
	if x != nil {
		return x.WindowType
	}
	return 0
}

func (x *UpdateTradePacket) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateTradePacket) GetTradeTier() int32 {
	if x != nil {
		return x.TradeTier
	}
	return 0
}

func (x *UpdateTradePacket) GetVillagerUniqueId() int64 {
	if x != nil {
		return x.VillagerUniqueId
	}
	return 0
}

func (x *UpdateTradePacket) GetEntityUniqueId() int64 {
	if x != nil {
		return x.EntityUniqueId
	}
	return 0
}

func (x *UpdateTradePacket) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateTradePacket) GetNewTradeUi() bool {
	if x != nil {
		return x.NewTradeUi
	}
	return false
}

func (x *UpdateTradePacket) GetDemandBasedPrices() bool {
	if x != nil {
		return x.DemandBasedPrices
	}
	return false
}

func (x *UpdateTradePacket) GetSerialisedOffers() []uint32 {
	if x != nil {
		return x.SerialisedOffers
	}
	return nil
}

var File_packets_proto protoreflect.FileDescriptor

var file_packets_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61,
	0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f,
	0x74, 0x42, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x77, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x04, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x65, 0x61, 0x64, 0x5f, 0x79, 0x61, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x59, 0x61, 0x77, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x57, 0x0a,
	0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x1a, 0x57, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x54, 0x72, 0x65, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75,
	0x72, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x54, 0x72, 0x65, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xd5, 0x03, 0x0a, 0x12, 0x41,
	0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52,
	0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x5b, 0x0a, 0x0f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66,
	0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x46, 0x69, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x1a, 0x57, 0x0a, 0x13, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0xe1, 0x07, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x33, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x79, 0x61, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x79, 0x61, 0x77,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x59, 0x61, 0x77, 0x12,
	0x35, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x68, 0x65,
	0x6c, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x58, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0b,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a,
	0x57, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x03, 0x0a, 0x15, 0x41, 0x64, 0x64,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x5e,
	0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x2f, 0x0a, 0x13, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x57, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa9, 0x02, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x12,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xa4, 0x02, 0x0a,
	0x13, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x70, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x70, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x62, 0x6c, 0x65, 0x6e, 0x64, 0x4f, 0x75, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x5f, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x44, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6f, 0x61, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x62, 0x6f,
	0x61, 0x74, 0x52, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x11,
	0x41, 0x6e, 0x76, 0x69, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x6e, 0x76,
	0x69, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x0d, 0x61, 0x6e, 0x76, 0x69, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x1d, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x69, 0x22, 0x65, 0x0a, 0x1f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x1d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x1b, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x8f, 0x01,
	0x0a, 0x17, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69,
	0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x74, 0x73, 0x22,
	0x5d, 0x0a, 0x19, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x1c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x6f, 0x6d, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x1a, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x42, 0x69,
	0x6f, 0x6d, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe4,
	0x01, 0x0a, 0x14, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x08, 0x6e, 0x62, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x4e, 0x62,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x62, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x50, 0x0a, 0x0c, 0x4e, 0x62, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x90, 0x01, 0x0a, 0x16, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x62, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x62, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x68,
	0x6f, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0xa2, 0x02,
	0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x78, 0x75, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x75,
	0x69, 0x64, 0x22, 0xbd, 0x02, 0x0a, 0x0f, 0x42, 0x6f, 0x73, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x62, 0x6f, 0x73, 0x73, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x73, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x73, 0x73,
	0x42, 0x61, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f,
	0x64, 0x61, 0x72, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x61, 0x72, 0x6b, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x76, 0x65, 0x72,
	0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x79, 0x22, 0x7c, 0x0a, 0x0c, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x22, 0x79, 0x0a, 0x11, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x22,
	0x3d, 0x0a, 0x18, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0xe8,
	0x01, 0x0a, 0x1e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x52, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x67, 0x72,
	0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xef, 0x03, 0x0a, 0x1c, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4d, 0x61,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x70, 0x73, 0x5f,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0e, 0x6d, 0x61, 0x70, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x49,
	0x6e, 0x12, 0x45, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x61, 0x70, 0x54, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x61, 0x70, 0x44, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x79, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x79, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x47, 0x42, 0x41, 0x52, 0x06, 0x70, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x1b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69,
	0x73, 0x73, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x0a, 0x6d, 0x69, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x69, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x09, 0x68, 0x69, 0x74, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x1d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x42, 0x6c, 0x6f,
	0x62, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x62, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x57, 0x0a,
	0x1d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x37,
	0x0a, 0x18, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x69, 0x0a, 0x17, 0x43, 0x6f, 0x64, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xcd, 0x03, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e,
	0x65, 0x65, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x64, 0x73, 0x74, 0x6f,
	0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x6d, 0x69, 0x6e, 0x65, 0x63, 0x61,
	0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12,
	0x31, 0x0a, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4f, 0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x22, 0x83, 0x02, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x49, 0x0a, 0x0f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x22, 0x5b, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x20,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22,
	0x54, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73,
	0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x69, 0x64, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x43, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x69, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x21, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0xe3, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x61, 0x66,
	0x74, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2d,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x0a,
	0x0e, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52,
	0x0d, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12, 0x6e,
	0x0a, 0x1f, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x1c, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x12, 0x48,
	0x0a, 0x11, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x22, 0xda, 0x01,
	0x0a, 0x13, 0x43, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x61, 0x66, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x72, 0x61, 0x66, 0x74,
	0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x79, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f,
	0x0a, 0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x68, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x68, 0x69, 0x64, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x45, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52,
	0x49, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52,
	0x49, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xe0, 0x04, 0x0a, 0x17,
	0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x55, 0x72, 0x69,
	0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x62, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2e,
	0x0a, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6f, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x12, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x11, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x55, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x68,
	0x61, 0x73, 0x5f, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x64, 0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x48, 0x01, 0x52, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x60,
	0x0a, 0x0f, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73,
	0x22, 0x6a, 0x0a, 0x0b, 0x45, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xb3, 0x01, 0x0a,
	0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x47, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x15, 0x47,
	0x55, 0x49, 0x44, 0x61, 0x74, 0x61, 0x50, 0x69, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x45, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x42,
	0x61, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x4d, 0x0a, 0x16, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75,
	0x6c, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x33, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x48, 0x75, 0x72, 0x74, 0x41, 0x72, 0x6d,
	0x6f, 0x75, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x75,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x6d, 0x6f, 0x75,
	0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61,
	0x72, 0x6d, 0x6f, 0x75, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x16, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x7b, 0x0a, 0x13, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x53, 0x6c, 0x6f, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x33, 0x0a, 0x08,
	0x6e, 0x65, 0x77, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0xa3, 0x02, 0x0a, 0x1a, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x50, 0x0a, 0x15,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x12, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x53, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x35,
	0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x50, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x34,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x4b, 0x0a, 0x17, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x52, 0x0a, 0x16, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x56, 0x0a, 0x17, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x88, 0x01,
	0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x4c, 0x65, 0x63,
	0x74, 0x65, 0x72, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x62, 0x6f,
	0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x6f,
	0x6f, 0x6b, 0x22, 0xb4, 0x02, 0x0a, 0x10, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x69, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x75, 0x62,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x73, 0x75, 0x62, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x75,
	0x62, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x62, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x62, 0x6c,
	0x6f, 0x62, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x72,
	0x61, 0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x68, 0x0a, 0x17, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x13,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xfb, 0x01, 0x0a, 0x15, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x62, 0x79, 0x5f, 0x6d, 0x6f, 0x62, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61, 0x62, 0x79, 0x4d, 0x6f, 0x62, 0x12, 0x36,
	0x0a, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x2d,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x61, 0x0a,
	0x19, 0x4d, 0x61, 0x70, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x43, 0x6f, 0x70, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x70,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x49, 0x64,
	0x22, 0x2d, 0x0a, 0x14, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x22,
	0x98, 0x02, 0x0a, 0x18, 0x4d, 0x6f, 0x62, 0x41, 0x72, 0x6d, 0x6f, 0x75, 0x72, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x68, 0x65, 0x6c, 0x6d,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x06, 0x68, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x73, 0x74, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x65, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x08, 0x6c, 0x65, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x05, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x22, 0xd4, 0x01, 0x0a, 0x0f, 0x4d,
	0x6f, 0x62, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d, 0x70,
	0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x6d,
	0x70, 0x6c, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xdb, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x62, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x42, 0x61, 0x72, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x22,
	0x4e, 0x0a, 0x16, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x72,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x57, 0x0a, 0x17, 0x4d, 0x6f, 0x64, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x98, 0x01, 0x0a, 0x1b, 0x4d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x6e,
	0x74, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x76, 0x65,
	0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x62, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x03, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x79, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x79, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x59, 0x61, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x72,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x72,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x74,
	0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x18, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x22, 0x3c,
	0x0a, 0x19, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd3, 0x01, 0x0a,
	0x11, 0x4e, 0x50, 0x43, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x70, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x70, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x73,
	0x6f, 0x6e, 0x22, 0xc8, 0x01, 0x0a, 0x10, 0x4e, 0x50, 0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a,
	0x21, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x15,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x60, 0x0a, 0x19, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6e,
	0x65, 0x65, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47, 0x0a, 0x1e,
	0x4f, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x41,
	0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x1c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x22, 0x3a, 0x0a, 0x13, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x4a, 0x75, 0x6d,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x75, 0x6d, 0x70, 0x5f,
	0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6a, 0x75, 0x6d, 0x70, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x33, 0x0a, 0x16,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x49,
	0x64, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e,
	0x65, 0x77, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0f,
	0x50, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x22, 0x2a,
	0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x12, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x0d, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x61, 0x63, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x18, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x72, 0x6d, 0x6f, 0x75, 0x72, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x74, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x62, 0x69, 0x74, 0x73, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x68, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x65, 0x6c, 0x6d, 0x65, 0x74, 0x44, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x73, 0x74, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x63, 0x68, 0x65, 0x73, 0x74, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x65, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x73, 0x5f, 0x64, 0x61,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x65, 0x67, 0x67,
	0x69, 0x6e, 0x67, 0x73, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x5f, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x83, 0x05,
	0x0a, 0x15, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a,
	0x03, 0x79, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79, 0x61, 0x77, 0x12,
	0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x66, 0x52, 0x0a, 0x6d, 0x6f,
	0x76, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x5f, 0x79, 0x61, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x59, 0x61, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3b,
	0x0a, 0x0e, 0x67, 0x61, 0x7a, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x0d, 0x67, 0x61,
	0x7a, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x12,
	0x2a, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x33, 0x66, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x15, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x69,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x42, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x1a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x6e, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x46, 0x6f, 0x67, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x22, 0x93, 0x01, 0x0a, 0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x6f,
	0x74, 0x42, 0x61, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x48, 0x6f, 0x74, 0x42, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48,
	0x6f, 0x74, 0x42, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x22, 0x7b, 0x0a, 0x11, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30,
	0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x32, 0x66, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6e,
	0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6e,
	0x65, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0x6a, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x6b, 0x69,
	0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x73,
	0x6b, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x6b, 0x69, 0x6e, 0x52, 0x04, 0x73, 0x6b, 0x69,
	0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x6b, 0x69, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x53, 0x6b, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x6b, 0x69,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x53, 0x6b, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x25, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x42, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x27, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x42, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x15, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73,
	0x22, 0x3d, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22,
	0x40, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x46, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x55, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e,
	0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6a, 0x0a, 0x20, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x63,
	0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d,
	0x69, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x89, 0x03, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x12, 0x46, 0x0a, 0x0f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0e, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x75, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x42, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x0c,
	0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79,
	0x5f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x6c, 0x79, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64, 0x22, 0xaa, 0x02, 0x0a,
	0x17, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x65, 0x78, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x46, 0x0a,
	0x0f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61, 0x63,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x40, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62,
	0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x63, 0x69,
	0x6e, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x63, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22,
	0x57, 0x0a, 0x17, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x54, 0x0a, 0x1c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08,
	0x66, 0x6f, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x1d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x77, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x22, 0x8a, 0x02, 0x0a, 0x12,
	0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x5b,
	0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x63, 0x6b, 0x1a,
	0x57, 0x0a, 0x13, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4d, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x37,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x74, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x22, 0x34, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x37, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x35, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75,
	0x6c, 0x74, 0x79, 0x22, 0xcc, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x6c, 0x6f,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x6c, 0x6f, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x36, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x48, 0x75, 0x72, 0x74, 0x42, 0x79, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x21, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x68,
	0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x35, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52,
	0x0d, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x23,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x66,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x66, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x11, 0x66, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x61, 0x64, 0x65, 0x4f,
	0x75, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x75, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x15,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x60, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x27, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x75, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x14,
	0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f,
	0x0a, 0x14, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x79, 0x0a, 0x18, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x4f, 0x72, 0x62, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x11, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcb, 0x17, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x66, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x79,
	0x61, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x65, 0x65,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x62, 0x69, 0x6f, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x6f, 0x6d,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x42, 0x69, 0x6f, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x26,
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x47, 0x61,
	0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x69, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x12, 0x33, 0x0a,
	0x15, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x63,
	0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x64, 0x61, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1a, 0x65, 0x64, 0x75,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65,
	0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x64, 0x75, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x69,
	0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x72,
	0x61, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0e, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x49, 0x0a, 0x21, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x6d,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x61, 0x6e, 0x5f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x6c, 0x61, 0x6e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x78, 0x62, 0x6c, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x78, 0x62, 0x6c, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x74, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x12, 0x33, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62,
	0x75, 0x66, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d,
	0x65, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x1e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x6c, 0x79, 0x5f, 0x74,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x6c, 0x79, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x43, 0x68,
	0x65, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37,
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74,
	0x69, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x54, 0x69, 0x63,
	0x6b, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x61, 0x73, 0x5f, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x68, 0x61, 0x73, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x12, 0x35, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x75, 0x72, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x1a, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x66,
	0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x73, 0x61, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x6d, 0x73, 0x61, 0x47, 0x61, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x66, 0x72, 0x6f, 0x6d, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x6f, 0x6e,
	0x6c, 0x79, 0x5f, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x76, 0x5f, 0x31, 0x5f, 0x76, 0x69, 0x6c,
	0x6c, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x6f, 0x6e,
	0x6c, 0x79, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x56, 0x31, 0x56, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x61, 0x73, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x13, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x2e,
	0x0a, 0x13, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f,
	0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x18, 0x2e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x12, 0x69, 0x0a,
	0x1d, 0x65, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x64, 0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x52, 0x49, 0x52, 0x1a, 0x65, 0x64,
	0x75, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x69, 0x12, 0x3e, 0x0a, 0x1b, 0x66, 0x6f, 0x72, 0x63,
	0x65, 0x5f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x67,
	0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x6c,
	0x47, 0x61, 0x6d, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x34, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x5c, 0x0a, 0x18, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b,
	0x62, 0x75, 0x66, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x16, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x18, 0x37, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x65, 0x6e, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x38, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x39, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3d,
	0x0a, 0x1b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x3a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a,
	0x1e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x22, 0x4b, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x61, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x41,
	0x6c, 0x6c, 0x22, 0xab, 0x03, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x73,
	0x68, 0x6f, 0x77, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x78, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x64, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x64, 0x73, 0x74, 0x6f, 0x6e,
	0x65, 0x53, 0x61, 0x76, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x75, 0x6c, 0x64, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x22, 0xdb, 0x01, 0x0a, 0x22, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x39, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xde,
	0x02, 0x0a, 0x23, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x75, 0x0a, 0x12,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x11, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xcc, 0x01, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63,
	0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x73,
	0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x97,
	0x01, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52,
	0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xcc, 0x01, 0x0a, 0x17, 0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x5a, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x55, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81,
	0x01, 0x0a, 0x13, 0x54, 0x61, 0x6b, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x63, 0x74, 0x6f, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x69, 0x74, 0x65, 0x6d, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x74,
	0x61, 0x6b, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x61,
	0x6b, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x49, 0x64, 0x22, 0xef, 0x01, 0x0a, 0x0a, 0x54, 0x65, 0x78, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x6e, 0x65, 0x65, 0x64, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6e, 0x65, 0x65, 0x64, 0x73,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x75, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x79, 0x6e,
	0x63, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x3e, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x8f, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x63,
	0x6b, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72,
	0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x65, 0x77,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xfb, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x6e, 0x65, 0x77, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x19, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x17, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x69, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x63, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6f, 0x66, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x69, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0xfe, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x6c,
	0x6c, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x76, 0x69, 0x6c, 0x6c, 0x61, 0x67, 0x65, 0x72, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x75, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x55, 0x69, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x61, 0x73, 0x65, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x73, 0x65, 0x64, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x77, 0x69, 0x73, 0x74, 0x65, 0x64, 0x61, 0x73, 0x79, 0x6c, 0x75, 0x6d, 0x6d,
	0x63, 0x2f, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x63, 0x6b, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packets_proto_rawDescOnce sync.Once
	file_packets_proto_rawDescData = file_packets_proto_rawDesc
)

func file_packets_proto_rawDescGZIP() []byte {
	file_packets_proto_rawDescOnce.Do(func() {
		file_packets_proto_rawDescData = protoimpl.X.CompressGZIP(file_packets_proto_rawDescData)
	})
	return file_packets_proto_rawDescData
}

var file_packets_proto_msgTypes = make([]protoimpl.MessageInfo, 179)
var file_packets_proto_goTypes = []interface{}{
	(*ActorEventPacket)(nil),                        // 0: bedrockbuf.ActorEventPacket
	(*ActorPickRequestPacket)(nil),                  // 1: bedrockbuf.ActorPickRequestPacket
	(*AddActorPacket)(nil),                          // 2: bedrockbuf.AddActorPacket
	(*AddBehaviourTreePacket)(nil),                  // 3: bedrockbuf.AddBehaviourTreePacket
	(*AddEntityPacket)(nil),                         // 4: bedrockbuf.AddEntityPacket
	(*AddItemActorPacket)(nil),                      // 5: bedrockbuf.AddItemActorPacket
	(*AddPaintingPacket)(nil),                       // 6: bedrockbuf.AddPaintingPacket
	(*AddPlayerPacket)(nil),                         // 7: bedrockbuf.AddPlayerPacket
	(*AddVolumeEntityPacket)(nil),                   // 8: bedrockbuf.AddVolumeEntityPacket
	(*AdventureSettingsPacket)(nil),                 // 9: bedrockbuf.AdventureSettingsPacket
	(*AnimateEntityPacket)(nil),                     // 10: bedrockbuf.AnimateEntityPacket
	(*AnimatePacket)(nil),                           // 11: bedrockbuf.AnimatePacket
	(*AnvilDamagePacket)(nil),                       // 12: bedrockbuf.AnvilDamagePacket
	(*AutomationClientConnectPacket)(nil),           // 13: bedrockbuf.AutomationClientConnectPacket
	(*AvailableActorIdentifiersPacket)(nil),         // 14: bedrockbuf.AvailableActorIdentifiersPacket
	(*AvailableCommandsPacket)(nil),                 // 15: bedrockbuf.AvailableCommandsPacket
	(*BiomeDefinitionListPacket)(nil),               // 16: bedrockbuf.BiomeDefinitionListPacket
	(*BlockActorDataPacket)(nil),                    // 17: bedrockbuf.BlockActorDataPacket
	(*BlockEventPacket)(nil),                        // 18: bedrockbuf.BlockEventPacket
	(*BlockPickRequestPacket)(nil),                  // 19: bedrockbuf.BlockPickRequestPacket
	(*BookEditPacket)(nil),                          // 20: bedrockbuf.BookEditPacket
	(*BossEventPacket)(nil),                         // 21: bedrockbuf.BossEventPacket
	(*CameraPacket)(nil),                            // 22: bedrockbuf.CameraPacket
	(*CameraShakePacket)(nil),                       // 23: bedrockbuf.CameraShakePacket
	(*ChangeDimensionPacket)(nil),                   // 24: bedrockbuf.ChangeDimensionPacket
	(*ChunkRadiusUpdatedPacket)(nil),                // 25: bedrockbuf.ChunkRadiusUpdatedPacket
	(*ClientBoundDebugRendererPacket)(nil),          // 26: bedrockbuf.ClientBoundDebugRendererPacket
	(*ClientBoundMapItemDataPacket)(nil),            // 27: bedrockbuf.ClientBoundMapItemDataPacket
	(*ClientCacheBlobStatusPacket)(nil),             // 28: bedrockbuf.ClientCacheBlobStatusPacket
	(*ClientCacheMissResponsePacket)(nil),           // 29: bedrockbuf.ClientCacheMissResponsePacket
	(*ClientCacheStatusPacket)(nil),                 // 30: bedrockbuf.ClientCacheStatusPacket
	(*ClientStartItemCooldownPacket)(nil),           // 31: bedrockbuf.ClientStartItemCooldownPacket
	(*ClientToServerHandshakePacket)(nil),           // 32: bedrockbuf.ClientToServerHandshakePacket
	(*CodeBuilderPacket)(nil),                       // 33: bedrockbuf.CodeBuilderPacket
	(*CodeBuilderSourcePacket)(nil),                 // 34: bedrockbuf.CodeBuilderSourcePacket
	(*CommandBlockUpdatePacket)(nil),                // 35: bedrockbuf.CommandBlockUpdatePacket
	(*CommandOutputPacket)(nil),                     // 36: bedrockbuf.CommandOutputPacket
	(*CommandRequestPacket)(nil),                    // 37: bedrockbuf.CommandRequestPacket
	(*CompletedUsingItemPacket)(nil),                // 38: bedrockbuf.CompletedUsingItemPacket
	(*ContainerClosePacket)(nil),                    // 39: bedrockbuf.ContainerClosePacket
	(*ContainerOpenPacket)(nil),                     // 40: bedrockbuf.ContainerOpenPacket
	(*ContainerSetDataPacket)(nil),                  // 41: bedrockbuf.ContainerSetDataPacket
	(*CorrectPlayerMovePredictionPacket)(nil),       // 42: bedrockbuf.CorrectPlayerMovePredictionPacket
	(*CraftingDataPacket)(nil),                      // 43: bedrockbuf.CraftingDataPacket
	(*CraftingEventPacket)(nil),                     // 44: bedrockbuf.CraftingEventPacket
	(*CreatePhotoPacket)(nil),                       // 45: bedrockbuf.CreatePhotoPacket
	(*CreativeContentPacket)(nil),                   // 46: bedrockbuf.CreativeContentPacket
	(*DebugInfoPacket)(nil),                         // 47: bedrockbuf.DebugInfoPacket
	(*DisconnectPacket)(nil),                        // 48: bedrockbuf.DisconnectPacket
	(*EducationResourceURIPacket)(nil),              // 49: bedrockbuf.EducationResourceURIPacket
	(*EducationSettingsPacket)(nil),                 // 50: bedrockbuf.EducationSettingsPacket
	(*EmoteListPacket)(nil),                         // 51: bedrockbuf.EmoteListPacket
	(*EmotePacket)(nil),                             // 52: bedrockbuf.EmotePacket
	(*EventPacket)(nil),                             // 53: bedrockbuf.EventPacket
	(*FilterTextPacket)(nil),                        // 54: bedrockbuf.FilterTextPacket
	(*GUIDataPickItemPacket)(nil),                   // 55: bedrockbuf.GUIDataPickItemPacket
	(*GameRulesChangedPacket)(nil),                  // 56: bedrockbuf.GameRulesChangedPacket
	(*HurtArmourPacket)(nil),                        // 57: bedrockbuf.HurtArmourPacket
	(*InteractPacket)(nil),                          // 58: bedrockbuf.InteractPacket
	(*InventoryContentPacket)(nil),                  // 59: bedrockbuf.InventoryContentPacket
	(*InventorySlotPacket)(nil),                     // 60: bedrockbuf.InventorySlotPacket
	(*InventoryTransactionPacket)(nil),              // 61: bedrockbuf.InventoryTransactionPacket
	(*ItemComponentPacket)(nil),                     // 62: bedrockbuf.ItemComponentPacket
	(*ItemFrameDropItemPacket)(nil),                 // 63: bedrockbuf.ItemFrameDropItemPacket
	(*ItemStackRequestPacket)(nil),                  // 64: bedrockbuf.ItemStackRequestPacket
	(*ItemStackResponsePacket)(nil),                 // 65: bedrockbuf.ItemStackResponsePacket
	(*LabTablePacket)(nil),                          // 66: bedrockbuf.LabTablePacket
	(*LecternUpdatePacket)(nil),                     // 67: bedrockbuf.LecternUpdatePacket
	(*LevelChunkPacket)(nil),                        // 68: bedrockbuf.LevelChunkPacket
	(*LevelEventGenericPacket)(nil),                 // 69: bedrockbuf.LevelEventGenericPacket
	(*LevelEventPacket)(nil),                        // 70: bedrockbuf.LevelEventPacket
	(*LevelSoundEventPacket)(nil),                   // 71: bedrockbuf.LevelSoundEventPacket
	(*LoginPacket)(nil),                             // 72: bedrockbuf.LoginPacket
	(*MapCreateLockedCopyPacket)(nil),               // 73: bedrockbuf.MapCreateLockedCopyPacket
	(*MapInfoRequestPacket)(nil),                    // 74: bedrockbuf.MapInfoRequestPacket
	(*MobArmourEquipmentPacket)(nil),                // 75: bedrockbuf.MobArmourEquipmentPacket
	(*MobEffectPacket)(nil),                         // 76: bedrockbuf.MobEffectPacket
	(*MobEquipmentPacket)(nil),                      // 77: bedrockbuf.MobEquipmentPacket
	(*ModalFormRequestPacket)(nil),                  // 78: bedrockbuf.ModalFormRequestPacket
	(*ModalFormResponsePacket)(nil),                 // 79: bedrockbuf.ModalFormResponsePacket
	(*MotionPredictionHintsPacket)(nil),             // 80: bedrockbuf.MotionPredictionHintsPacket
	(*MoveActorAbsolutePacket)(nil),                 // 81: bedrockbuf.MoveActorAbsolutePacket
	(*MoveActorDeltaPacket)(nil),                    // 82: bedrockbuf.MoveActorDeltaPacket
	(*MovePlayerPacket)(nil),                        // 83: bedrockbuf.MovePlayerPacket
	(*MultiPlayerSettingsPacket)(nil),               // 84: bedrockbuf.MultiPlayerSettingsPacket
	(*NPCDialoguePacket)(nil),                       // 85: bedrockbuf.NPCDialoguePacket
	(*NPCRequestPacket)(nil),                        // 86: bedrockbuf.NPCRequestPacket
	(*NetworkChunkPublisherUpdatePacket)(nil),       // 87: bedrockbuf.NetworkChunkPublisherUpdatePacket
	(*NetworkSettingsPacket)(nil),                   // 88: bedrockbuf.NetworkSettingsPacket
	(*NetworkStackLatencyPacket)(nil),               // 89: bedrockbuf.NetworkStackLatencyPacket
	(*OnScreenTextureAnimationPacket)(nil),          // 90: bedrockbuf.OnScreenTextureAnimationPacket
	(*PacketViolationWarningPacket)(nil),            // 91: bedrockbuf.PacketViolationWarningPacket
	(*PassengerJumpPacket)(nil),                     // 92: bedrockbuf.PassengerJumpPacket
	(*PhotoInfoRequestPacket)(nil),                  // 93: bedrockbuf.PhotoInfoRequestPacket
	(*PhotoTransferPacket)(nil),                     // 94: bedrockbuf.PhotoTransferPacket
	(*PlaySoundPacket)(nil),                         // 95: bedrockbuf.PlaySoundPacket
	(*PlayStatusPacket)(nil),                        // 96: bedrockbuf.PlayStatusPacket
	(*PlayerActionPacket)(nil),                      // 97: bedrockbuf.PlayerActionPacket
	(*PlayerArmourDamagePacket)(nil),                // 98: bedrockbuf.PlayerArmourDamagePacket
	(*PlayerAuthInputPacket)(nil),                   // 99: bedrockbuf.PlayerAuthInputPacket
	(*PlayerEnchantOptionsPacket)(nil),              // 100: bedrockbuf.PlayerEnchantOptionsPacket
	(*PlayerFogPacket)(nil),                         // 101: bedrockbuf.PlayerFogPacket
	(*PlayerHotBarPacket)(nil),                      // 102: bedrockbuf.PlayerHotBarPacket
	(*PlayerInputPacket)(nil),                       // 103: bedrockbuf.PlayerInputPacket
	(*PlayerListPacket)(nil),                        // 104: bedrockbuf.PlayerListPacket
	(*PlayerSkinPacket)(nil),                        // 105: bedrockbuf.PlayerSkinPacket
	(*PositionTrackingDBClientRequestPacket)(nil),   // 106: bedrockbuf.PositionTrackingDBClientRequestPacket
	(*PositionTrackingDBServerBroadcastPacket)(nil), // 107: bedrockbuf.PositionTrackingDBServerBroadcastPacket
	(*PurchaseReceiptPacket)(nil),                   // 108: bedrockbuf.PurchaseReceiptPacket
	(*RemoveActorPacket)(nil),                       // 109: bedrockbuf.RemoveActorPacket
	(*RemoveEntityPacket)(nil),                      // 110: bedrockbuf.RemoveEntityPacket
	(*RemoveObjectivePacket)(nil),                   // 111: bedrockbuf.RemoveObjectivePacket
	(*RemoveVolumeEntityPacket)(nil),                // 112: bedrockbuf.RemoveVolumeEntityPacket
	(*RequestChunkRadiusPacket)(nil),                // 113: bedrockbuf.RequestChunkRadiusPacket
	(*ResourcePackChunkDataPacket)(nil),             // 114: bedrockbuf.ResourcePackChunkDataPacket
	(*ResourcePackChunkRequestPacket)(nil),          // 115: bedrockbuf.ResourcePackChunkRequestPacket
	(*ResourcePackClientResponsePacket)(nil),        // 116: bedrockbuf.ResourcePackClientResponsePacket
	(*ResourcePackDataInfoPacket)(nil),              // 117: bedrockbuf.ResourcePackDataInfoPacket
	(*ResourcePackStackPacket)(nil),                 // 118: bedrockbuf.ResourcePackStackPacket
	(*ResourcePacksInfoPacket)(nil),                 // 119: bedrockbuf.ResourcePacksInfoPacket
	(*RespawnPacket)(nil),                           // 120: bedrockbuf.RespawnPacket
	(*ScriptCustomEventPacket)(nil),                 // 121: bedrockbuf.ScriptCustomEventPacket
	(*ScriptMessagePacket)(nil),                     // 122: bedrockbuf.ScriptMessagePacket
	(*ServerSettingsRequestPacket)(nil),             // 123: bedrockbuf.ServerSettingsRequestPacket
	(*ServerSettingsResponsePacket)(nil),            // 124: bedrockbuf.ServerSettingsResponsePacket
	(*ServerToClientHandshakePacket)(nil),           // 125: bedrockbuf.ServerToClientHandshakePacket
	(*SetActorDataPacket)(nil),                      // 126: bedrockbuf.SetActorDataPacket
	(*SetActorLinkPacket)(nil),                      // 127: bedrockbuf.SetActorLinkPacket
	(*SetActorMotionPacket)(nil),                    // 128: bedrockbuf.SetActorMotionPacket
	(*SetCommandsEnabledPacket)(nil),                // 129: bedrockbuf.SetCommandsEnabledPacket
	(*SetDefaultGameTypePacket)(nil),                // 130: bedrockbuf.SetDefaultGameTypePacket
	(*SetDifficultyPacket)(nil),                     // 131: bedrockbuf.SetDifficultyPacket
	(*SetDisplayObjectivePacket)(nil),               // 132: bedrockbuf.SetDisplayObjectivePacket
	(*SetHealthPacket)(nil),                         // 133: bedrockbuf.SetHealthPacket
	(*SetLastHurtByPacket)(nil),                     // 134: bedrockbuf.SetLastHurtByPacket
	(*SetLocalPlayerAsInitialisedPacket)(nil),       // 135: bedrockbuf.SetLocalPlayerAsInitialisedPacket
	(*SetPlayerGameTypePacket)(nil),                 // 136: bedrockbuf.SetPlayerGameTypePacket
	(*SetScorePacket)(nil),                          // 137: bedrockbuf.SetScorePacket
	(*SetScoreboardIdentityPacket)(nil),             // 138: bedrockbuf.SetScoreboardIdentityPacket
	(*SetSpawnPositionPacket)(nil),                  // 139: bedrockbuf.SetSpawnPositionPacket
	(*SetTimePacket)(nil),                           // 140: bedrockbuf.SetTimePacket
	(*SetTitlePacket)(nil),                          // 141: bedrockbuf.SetTitlePacket
	(*SettingsCommandPacket)(nil),                   // 142: bedrockbuf.SettingsCommandPacket
	(*ShowCreditsPacket)(nil),                       // 143: bedrockbuf.ShowCreditsPacket
	(*ShowProfilePacket)(nil),                       // 144: bedrockbuf.ShowProfilePacket
	(*ShowStoreOfferPacket)(nil),                    // 145: bedrockbuf.ShowStoreOfferPacket
	(*SimpleEventPacket)(nil),                       // 146: bedrockbuf.SimpleEventPacket
	(*SimulationTypePacket)(nil),                    // 147: bedrockbuf.SimulationTypePacket
	(*SpawnExperienceOrbPacket)(nil),                // 148: bedrockbuf.SpawnExperienceOrbPacket
	(*SpawnParticleEffectPacket)(nil),               // 149: bedrockbuf.SpawnParticleEffectPacket
	(*StartGamePacket)(nil),                         // 150: bedrockbuf.StartGamePacket
	(*StopSoundPacket)(nil),                         // 151: bedrockbuf.StopSoundPacket
	(*StructureBlockUpdatePacket)(nil),              // 152: bedrockbuf.StructureBlockUpdatePacket
	(*StructureTemplateDataRequestPacket)(nil),      // 153: bedrockbuf.StructureTemplateDataRequestPacket
	(*StructureTemplateDataResponsePacket)(nil),     // 154: bedrockbuf.StructureTemplateDataResponsePacket
	(*SubChunkPacket)(nil),                          // 155: bedrockbuf.SubChunkPacket
	(*SubChunkRequestPacket)(nil),                   // 156: bedrockbuf.SubChunkRequestPacket
	(*SubClientLoginPacket)(nil),                    // 157: bedrockbuf.SubClientLoginPacket
	(*SyncActorPropertyPacket)(nil),                 // 158: bedrockbuf.SyncActorPropertyPacket
	(*TakeItemActorPacket)(nil),                     // 159: bedrockbuf.TakeItemActorPacket
	(*TextPacket)(nil),                              // 160: bedrockbuf.TextPacket
	(*TickSyncPacket)(nil),                          // 161: bedrockbuf.TickSyncPacket
	(*TransferPacket)(nil),                          // 162: bedrockbuf.TransferPacket
	(*UpdateAttributesPacket)(nil),                  // 163: bedrockbuf.UpdateAttributesPacket
	(*UpdateBlockPacket)(nil),                       // 164: bedrockbuf.UpdateBlockPacket
	(*UpdateBlockSyncedPacket)(nil),                 // 165: bedrockbuf.UpdateBlockSyncedPacket
	(*UpdateEquipPacket)(nil),                       // 166: bedrockbuf.UpdateEquipPacket
	(*UpdatePlayerGameTypePacket)(nil),              // 167: bedrockbuf.UpdatePlayerGameTypePacket
	(*UpdateSoftEnumPacket)(nil),                    // 168: bedrockbuf.UpdateSoftEnumPacket
	(*UpdateSubChunkBlocksPacket)(nil),              // 169: bedrockbuf.UpdateSubChunkBlocksPacket
	(*UpdateTradePacket)(nil),                       // 170: bedrockbuf.UpdateTradePacket
	nil,                                             // 171: bedrockbuf.AddActorPacket.EntityMetadataEntry
	nil,                                             // 172: bedrockbuf.AddItemActorPacket.EntityMetadataEntry
	nil,                                             // 173: bedrockbuf.AddPlayerPacket.EntityMetadataEntry
	nil,                                             // 174: bedrockbuf.AddVolumeEntityPacket.EntityMetadataEntry
	nil,                                             // 175: bedrockbuf.BlockActorDataPacket.NbtDataEntry
	nil,                                             // 176: bedrockbuf.SetActorDataPacket.EntityMetadataEntry
	nil,                                             // 177: bedrockbuf.StructureTemplateDataResponsePacket.StructureTemplateEntry
	nil,                                             // 178: bedrockbuf.SyncActorPropertyPacket.PropertyDataEntry
	(*Vector3F)(nil),                                // 179: bedrockbuf.Vector3f
	(*Attribute)(nil),                               // 180: bedrockbuf.Attribute
	(*EntityLink)(nil),                              // 181: bedrockbuf.EntityLink
	(*ItemInstance)(nil),                            // 182: bedrockbuf.ItemInstance
	(*Vector3I)(nil),                                // 183: bedrockbuf.Vector3i
	(*Command)(nil),                                 // 184: bedrockbuf.Command
	(*CommandEnumConstraint)(nil),                   // 185: bedrockbuf.CommandEnumConstraint
	(*MapTrackedObject)(nil),                        // 186: bedrockbuf.MapTrackedObject
	(*MapDecoration)(nil),                           // 187: bedrockbuf.MapDecoration
	(*RepeatedRGBA)(nil),                            // 188: bedrockbuf.RepeatedRGBA
	(*CacheBlob)(nil),                               // 189: bedrockbuf.CacheBlob
	(*CommandOrigin)(nil),                           // 190: bedrockbuf.CommandOrigin
	(*CommandOutputMessage)(nil),                    // 191: bedrockbuf.CommandOutputMessage
	(*IRecipe)(nil),                                 // 192: bedrockbuf.IRecipe
	(*PotionRecipe)(nil),                            // 193: bedrockbuf.PotionRecipe
	(*PotionContainerChangeRecipe)(nil),             // 194: bedrockbuf.PotionContainerChangeRecipe
	(*MaterialReducer)(nil),                         // 195: bedrockbuf.MaterialReducer
	(*CreativeItem)(nil),                            // 196: bedrockbuf.CreativeItem
	(*EducationSharedResourceURI)(nil),              // 197: bedrockbuf.EducationSharedResourceURI
	(*EducationExternalLinkSettings)(nil),           // 198: bedrockbuf.EducationExternalLinkSettings
	(*IEventData)(nil),                              // 199: bedrockbuf.IEventData
	(*GameRule)(nil),                                // 200: bedrockbuf.GameRule
	(*LegacySetItemSlot)(nil),                       // 201: bedrockbuf.LegacySetItemSlot
	(*InventoryAction)(nil),                         // 202: bedrockbuf.InventoryAction
	(*IInventoryTransactionData)(nil),               // 203: bedrockbuf.IInventoryTransactionData
	(*ItemComponentEntry)(nil),                      // 204: bedrockbuf.ItemComponentEntry
	(*ItemStackRequest)(nil),                        // 205: bedrockbuf.ItemStackRequest
	(*ItemStackResponse)(nil),                       // 206: bedrockbuf.ItemStackResponse
	(*Vector2I)(nil),                                // 207: bedrockbuf.Vector2i
	(*Vector2F)(nil),                                // 208: bedrockbuf.Vector2f
	(*UseItemTransactionData)(nil),                  // 209: bedrockbuf.UseItemTransactionData
	(*PlayerBlockAction)(nil),                       // 210: bedrockbuf.PlayerBlockAction
	(*EnchantmentOption)(nil),                       // 211: bedrockbuf.EnchantmentOption
	(*PlayerListEntry)(nil),                         // 212: bedrockbuf.PlayerListEntry
	(*Skin)(nil),                                    // 213: bedrockbuf.Skin
	(*StackResourcePack)(nil),                       // 214: bedrockbuf.StackResourcePack
	(*ExperimentData)(nil),                          // 215: bedrockbuf.ExperimentData
	(*BehaviourPackInfo)(nil),                       // 216: bedrockbuf.BehaviourPackInfo
	(*TexturePackInfo)(nil),                         // 217: bedrockbuf.TexturePackInfo
	(*ScoreboardEntry)(nil),                         // 218: bedrockbuf.ScoreboardEntry
	(*ScoreboardIdentityEntry)(nil),                 // 219: bedrockbuf.ScoreboardIdentityEntry
	(*PlayerMovementSettings)(nil),                  // 220: bedrockbuf.PlayerMovementSettings
	(*BlockEntry)(nil),                              // 221: bedrockbuf.BlockEntry
	(*ItemEntry)(nil),                               // 222: bedrockbuf.ItemEntry
	(*StructureSettings)(nil),                       // 223: bedrockbuf.StructureSettings
	(*SubChunkEntry)(nil),                           // 224: bedrockbuf.SubChunkEntry
	(*BlockChangeEntry)(nil),                        // 225: bedrockbuf.BlockChangeEntry
	(*anypb.Any)(nil),                               // 226: google.protobuf.Any
}
var file_packets_proto_depIdxs = []int32{
	179, // 0: bedrockbuf.AddActorPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 1: bedrockbuf.AddActorPacket.velocity:type_name -> bedrockbuf.Vector3f
	180, // 2: bedrockbuf.AddActorPacket.attributes:type_name -> bedrockbuf.Attribute
	171, // 3: bedrockbuf.AddActorPacket.entity_metadata:type_name -> bedrockbuf.AddActorPacket.EntityMetadataEntry
	181, // 4: bedrockbuf.AddActorPacket.entity_links:type_name -> bedrockbuf.EntityLink
	182, // 5: bedrockbuf.AddItemActorPacket.item:type_name -> bedrockbuf.ItemInstance
	179, // 6: bedrockbuf.AddItemActorPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 7: bedrockbuf.AddItemActorPacket.velocity:type_name -> bedrockbuf.Vector3f
	172, // 8: bedrockbuf.AddItemActorPacket.entity_metadata:type_name -> bedrockbuf.AddItemActorPacket.EntityMetadataEntry
	179, // 9: bedrockbuf.AddPaintingPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 10: bedrockbuf.AddPlayerPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 11: bedrockbuf.AddPlayerPacket.velocity:type_name -> bedrockbuf.Vector3f
	182, // 12: bedrockbuf.AddPlayerPacket.held_item:type_name -> bedrockbuf.ItemInstance
	173, // 13: bedrockbuf.AddPlayerPacket.entity_metadata:type_name -> bedrockbuf.AddPlayerPacket.EntityMetadataEntry
	181, // 14: bedrockbuf.AddPlayerPacket.entity_links:type_name -> bedrockbuf.EntityLink
	174, // 15: bedrockbuf.AddVolumeEntityPacket.entity_metadata:type_name -> bedrockbuf.AddVolumeEntityPacket.EntityMetadataEntry
	183, // 16: bedrockbuf.AnvilDamagePacket.anvil_position:type_name -> bedrockbuf.Vector3i
	184, // 17: bedrockbuf.AvailableCommandsPacket.commands:type_name -> bedrockbuf.Command
	185, // 18: bedrockbuf.AvailableCommandsPacket.constraints:type_name -> bedrockbuf.CommandEnumConstraint
	183, // 19: bedrockbuf.BlockActorDataPacket.position:type_name -> bedrockbuf.Vector3i
	175, // 20: bedrockbuf.BlockActorDataPacket.nbt_data:type_name -> bedrockbuf.BlockActorDataPacket.NbtDataEntry
	183, // 21: bedrockbuf.BlockEventPacket.position:type_name -> bedrockbuf.Vector3i
	183, // 22: bedrockbuf.BlockPickRequestPacket.position:type_name -> bedrockbuf.Vector3i
	179, // 23: bedrockbuf.ChangeDimensionPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 24: bedrockbuf.ClientBoundDebugRendererPacket.position:type_name -> bedrockbuf.Vector3f
	186, // 25: bedrockbuf.ClientBoundMapItemDataPacket.tracked_objects:type_name -> bedrockbuf.MapTrackedObject
	187, // 26: bedrockbuf.ClientBoundMapItemDataPacket.decorations:type_name -> bedrockbuf.MapDecoration
	188, // 27: bedrockbuf.ClientBoundMapItemDataPacket.pixels:type_name -> bedrockbuf.RepeatedRGBA
	189, // 28: bedrockbuf.ClientCacheMissResponsePacket.blobs:type_name -> bedrockbuf.CacheBlob
	183, // 29: bedrockbuf.CommandBlockUpdatePacket.position:type_name -> bedrockbuf.Vector3i
	190, // 30: bedrockbuf.CommandOutputPacket.command_origin:type_name -> bedrockbuf.CommandOrigin
	191, // 31: bedrockbuf.CommandOutputPacket.output_messages:type_name -> bedrockbuf.CommandOutputMessage
	190, // 32: bedrockbuf.CommandRequestPacket.command_origin:type_name -> bedrockbuf.CommandOrigin
	183, // 33: bedrockbuf.ContainerOpenPacket.container_position:type_name -> bedrockbuf.Vector3i
	179, // 34: bedrockbuf.CorrectPlayerMovePredictionPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 35: bedrockbuf.CorrectPlayerMovePredictionPacket.delta:type_name -> bedrockbuf.Vector3f
	192, // 36: bedrockbuf.CraftingDataPacket.recipes:type_name -> bedrockbuf.IRecipe
	193, // 37: bedrockbuf.CraftingDataPacket.potion_recipes:type_name -> bedrockbuf.PotionRecipe
	194, // 38: bedrockbuf.CraftingDataPacket.potion_container_change_recipes:type_name -> bedrockbuf.PotionContainerChangeRecipe
	195, // 39: bedrockbuf.CraftingDataPacket.material_reducers:type_name -> bedrockbuf.MaterialReducer
	182, // 40: bedrockbuf.CraftingEventPacket.input:type_name -> bedrockbuf.ItemInstance
	182, // 41: bedrockbuf.CraftingEventPacket.output:type_name -> bedrockbuf.ItemInstance
	196, // 42: bedrockbuf.CreativeContentPacket.items:type_name -> bedrockbuf.CreativeItem
	197, // 43: bedrockbuf.EducationResourceURIPacket.resource:type_name -> bedrockbuf.EducationSharedResourceURI
	198, // 44: bedrockbuf.EducationSettingsPacket.external_link_settings:type_name -> bedrockbuf.EducationExternalLinkSettings
	199, // 45: bedrockbuf.EventPacket.event_data:type_name -> bedrockbuf.IEventData
	200, // 46: bedrockbuf.GameRulesChangedPacket.game_rules:type_name -> bedrockbuf.GameRule
	179, // 47: bedrockbuf.InteractPacket.position:type_name -> bedrockbuf.Vector3f
	182, // 48: bedrockbuf.InventoryContentPacket.content:type_name -> bedrockbuf.ItemInstance
	182, // 49: bedrockbuf.InventorySlotPacket.new_item:type_name -> bedrockbuf.ItemInstance
	201, // 50: bedrockbuf.InventoryTransactionPacket.legacy_set_item_slots:type_name -> bedrockbuf.LegacySetItemSlot
	202, // 51: bedrockbuf.InventoryTransactionPacket.actions:type_name -> bedrockbuf.InventoryAction
	203, // 52: bedrockbuf.InventoryTransactionPacket.transaction_data:type_name -> bedrockbuf.IInventoryTransactionData
	204, // 53: bedrockbuf.ItemComponentPacket.items:type_name -> bedrockbuf.ItemComponentEntry
	183, // 54: bedrockbuf.ItemFrameDropItemPacket.position:type_name -> bedrockbuf.Vector3i
	205, // 55: bedrockbuf.ItemStackRequestPacket.requests:type_name -> bedrockbuf.ItemStackRequest
	206, // 56: bedrockbuf.ItemStackResponsePacket.responses:type_name -> bedrockbuf.ItemStackResponse
	183, // 57: bedrockbuf.LabTablePacket.position:type_name -> bedrockbuf.Vector3i
	183, // 58: bedrockbuf.LecternUpdatePacket.position:type_name -> bedrockbuf.Vector3i
	207, // 59: bedrockbuf.LevelChunkPacket.position:type_name -> bedrockbuf.Vector2i
	179, // 60: bedrockbuf.LevelEventPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 61: bedrockbuf.LevelSoundEventPacket.position:type_name -> bedrockbuf.Vector3f
	182, // 62: bedrockbuf.MobArmourEquipmentPacket.helmet:type_name -> bedrockbuf.ItemInstance
	182, // 63: bedrockbuf.MobArmourEquipmentPacket.chestplate:type_name -> bedrockbuf.ItemInstance
	182, // 64: bedrockbuf.MobArmourEquipmentPacket.leggings:type_name -> bedrockbuf.ItemInstance
	182, // 65: bedrockbuf.MobArmourEquipmentPacket.boots:type_name -> bedrockbuf.ItemInstance
	182, // 66: bedrockbuf.MobEquipmentPacket.new_item:type_name -> bedrockbuf.ItemInstance
	179, // 67: bedrockbuf.MotionPredictionHintsPacket.velocity:type_name -> bedrockbuf.Vector3f
	179, // 68: bedrockbuf.MoveActorAbsolutePacket.position:type_name -> bedrockbuf.Vector3f
	179, // 69: bedrockbuf.MoveActorAbsolutePacket.rotation:type_name -> bedrockbuf.Vector3f
	179, // 70: bedrockbuf.MoveActorDeltaPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 71: bedrockbuf.MoveActorDeltaPacket.rotation:type_name -> bedrockbuf.Vector3f
	179, // 72: bedrockbuf.MovePlayerPacket.position:type_name -> bedrockbuf.Vector3f
	183, // 73: bedrockbuf.NetworkChunkPublisherUpdatePacket.position:type_name -> bedrockbuf.Vector3i
	179, // 74: bedrockbuf.PlaySoundPacket.position:type_name -> bedrockbuf.Vector3f
	183, // 75: bedrockbuf.PlayerActionPacket.block_position:type_name -> bedrockbuf.Vector3i
	179, // 76: bedrockbuf.PlayerAuthInputPacket.position:type_name -> bedrockbuf.Vector3f
	208, // 77: bedrockbuf.PlayerAuthInputPacket.move_vector:type_name -> bedrockbuf.Vector2f
	179, // 78: bedrockbuf.PlayerAuthInputPacket.gaze_direction:type_name -> bedrockbuf.Vector3f
	179, // 79: bedrockbuf.PlayerAuthInputPacket.delta:type_name -> bedrockbuf.Vector3f
	209, // 80: bedrockbuf.PlayerAuthInputPacket.item_interaction_data:type_name -> bedrockbuf.UseItemTransactionData
	205, // 81: bedrockbuf.PlayerAuthInputPacket.item_stack_request:type_name -> bedrockbuf.ItemStackRequest
	210, // 82: bedrockbuf.PlayerAuthInputPacket.block_actions:type_name -> bedrockbuf.PlayerBlockAction
	211, // 83: bedrockbuf.PlayerEnchantOptionsPacket.options:type_name -> bedrockbuf.EnchantmentOption
	208, // 84: bedrockbuf.PlayerInputPacket.movement:type_name -> bedrockbuf.Vector2f
	212, // 85: bedrockbuf.PlayerListPacket.entries:type_name -> bedrockbuf.PlayerListEntry
	213, // 86: bedrockbuf.PlayerSkinPacket.skin:type_name -> bedrockbuf.Skin
	214, // 87: bedrockbuf.ResourcePackStackPacket.behaviour_packs:type_name -> bedrockbuf.StackResourcePack
	214, // 88: bedrockbuf.ResourcePackStackPacket.texture_packs:type_name -> bedrockbuf.StackResourcePack
	215, // 89: bedrockbuf.ResourcePackStackPacket.experiments:type_name -> bedrockbuf.ExperimentData
	216, // 90: bedrockbuf.ResourcePacksInfoPacket.behaviour_packs:type_name -> bedrockbuf.BehaviourPackInfo
	217, // 91: bedrockbuf.ResourcePacksInfoPacket.texture_packs:type_name -> bedrockbuf.TexturePackInfo
	179, // 92: bedrockbuf.RespawnPacket.position:type_name -> bedrockbuf.Vector3f
	176, // 93: bedrockbuf.SetActorDataPacket.entity_metadata:type_name -> bedrockbuf.SetActorDataPacket.EntityMetadataEntry
	181, // 94: bedrockbuf.SetActorLinkPacket.entity_link:type_name -> bedrockbuf.EntityLink
	179, // 95: bedrockbuf.SetActorMotionPacket.velocity:type_name -> bedrockbuf.Vector3f
	218, // 96: bedrockbuf.SetScorePacket.entries:type_name -> bedrockbuf.ScoreboardEntry
	219, // 97: bedrockbuf.SetScoreboardIdentityPacket.entries:type_name -> bedrockbuf.ScoreboardIdentityEntry
	183, // 98: bedrockbuf.SetSpawnPositionPacket.position:type_name -> bedrockbuf.Vector3i
	183, // 99: bedrockbuf.SetSpawnPositionPacket.spawn_position:type_name -> bedrockbuf.Vector3i
	179, // 100: bedrockbuf.SpawnExperienceOrbPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 101: bedrockbuf.SpawnParticleEffectPacket.position:type_name -> bedrockbuf.Vector3f
	179, // 102: bedrockbuf.StartGamePacket.player_position:type_name -> bedrockbuf.Vector3f
	183, // 103: bedrockbuf.StartGamePacket.world_spawn:type_name -> bedrockbuf.Vector3i
	200, // 104: bedrockbuf.StartGamePacket.game_rules:type_name -> bedrockbuf.GameRule
	215, // 105: bedrockbuf.StartGamePacket.experiments:type_name -> bedrockbuf.ExperimentData
	197, // 106: bedrockbuf.StartGamePacket.education_shared_resource_uri:type_name -> bedrockbuf.EducationSharedResourceURI
	220, // 107: bedrockbuf.StartGamePacket.player_movement_settings:type_name -> bedrockbuf.PlayerMovementSettings
	221, // 108: bedrockbuf.StartGamePacket.blocks:type_name -> bedrockbuf.BlockEntry
	222, // 109: bedrockbuf.StartGamePacket.items:type_name -> bedrockbuf.ItemEntry
	183, // 110: bedrockbuf.StructureBlockUpdatePacket.position:type_name -> bedrockbuf.Vector3i
	223, // 111: bedrockbuf.StructureBlockUpdatePacket.settings:type_name -> bedrockbuf.StructureSettings
	183, // 112: bedrockbuf.StructureTemplateDataRequestPacket.position:type_name -> bedrockbuf.Vector3i
	223, // 113: bedrockbuf.StructureTemplateDataRequestPacket.settings:type_name -> bedrockbuf.StructureSettings
	177, // 114: bedrockbuf.StructureTemplateDataResponsePacket.structure_template:type_name -> bedrockbuf.StructureTemplateDataResponsePacket.StructureTemplateEntry
	183, // 115: bedrockbuf.SubChunkPacket.position:type_name -> bedrockbuf.Vector3i
	224, // 116: bedrockbuf.SubChunkPacket.sub_chunk_entries:type_name -> bedrockbuf.SubChunkEntry
	183, // 117: bedrockbuf.SubChunkRequestPacket.position:type_name -> bedrockbuf.Vector3i
	183, // 118: bedrockbuf.SubChunkRequestPacket.offsets:type_name -> bedrockbuf.Vector3i
	178, // 119: bedrockbuf.SyncActorPropertyPacket.property_data:type_name -> bedrockbuf.SyncActorPropertyPacket.PropertyDataEntry
	180, // 120: bedrockbuf.UpdateAttributesPacket.attributes:type_name -> bedrockbuf.Attribute
	183, // 121: bedrockbuf.UpdateBlockPacket.position:type_name -> bedrockbuf.Vector3i
	183, // 122: bedrockbuf.UpdateBlockSyncedPacket.position:type_name -> bedrockbuf.Vector3i
	183, // 123: bedrockbuf.UpdateSubChunkBlocksPacket.position:type_name -> bedrockbuf.Vector3i
	225, // 124: bedrockbuf.UpdateSubChunkBlocksPacket.blocks:type_name -> bedrockbuf.BlockChangeEntry
	225, // 125: bedrockbuf.UpdateSubChunkBlocksPacket.extra:type_name -> bedrockbuf.BlockChangeEntry
	226, // 126: bedrockbuf.AddActorPacket.EntityMetadataEntry.value:type_name -> google.protobuf.Any
	226, // 127: bedrockbuf.AddItemActorPacket.EntityMetadataEntry.value:type_name -> google.protobuf.Any
	226, // 128: bedrockbuf.AddPlayerPacket.EntityMetadataEntry.value:type_name -> google.protobuf.Any
	226, // 129: bedrockbuf.AddVolumeEntityPacket.EntityMetadataEntry.value:type_name -> google.protobuf.Any
	226, // 130: bedrockbuf.BlockActorDataPacket.NbtDataEntry.value:type_name -> google.protobuf.Any
	226, // 131: bedrockbuf.SetActorDataPacket.EntityMetadataEntry.value:type_name -> google.protobuf.Any
	226, // 132: bedrockbuf.StructureTemplateDataResponsePacket.StructureTemplateEntry.value:type_name -> google.protobuf.Any
	226, // 133: bedrockbuf.SyncActorPropertyPacket.PropertyDataEntry.value:type_name -> google.protobuf.Any
	134, // [134:134] is the sub-list for method output_type
	134, // [134:134] is the sub-list for method input_type
	134, // [134:134] is the sub-list for extension type_name
	134, // [134:134] is the sub-list for extension extendee
	0,   // [0:134] is the sub-list for field type_name
}

func init() { file_packets_proto_init() }
func file_packets_proto_init() {
	if File_packets_proto != nil {
		return
	}
	file_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_packets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActorPickRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddActorPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBehaviourTreePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEntityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddItemActorPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPaintingPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPlayerPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVolumeEntityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdventureSettingsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimateEntityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnimatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnvilDamagePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomationClientConnectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableActorIdentifiersPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableCommandsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiomeDefinitionListPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockActorDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockPickRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookEditPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BossEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameraPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CameraShakePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeDimensionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkRadiusUpdatedPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBoundDebugRendererPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientBoundMapItemDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCacheBlobStatusPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCacheMissResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientCacheStatusPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientStartItemCooldownPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientToServerHandshakePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeBuilderPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeBuilderSourcePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandBlockUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandOutputPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompletedUsingItemPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerClosePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerOpenPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerSetDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorrectPlayerMovePredictionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CraftingDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CraftingEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreativeContentPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EducationResourceURIPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EducationSettingsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmoteListPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmotePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterTextPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GUIDataPickItemPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRulesChangedPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HurtArmourPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryContentPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventorySlotPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryTransactionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemComponentPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemFrameDropItemPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemStackRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemStackResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabTablePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LecternUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelChunkPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelEventGenericPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelSoundEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapCreateLockedCopyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapInfoRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobArmourEquipmentPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobEffectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobEquipmentPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModalFormRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModalFormResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotionPredictionHintsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveActorAbsolutePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveActorDeltaPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovePlayerPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiPlayerSettingsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NPCDialoguePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NPCRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkChunkPublisherUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkSettingsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkStackLatencyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnScreenTextureAnimationPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketViolationWarningPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PassengerJumpPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoInfoRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoTransferPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaySoundPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayStatusPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerArmourDamagePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAuthInputPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerEnchantOptionsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerFogPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerHotBarPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerInputPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerListPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerSkinPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionTrackingDBClientRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionTrackingDBServerBroadcastPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseReceiptPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveActorPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEntityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveObjectivePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVolumeEntityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestChunkRadiusPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePackChunkDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePackChunkRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePackClientResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePackDataInfoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePackStackPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePacksInfoPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespawnPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptCustomEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScriptMessagePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSettingsRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSettingsResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerToClientHandshakePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActorDataPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActorLinkPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActorMotionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCommandsEnabledPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultGameTypePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDifficultyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDisplayObjectivePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHealthPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLastHurtByPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocalPlayerAsInitialisedPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPlayerGameTypePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScorePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetScoreboardIdentityPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpawnPositionPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTimePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTitlePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettingsCommandPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowCreditsPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowProfilePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowStoreOfferPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleEventPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimulationTypePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnExperienceOrbPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnParticleEffectPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartGamePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopSoundPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructureBlockUpdatePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructureTemplateDataRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructureTemplateDataResponsePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubChunkPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubChunkRequestPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubClientLoginPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncActorPropertyPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeItemActorPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickSyncPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAttributesPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBlockSyncedPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEquipPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlayerGameTypePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSoftEnumPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubChunkBlocksPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTradePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packets_proto_msgTypes[50].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   179,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packets_proto_goTypes,
		DependencyIndexes: file_packets_proto_depIdxs,
		MessageInfos:      file_packets_proto_msgTypes,
	}.Build()
	File_packets_proto = out.File
	file_packets_proto_rawDesc = nil
	file_packets_proto_goTypes = nil
	file_packets_proto_depIdxs = nil
}
